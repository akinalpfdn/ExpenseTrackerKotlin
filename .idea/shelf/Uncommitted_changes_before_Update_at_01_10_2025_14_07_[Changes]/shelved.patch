Index: app/src/main/res/values-tr/strings.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<resources>\r\n    <string name=\"app_name\">Expense Tracker</string>\r\n    <string name=\"general_settings\">Genel Ayarlar</string>\r\n    <string name=\"categories\">Kategoriler</string>\r\n    <string name=\"default_currency\">Varsayılan Para Birimi</string>\r\n    <string name=\"currency_description\">Yeni harcamalar için kullanılacak varsayılan para birimi</string>\r\n    <string name=\"daily_spending_limit\">Günlük Harcama Limiti</string>\r\n    <string name=\"enter_daily_limit\">Günlük limit girin</string>\r\n    <string name=\"daily_limit_description\">Her güne özel harcama limitiniz. Boş bırakılırsa limit uygulanmaz</string>\r\n    <string name=\"monthly_spending_limit\">Aylık Harcama Limiti</string>\r\n    <string name=\"enter_monthly_limit\">Aylık limit girin</string>\r\n    <string name=\"monthly_limit_description\">Aylık toplam harcama limitiniz. Progress ring bu değere göre gösterilir</string>\r\n    <string name=\"theme\">Tema</string>\r\n    <string name=\"dark_theme\">Koyu Tema</string>\r\n    <string name=\"light_theme\">Açık Tema</string>\r\n    <string name=\"theme_description\">Uygulamanın görünümünü değiştirin</string>\r\n    <string name=\"cancel\">İptal</string>\r\n    <string name=\"save\">Kaydet</string>\r\n    <!-- RecurringExpensesScreen -->\r\n    <string name=\"recurring_expenses\">Tekrar Eden Harcamalar</string>\r\n    <string name=\"sort\">Sort</string>\r\n    <string name=\"search\">Search</string>\r\n    <string name=\"back\">Back</string>\r\n    <string name=\"amount_high_to_low\">Miktar: Büyükten Küçüğe</string>\r\n    <string name=\"amount_low_to_high\">Miktar: Küçükten Büyüğe</string>\r\n    <string name=\"description_a_to_z\">Açıklama: A-Z</string>\r\n    <string name=\"description_z_to_a\">Açıklama: Z-A</string>\r\n    <string name=\"category_a_to_z\">Kategori: A-Z</string>\r\n    <string name=\"category_z_to_a\">Kategori: Z-A</string>\r\n    <string name=\"end_date_recurring\">Bitiş: %s</string>\r\n    <string name=\"search_placeholder\">Açıklama, miktar veya kategoriye göre ara...</string>\r\n    <string name=\"no_search_results\">Arama sonucu bulunamadı</string>\r\n    <string name=\"search_no_results_description\">\\\"%1$s\\\" için sonuç bulunamadı. Farklı bir arama terimi deneyin.</string>\r\n    <string name=\"no_recurring_expenses\">Henüz tekrar eden harcama yok</string>\r\n    <string name=\"recurring_expenses_hint\">Tekrar eden harcama eklemek için + butonuna basın</string>\r\n    <string name=\"results_found\">%d sonuç bulundu</string>\r\n    <string name=\"daily\">Her gün</string>\r\n    <string name=\"weekdays\">Hafta içi</string>\r\n    <string name=\"weekly\">Haftalık</string>\r\n    <string name=\"monthly\">Aylık</string>\r\n    <string name=\"exchange_rate\">Kur: %s</string>\r\n    <string name=\"delete\">Sil</string>\r\n    <string name=\"amount\">Miktar</string>\r\n    <string name=\"description\">Açıklama</string>\r\n    <string name=\"exchange_rate_field\">Döviz Kuru</string>\r\n    <string name=\"select_date\">Tarih Seç</string>\r\n    <string name=\"delete_recurring_expense\">Tekrar Eden Harcamayı Sil</string>\r\n    <string name=\"delete_recurring_confirmation\">Bu tekrar eden harcamayı bugünden itibaren silmek istediğinizden emin misiniz? Bu işlem geri alınamaz.</string>\r\n    <string name=\"ok\">Tamam</string>\r\n    <!-- PlanningScreen -->\r\n    <string name=\"financial_planning\">Finansal Planlama</string>\r\n    <string name=\"planning_description\">Gelecek planlarınızı oluşturun ve takip edin</string>\r\n    <string name=\"no_plans_yet\">Henüz plan yok</string>\r\n    <string name=\"create_first_plan\">İlk finansal planınızı oluşturmak için + butonuna basın</string>\r\n    <string name=\"add_plan\">Plan Ekle</string>\r\n    <string name=\"delete_plan\">Planı Sil</string>\r\n    <string name=\"delete_plan_confirmation\">\\\"%1$s\\\" planını silmek istediğinizden emin misiniz? Bu işlem geri alınamaz.</string>\r\n\r\n    <!-- ExpensesScreen -->\r\n    <string name=\"results_count\">%d sonuç</string>\r\n    <string name=\"search_expenses_placeholder\">Açıklama, miktar veya kategoriye göre ara...</string>\r\n    <string name=\"monthly_limit_exceeded\">⚠\uFE0F Aylık harcama limitinizi aştınız!</string>\r\n    <string name=\"time_newest_first\">Tarih: Yeniden Eskiye</string>\r\n    <string name=\"time_oldest_first\">Tarih: Eskiden Yeniye</string>\r\n\r\n    <!-- AnalysisScreen -->\r\n    <string name=\"current_period_total\">Bu Dönem Toplam Harcama</string>\r\n    <string name=\"vs_previous_month\">Önceki aya göre</string>\r\n    <string name=\"vs_6_month_average\">6 ay ortalamasına göre</string>\r\n    <string name=\"no_expenses_this_period\">Bu dönem henüz harcama yok</string>\r\n    <string name=\"analysis_will_appear\">Harcama eklediğinizde analiz burada görünecek</string>\r\n    <string name=\"previous_month\">Önceki ay</string>\r\n    <string name=\"next_month\">Sonraki ay</string>\r\n    <string name=\"select_date_range\">Tarih aralığı seçin</string>\r\n    <string name=\"fixed_expenses\">Sabit Harcamalar</string>\r\n    <string name=\"recurring_expenses_description\">3+ ay devam edecek olan harcamalar</string>\r\n    <string name=\"recurring_expenses_cd\">Tekrarlayan harcamalar</string>\r\n    <string name=\"pick_date_range\">Tarih aralığı seçin</string>\r\n\r\n    <!-- AddExpenseScreen -->\r\n    <string name=\"enter_expense_details\">Harcama detaylarını girin</string>\r\n    <string name=\"expense_amount_placeholder\">0.00</string>\r\n    <string name=\"search_placeholder_category\">ara...</string>\r\n    <string name=\"description_optional\">Açıklama (İsteğe bağlı)</string>\r\n    <string name=\"add_description_placeholder\">Açıklama ekleyin...</string>\r\n    <string name=\"recurrence_type\">Tekrar Türü</string>\r\n    <string name=\"end_date\">Bitiş Tarihi</string>\r\n    <string name=\"exchange_rate_label\">Döviz Kuru (1 %1$s = ? %2$s)</string>\r\n    <string name=\"exchange_rate_example\">Örn: 0.035 (1 %1$s = 0.035 %2$s)</string>\r\n    <string name=\"exchange_rate_note\">Bu kur, progress hesaplamaları için kullanılacak</string>\r\n    <string name=\"add_expense\">Harcama Ekle</string>\r\n    <string name=\"update_expense\">Harcama Güncelle</string>\r\n    <string name=\"none\">Yok</string>\r\n    <string name=\"one_time\">Tek seferlik</string>\r\n    <string name=\"every_day\">Her gün</string>\r\n    <string name=\"weekdays_only\">Hafta içi her gün</string>\r\n    <string name=\"once_per_week\">Haftada 1 kez</string>\r\n    <string name=\"once_per_month\">Ayda 1 kez</string>\r\n    <string name=\"edit_expense\">Harcamayı Düzenle</string>\r\n    <string name=\"new_expense\">Yeni Harcama</string>\r\n    <string name=\"selectCategory\">Kategori seçim</string>\r\n    <string name=\"single_time\">Tek seferlik</string>\r\n    <string name=\"okay\">Tamam</string>\r\n\r\n    <!-- SubCategoryDetailBottomSheet -->\r\n    <string name=\"parent_category\">Ana Kategori</string>\r\n    <string name=\"total_amount\">Toplam Tutar</string>\r\n    <string name=\"expense_count\">Harcama Sayısı</string>\r\n    <string name=\"average\">Ortalama</string>\r\n    <string name=\"expenses\">Harcamalar</string>\r\n    <string name=\"recurring_label\">Tekrarlayan</string>\r\n\r\n    <!-- ProgressRingComponent -->\r\n    <string name=\"monthly_label\">Aylık</string>\r\n    <string name=\"daily_label\">Günlük</string>\r\n\r\n    <!-- PlanDetailBottomSheet -->\r\n    <string name=\"update_expense_data\">Harcama Verilerini Güncelle</string>\r\n    <string name=\"update_expense_data_description\">Mevcut ve gelecek ayları güncel verilerle yeniden hesaplar</string>\r\n    <string name=\"total_net_value\">Toplam Net Değer</string>\r\n    <string name=\"month\">Ay</string>\r\n    <string name=\"income\">Gelir</string>\r\n    <string name=\"expense\">Gider</string>\r\n    <string name=\"net\">Net</string>\r\n    <string name=\"total\">Toplam</string>\r\n\r\n    <!-- PlanCard -->\r\n    <string name=\"avg_monthly_income\">Ort. Aylık Gelir</string>\r\n    <string name=\"avg_monthly_expense\">Ort. Aylık Gider</string>\r\n    <string name=\"current_net\">Şu Anki Net</string>\r\n    <string name=\"target_net\">Hedef Net</string>\r\n\r\n    <!-- MonthlyLineChart -->\r\n    <string name=\"all\">Tümü</string>\r\n    <string name=\"one_time_expense\">Tek Seferlik</string>\r\n    <string name=\"period_expense_trend\">Dönemlik Harcama Trendi</string>\r\n    <string name=\"expand\">Genişlet</string>\r\n    <string name=\"collapse\">Daralt</string>\r\n    <string name=\"no_data_found\">Veri bulunamadı</string>\r\n    <string name=\"highest\">En yüksek</string>\r\n\r\n    <!-- MonthlyExpensesView -->\r\n    <string name=\"no_expenses_this_month\">Bu ayda harcama yok</string>\r\n    <string name=\"add_expense_for_month\">Bu aya harcama eklemek için ana ekranda + butonuna basın</string>\r\n\r\n    <!-- MonthlyCalendarView - Day headers -->\r\n    <string name=\"monday_short\">P</string>\r\n    <string name=\"tuesday_short\">S</string>\r\n    <string name=\"wednesday_short\">Ç</string>\r\n    <string name=\"thursday_short\">P</string>\r\n    <string name=\"friday_short\">C</string>\r\n    <string name=\"saturday_short\">C</string>\r\n    <string name=\"sunday_short\">P</string>\r\n\r\n    <!-- MonthlyAnalysisPieChart -->\r\n    <string name=\"category_distribution\">Kategori Dağılımı</string>\r\n    <string name=\"tap_chart_to_select_category\">Kategori seçmek için grafiğe dokunun</string>\r\n\r\n    <!-- ExpenseRowView -->\r\n    <string name=\"unknown\">Bilinmeyen</string>\r\n    <string name=\"delete_expense\">Harcamayı Sil</string>\r\n    <string name=\"delete_expense_confirmation\">Bu harcamayı silmek istediğinizden emin misiniz? Bu işlem geri alınamaz.</string>\r\n\r\n    <!-- DailyCategoryDetailBottomSheet -->\r\n    <string name=\"amount_high_to_low_arrow\">Tutar (Yüksek → Düşük)</string>\r\n    <string name=\"amount_low_to_high_arrow\">Tutar (Düşük → Yüksek)</string>\r\n    <string name=\"time_newest_first_arrow\">Zaman (Yeni → Eski)</string>\r\n    <string name=\"time_oldest_first_arrow\">Zaman (Eski → Yeni)</string>\r\n    <string name=\"description_a_to_z_arrow\">Açıklama (A → Z)</string>\r\n    <string name=\"description_z_to_a_arrow\">Açıklama (Z → A)</string>\r\n    <string name=\"total_spending\">Toplam Harcama</string>\r\n    <string name=\"no_expenses_in_category\">Bu kategoride harcama bulunamadı</string>\r\n    <string name=\"expense_singular\">Harcama</string>\r\n\r\n    <!-- CreatePlanDialog -->\r\n    <string name=\"create_new_plan\">Yeni Plan Oluştur</string>\r\n    <string name=\"plan_name\">Plan Adı</string>\r\n    <string name=\"plan_name_example\">Örn: 2024 Tasarruf Planı</string>\r\n    <string name=\"plan_duration\">Plan Süresi</string>\r\n    <string name=\"apply_interest_to_savings\">Faiz Uygula (Birikime)</string>\r\n    <string name=\"simple_interest\">Basit Faiz</string>\r\n    <string name=\"compound_interest\">Bileşik Faiz</string>\r\n    <string name=\"annual_interest_rate\">Yıllık faiz oranı %</string>\r\n    <string name=\"interest_applied_to_positive_savings\">Pozitif birikime faiz uygulanır</string>\r\n    <string name=\"interest_type\">Faiz Türü</string>\r\n    <string name=\"monthly_income_currency\">Aylık Gelir (%s)</string>\r\n    <string name=\"use_app_expense_data\">Uygulamanın harcama verilerini kullan</string>\r\n    <string name=\"monthly_expenses_currency\">Aylık Harcama (%s)</string>\r\n    <string name=\"manual_monthly_expense_amount\">Manuel aylık harcama miktarı</string>\r\n    <string name=\"enter_manual_expense_amount\">Manuel harcama miktarını girin</string>\r\n    <string name=\"apply_inflation\">Enflasyon Uygula</string>\r\n    <string name=\"annual_percentage_rate\">Yıllık % oran</string>\r\n    <string name=\"create\">Oluştur</string>\r\n\r\n    <!-- CategorySummarySection -->\r\n    <string name=\"category_details\">Kategori Detayları</string>\r\n    <string name=\"main_categories\">Ana Kategoriler</string>\r\n    <string name=\"sub_categories\">Alt Kategoriler</string>\r\n    <string name=\"expense_lowercase\">harcama</string>\r\n    <string name=\"see_details\">Detayları gör</string>\r\n\r\n    <!-- CategoryPopupLines -->\r\n    <string name=\"vs_previous_month_colon\">Önceki aya göre:</string>\r\n    <string name=\"vs_average_colon\">Ortalamaya göre:</string>\r\n\r\n    <!-- CategoryManagementScreen -->\r\n    <string name=\"add_new_main_category\">Yeni Ana Kategori Ekle</string>\r\n    <string name=\"add_main_category_content_desc\">Add Main Category</string>\r\n    <string name=\"category_name_hint\">Kategori adı girin</string>\r\n    <string name=\"unique_category_name_note\">Kategori için benzersiz bir isim belirleyin</string>\r\n    <string name=\"icon_selection\">İkon Seçimi</string>\r\n    <string name=\"color_selection\">Renk Seçimi</string>\r\n    <string name=\"add_button\">Ekle</string>\r\n    <string name=\"main_category\">Ana Kategori</string>\r\n    <string name=\"select_category\">Kategori seçin</string>\r\n    <string name=\"subcategory_name\">Alt Kategori Adı</string>\r\n    <string name=\"subcategory_name_hint\">Alt kategori adı girin</string>\r\n    <string name=\"unique_subcategory_name_note\">Alt kategori için benzersiz bir isim belirleyin</string>\r\n    <string name=\"edit_subcategory\">Alt Kategori Düzenle</string>\r\n    <string name=\"edit_category\">Kategori Düzenle</string>\r\n    <string name=\"edit\">Düzenle</string>\r\n    <string name=\"enter_name_hint\">Ad girin</string>\r\n    <string name=\"delete_confirmation\">Silme Onayı</string>\r\n    <string name=\"delete_item_confirmation\">\"%s\" öğesini silmek istediğinizden emin misiniz? Bu işlem geri alınamaz.</string>\r\n    <string name=\"this_item\">Bu öğe</string>\r\n    <string name=\"collapse_desc\">Collapse</string>\r\n    <string name=\"expand_desc\">Expand</string>\r\n    <string name=\"edit_category_desc\">Edit Category</string>\r\n    <string name=\"delete_category_desc\">Delete Category</string>\r\n    <string name=\"add_subcategory\">Alt Kategori Ekle</string>\r\n    <string name=\"add_subcategory_desc\">Add Subcategory</string>\r\n    <string name=\"edit_subcategory_desc\">Edit Subcategory</string>\r\n    <string name=\"delete_subcategory_desc\">Delete Subcategory</string>\r\n    <string name=\"selected\">Selected</string>\r\n\r\n    <!-- CategoryDistributionChart -->\r\n    <string name=\"no_data\">Veri yok</string>\r\n    <string name=\"category\">Kategori</string>\r\n\r\n    <!-- CategoryDetailBottomSheet -->\r\n    <string name=\"sort_amount_desc\">Tutara Göre (Yüksek → Düşük)</string>\r\n    <string name=\"sort_amount_asc\">Tutara Göre (Düşük → Yüksek)</string>\r\n    <string name=\"sort_date_desc\">Tarihe Göre (Yeni → Eski)</string>\r\n    <string name=\"sort_date_asc\">Tarihe Göre (Eski → Yeni)</string>\r\n    <string name=\"sort_name_asc\">Açıklamaya Göre (A → Z)</string>\r\n    <string name=\"sort_name_desc\">Açıklamaya Göre (Z → A)</string>\r\n\r\n    <!-- SubCategory - Default subcategories -->\r\n    <!-- Food & Drink -->\r\n    <string name=\"subcategory_restaurant\">Restoran</string>\r\n    <string name=\"subcategory_kitchen_shopping\">Mutfak alışverişi</string>\r\n\r\n    <!-- Housing -->\r\n    <string name=\"subcategory_rent\">Kira</string>\r\n    <string name=\"subcategory_dues\">Aidat</string>\r\n    <string name=\"subcategory_mortgage\">Mortgage ödemesi</string>\r\n    <string name=\"subcategory_electricity\">Elektrik faturası</string>\r\n    <string name=\"subcategory_water\">Su faturası</string>\r\n    <string name=\"subcategory_heating\">Isınma</string>\r\n    <string name=\"subcategory_internet_phone\">İnternet ve telefon</string>\r\n    <string name=\"subcategory_other_bills\">Diğer Faturalar</string>\r\n    <string name=\"subcategory_general_shopping\">Genel Market alışverişi</string>\r\n\r\n    <!-- Transportation -->\r\n    <string name=\"subcategory_fuel\">Akaryakıt</string>\r\n    <string name=\"subcategory_public_transport\">Toplu taşıma</string>\r\n    <string name=\"subcategory_car_maintenance\">Araç bakımı</string>\r\n    <string name=\"subcategory_car_rental\">Oto kiralama</string>\r\n    <string name=\"subcategory_taxi_uber\">Taksi/Uber</string>\r\n    <string name=\"subcategory_car_insurance\">Araç sigortası</string>\r\n    <string name=\"subcategory_mtv\">MTV</string>\r\n    <string name=\"subcategory_parking_fees\">Park ücretleri</string>\r\n\r\n    <!-- Health -->\r\n    <string name=\"subcategory_doctor_appointment\">Doktor randevusu</string>\r\n    <string name=\"subcategory_medicines\">İlaçlar</string>\r\n    <string name=\"subcategory_gym_membership\">Spor salonu üyeliği</string>\r\n    <string name=\"subcategory_cosmetics\">Kozmatik</string>\r\n\r\n    <!-- Entertainment -->\r\n    <string name=\"subcategory_cinema_theater\">Sinema ve tiyatro</string>\r\n    <string name=\"subcategory_concerts_events\">Konser ve etkinlikler</string>\r\n    <string name=\"subcategory_subscriptions\">Abonelikler</string>\r\n    <string name=\"subcategory_books_magazines\">Kitaplar ve dergiler</string>\r\n    <string name=\"subcategory_travel_vacation\">Seyahat ve tatil</string>\r\n    <string name=\"subcategory_games_apps\">Oyunlar ve uygulamalar</string>\r\n\r\n    <!-- Education -->\r\n    <string name=\"subcategory_course_fees\">Kurs ücretleri</string>\r\n    <string name=\"subcategory_education_materials\">Eğitim materyalleri</string>\r\n    <string name=\"subcategory_seminars\">Seminerler</string>\r\n    <string name=\"subcategory_online_courses\">Online kurslar</string>\r\n\r\n    <!-- Shopping -->\r\n    <string name=\"subcategory_electronics\">Elektronik</string>\r\n    <string name=\"subcategory_clothing\">Giyim</string>\r\n    <string name=\"subcategory_home_goods\">Ev eşyaları</string>\r\n    <string name=\"subcategory_gifts\">Hediyeler</string>\r\n    <string name=\"subcategory_perfume\">Parfüm</string>\r\n\r\n    <!-- Pets -->\r\n    <string name=\"subcategory_pet_food_toys\">Mama ve oyuncaklar</string>\r\n    <string name=\"subcategory_vet_services\">Veteriner hizmetleri</string>\r\n    <string name=\"subcategory_pet_insurance\">Evcil hayvan sigortası</string>\r\n\r\n    <!-- Work -->\r\n    <string name=\"subcategory_work_meals\">İş yemekleri</string>\r\n    <string name=\"subcategory_office_supplies\">Ofis malzemeleri</string>\r\n    <string name=\"subcategory_business_travel\">İş seyahatleri</string>\r\n    <string name=\"subcategory_work_education\">Eğitim ve seminerler</string>\r\n    <string name=\"subcategory_freelance_payments\">Freelance iş ödemeleri</string>\r\n\r\n    <!-- Tax -->\r\n    <string name=\"subcategory_tax_payments\">Vergi ödemeleri</string>\r\n\r\n    <!-- Others -->\r\n    <string name=\"subcategory_other_expenses\">Diğer Harcamalar</string>\r\n    <!-- ExpensesScreen - Empty state messages -->\r\n    <string name=\"no_search_results_found\">Arama sonucu bulunamadı</string>\r\n    <string name=\"no_expenses_yet\">Henüz harcama yok</string>\r\n    <string name=\"no_expenses_today\">Bugün harcama yok</string>\r\n    <string name=\"no_search_results_description\">\\\"%1$s\\\" için sonuç bulunamadı. Farklı bir arama terimi deneyin.</string>\r\n    <string name=\"first_expense_hint\">İlk harcamanızı eklemek için + butonuna basın</string>\r\n    <string name=\"add_expense_for_day_hint\">Bu güne harcama eklemek için + butonuna basın</string>\r\n    <string name=\"calendar_tab\">Takvim</string>\r\n    <string name=\"expenses_tab\">Harcamalar</string>\r\n    <!-- Category - Default categories -->\r\n    <string name=\"category_food\">Gıda ve İçecek</string>\r\n    <string name=\"category_housing\">Konut</string>\r\n    <string name=\"category_transportation\">Ulaşım</string>\r\n    <string name=\"category_health\">Sağlık ve Kişisel Bakım</string>\r\n    <string name=\"category_entertainment\">Eğlence ve Hobiler</string>\r\n    <string name=\"category_education\">Eğitim</string>\r\n    <string name=\"category_shopping\">Alışveriş</string>\r\n    <string name=\"category_pets\">Evcil Hayvan</string>\r\n    <string name=\"category_work\">İş ve Profesyonel Harcamalar</string>\r\n    <string name=\"category_tax\">Vergi ve Hukuki Harcamalar</string>\r\n    <string name=\"category_donations\">Bağışlar ve Yardımlar</string>\r\n    <string name=\"category_others\">Diğer Ödemeler</string>\r\n\r\n    <!-- PlanningUtils - Plan status and validation -->\r\n    <string name=\"plan_status_not_started\">Başlamadı</string>\r\n    <string name=\"plan_status_completed\">Tamamlandı</string>\r\n    <string name=\"plan_status_active\">Aktif</string>\r\n    <string name=\"validation_plan_name_empty\">Plan adı boş olamaz</string>\r\n    <string name=\"validation_monthly_income_positive\">Aylık gelir 0\\'dan büyük olmalıdır</string>\r\n    <string name=\"validation_duration_positive\">Plan süresi 0\\'dan büyük olmalıdır</string>\r\n    <string name=\"validation_duration_max_10_years\">Plan süresi 10 yıldan fazla olamaz</string>\r\n    <string name=\"validation_inflation_rate_range\">Enflasyon oranı -%50%% ile %100%% arasında olmalıdır</string>\r\n    <string name=\"duration_3_months\">3 Ay</string>\r\n    <string name=\"duration_6_months\">6 Ay</string>\r\n    <string name=\"duration_1_year\">1 Yıl</string>\r\n    <string name=\"duration_1_5_years\">1,5 Yıl</string>\r\n    <string name=\"duration_2_years\">2 Yıl</string>\r\n    <string name=\"duration_3_years\">3 Yıl</string>\r\n    <string name=\"duration_5_years\">5 Yıl</string>\r\n\r\n    <!-- PlanningViewModel - Error messages -->\r\n    <string name=\"error_loading_plan\">Plan yüklenirken hata: %s</string>\r\n    <string name=\"error_creating_plan\">Plan oluşturulurken hata: %s</string>\r\n    <string name=\"error_deleting_plan\">Plan silinirken hata: %s</string>\r\n    <string name=\"error_updating_expense_data\">Harcama verileri güncellenirken hata: %s</string>\r\n    <string name=\"error_updating_plan_calculations\">Plan hesaplamaları güncellenirken hata: %s</string>\r\n    <string name=\"error_saving_changes\">Değişiklikler kaydedilirken hata: %s</string>\r\n</resources>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/values-tr/strings.xml b/app/src/main/res/values-tr/strings.xml
--- a/app/src/main/res/values-tr/strings.xml	(revision 704fb63dbd103d83a77a5d2f59944f4c74685798)
+++ b/app/src/main/res/values-tr/strings.xml	(date 1759316142958)
@@ -363,4 +363,23 @@
     <string name="error_updating_expense_data">Harcama verileri güncellenirken hata: %s</string>
     <string name="error_updating_plan_calculations">Plan hesaplamaları güncellenirken hata: %s</string>
     <string name="error_saving_changes">Değişiklikler kaydedilirken hata: %s</string>
+
+
+    <!-- Billing Page -->
+    <string name="no_add_text">Seni saçma reklamlar ile boğmak istemiyorum ve tüm özelliklere premium versiyon olmadan ulaşabilmeni istiyorum.
+                        Ama geliştirme yapabilmem için gelire ihtiyacım var.
+                        Uygulamamı beğendiysen ve destek olmak istersen bir çayını içerim(Fiyatlara enflasyon etki etmiyor burada) :).</string>
+    <string name="buy_water">Su ısmarla</string>
+    <string name="buy_bagel">Simit ısmarla</string>
+    <string name="buy_tea">Çay ısmarla</string>
+    <string name="buy_coffee">kahve ısmarla</string>
+    <string name="buy_wrap">Hatay dürüm ısmarla</string>
+    <string name="buy_burger">burger ısmarla</string>
+    <string name="buy_doner">İskender ısmarla</string>
+    <string name="max_donation">Şaşırt beni</string>
+
+
+
+    <string name="recurring_total">"Toplam: "</string>
+    <string name="recurring_remaining">"Kalan: "</string>
 </resources>
\ No newline at end of file
Index: app/src/main/java/com/example/expensetrackerkotlin/ui/screens/ExpensesScreen.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.expensetrackerkotlin.ui.screens\r\n\r\nimport androidx.compose.animation.AnimatedVisibility\r\nimport androidx.compose.animation.expandVertically\r\nimport androidx.compose.animation.shrinkVertically\r\nimport androidx.compose.foundation.background\r\nimport androidx.compose.foundation.border\r\nimport androidx.compose.foundation.layout.*\r\nimport androidx.compose.foundation.lazy.LazyColumn\r\nimport androidx.compose.foundation.lazy.items\r\nimport androidx.compose.foundation.pager.HorizontalPager\r\nimport androidx.compose.foundation.pager.rememberPagerState\r\nimport androidx.compose.foundation.shape.CircleShape\r\nimport androidx.compose.foundation.shape.RoundedCornerShape\r\nimport androidx.compose.foundation.text.BasicTextField\r\nimport androidx.compose.material.icons.Icons\r\nimport androidx.compose.material.icons.filled.Add\r\nimport androidx.compose.material.icons.filled.Settings\r\nimport androidx.compose.material.icons.filled.Edit\r\nimport androidx.compose.material.icons.filled.Search\r\nimport androidx.compose.material3.*\r\nimport androidx.compose.material3.ModalBottomSheet\r\nimport androidx.compose.material3.rememberModalBottomSheetState\r\nimport androidx.compose.runtime.*\r\nimport androidx.compose.ui.Alignment\r\nimport androidx.compose.ui.Modifier\r\nimport androidx.compose.ui.graphics.Brush\r\nimport androidx.compose.ui.graphics.Color\r\nimport com.example.expensetrackerkotlin.ui.theme.AppColors\r\nimport com.example.expensetrackerkotlin.ui.theme.ThemeColors\r\nimport androidx.compose.ui.text.font.FontWeight\r\nimport androidx.compose.ui.text.style.TextAlign\r\nimport androidx.compose.ui.unit.dp\r\nimport androidx.compose.ui.unit.sp\r\nimport androidx.compose.ui.res.stringResource\r\nimport com.example.expensetrackerkotlin.R\r\nimport com.example.expensetrackerkotlin.ui.components.*\r\nimport com.example.expensetrackerkotlin.ui.components.PurchaseBottomSheet\r\nimport com.example.expensetrackerkotlin.billing.BillingManager\r\nimport com.example.expensetrackerkotlin.viewmodel.ExpenseViewModel\r\nimport androidx.compose.runtime.DisposableEffect\r\nimport androidx.compose.ui.platform.LocalContext\r\nimport androidx.activity.ComponentActivity\r\nimport kotlinx.coroutines.launch\r\nimport java.time.LocalDateTime\r\nimport androidx.compose.foundation.layout.WindowInsets\r\nimport androidx.compose.foundation.layout.statusBars\r\nimport androidx.compose.foundation.layout.navigationBars\r\nimport androidx.compose.foundation.layout.windowInsetsPadding\r\nimport androidx.compose.material.icons.automirrored.filled.Sort\r\nimport androidx.compose.material.icons.filled.FavoriteBorder\r\nimport androidx.compose.material3.TabRowDefaults.tabIndicatorOffset\r\nimport com.example.expensetrackerkotlin.utils.NumberFormatter\r\nimport java.util.Locale\r\n\r\nenum class ExpenseSortType {\r\n    AMOUNT_HIGH_TO_LOW,\r\n    AMOUNT_LOW_TO_HIGH, \r\n    DESCRIPTION_A_TO_Z,\r\n    DESCRIPTION_Z_TO_A,\r\n    CATEGORY_A_TO_Z,\r\n    CATEGORY_Z_TO_A,\r\n    TIME_NEWEST_FIRST,\r\n    TIME_OLDEST_FIRST\r\n}\r\n\r\n@OptIn(ExperimentalMaterial3Api::class)\r\n@Composable\r\nfun ExpensesScreen(\r\n    viewModel: ExpenseViewModel\r\n) {\r\n    val context = LocalContext.current\r\n    val activity = context as? ComponentActivity\r\n\r\n    val expenses by viewModel.expenses.collectAsState()\r\n    val selectedDate by viewModel.selectedDate.collectAsState()\r\n    val showingOverLimitAlert by viewModel.showingOverLimitAlert.collectAsState()\r\n    val editingExpenseId by viewModel.editingExpenseId.collectAsState()\r\n    val categories by viewModel.categories.collectAsState()\r\n    val subCategories by viewModel.subCategories.collectAsState()\r\n    val weeklyHistoryData by viewModel.weeklyHistoryData.collectAsState()\r\n\r\n    // Billing Manager\r\n    val billingManager = remember { BillingManager(context) }\r\n    val purchaseState by billingManager.purchaseState.collectAsState()\r\n\r\n    // Initialize billing client\r\n    DisposableEffect(Unit) {\r\n        billingManager.initialize()\r\n        onDispose {\r\n            billingManager.destroy()\r\n        }\r\n    }\r\n\r\n    // Handle purchase state\r\n    LaunchedEffect(purchaseState) {\r\n        when (purchaseState) {\r\n            is BillingManager.PurchaseState.Success -> {\r\n                // Show success message or handle success\r\n                billingManager.resetPurchaseState()\r\n            }\r\n            is BillingManager.PurchaseState.Error -> {\r\n                // Show error message\r\n                billingManager.resetPurchaseState()\r\n            }\r\n            is BillingManager.PurchaseState.Cancelled -> {\r\n                // Handle cancellation\r\n                billingManager.resetPurchaseState()\r\n            }\r\n            else -> { /* Do nothing */ }\r\n        }\r\n    }\r\n    \r\n    var showingAddExpense by remember { mutableStateOf(false) }\r\n    var showingSettings by remember { mutableStateOf(false) }\r\n    var showingMonthlyCalendar by remember { mutableStateOf(false) }\r\n    var showingRecurringExpenses by remember { mutableStateOf(false) }\r\n    var showingPurchase by remember { mutableStateOf(false) }\r\n    var currentCalendarMonth by remember { mutableStateOf(java.time.YearMonth.from(selectedDate)) }\r\n    \r\n    // Daily category detail bottom sheet state\r\n    var showingDailyCategoryDetail by remember { mutableStateOf(false) }\r\n    var selectedCategoryForDetail by remember { mutableStateOf<com.example.expensetrackerkotlin.data.Category?>(null) }\r\n    \r\n    // Search and sorting state\r\n    var searchText by remember { mutableStateOf(\"\") }\r\n    var showSortMenu by remember { mutableStateOf(false) }\r\n    var currentSortType by remember { mutableStateOf(ExpenseSortType.TIME_NEWEST_FIRST) }\r\n    var showSearchBar by remember { mutableStateOf(false) }\r\n    \r\n    val scope = rememberCoroutineScope()\r\n    \r\n    // Get selected date expenses (including recurring expenses)\r\n    val baseSelectedDateExpenses = remember(expenses, selectedDate) {\r\n        expenses.filter { expense ->\r\n            expense.isActiveOnDate(selectedDate)\r\n        }\r\n    }\r\n    \r\n    // Filter and sort expenses\r\n    val selectedDateExpenses = remember(baseSelectedDateExpenses, searchText, currentSortType, categories, subCategories) {\r\n        var filteredExpenses = baseSelectedDateExpenses\r\n        \r\n        // Apply search filter\r\n        if (searchText.isNotBlank()) {\r\n            filteredExpenses = filteredExpenses.filter { expense ->\r\n                val category = categories.find { it.id == expense.categoryId }\r\n                val subCategory = subCategories.find { it.id == expense.subCategoryId }\r\n                \r\n                expense.description.contains(searchText, ignoreCase = true) ||\r\n                expense.amount.toString().contains(searchText) ||\r\n                (category?.name?.contains(searchText, ignoreCase = true) == true) ||\r\n                (subCategory?.name?.contains(searchText, ignoreCase = true) == true)\r\n            }\r\n        }\r\n        \r\n        // Apply sorting\r\n        when (currentSortType) {\r\n            ExpenseSortType.AMOUNT_HIGH_TO_LOW -> filteredExpenses.sortedByDescending { it.getAmountInDefaultCurrency(viewModel.defaultCurrency) }\r\n            ExpenseSortType.AMOUNT_LOW_TO_HIGH -> filteredExpenses.sortedBy { it.getAmountInDefaultCurrency(viewModel.defaultCurrency) }\r\n            ExpenseSortType.DESCRIPTION_A_TO_Z -> filteredExpenses.sortedBy { it.description.lowercase() }\r\n            ExpenseSortType.DESCRIPTION_Z_TO_A -> filteredExpenses.sortedByDescending { it.description.lowercase() }\r\n            ExpenseSortType.CATEGORY_A_TO_Z -> filteredExpenses.sortedBy { expense ->\r\n                val subCategory = subCategories.find { it.id == expense.subCategoryId }\r\n                subCategory?.name?.lowercase() ?: \"zzz\"\r\n            }\r\n            ExpenseSortType.CATEGORY_Z_TO_A -> filteredExpenses.sortedByDescending { expense ->\r\n                val subCategory = subCategories.find { it.id == expense.subCategoryId }\r\n                subCategory?.name?.lowercase() ?: \"\"\r\n            }\r\n            ExpenseSortType.TIME_NEWEST_FIRST -> filteredExpenses.sortedByDescending { it.date }\r\n            ExpenseSortType.TIME_OLDEST_FIRST -> filteredExpenses.sortedBy { it.date }\r\n        }\r\n    }\r\n    \r\n    val isDarkTheme = viewModel.theme == \"dark\"\r\n    \r\n    Box(\r\n        modifier = Modifier\r\n            .fillMaxSize()\r\n            .background(ThemeColors.getBackgroundColor(isDarkTheme))\r\n            .windowInsetsPadding(WindowInsets.statusBars)\r\n            .windowInsetsPadding(WindowInsets.navigationBars)\r\n    ) {\r\n        Column(\r\n            modifier = Modifier.fillMaxSize()\r\n        ) {\r\n            Spacer(modifier = Modifier.height(16.dp))\r\n            \r\n            // Daily History\r\n            DailyHistoryView(\r\n                weeklyData = weeklyHistoryData,\r\n                selectedDate = selectedDate,\r\n                isDarkTheme = isDarkTheme,\r\n                onDateSelected = { date ->\r\n                    viewModel.updateSelectedDate(date)\r\n                },\r\n                onWeekNavigate = { direction ->\r\n                    viewModel.navigateToWeek(direction)\r\n                }\r\n            )\r\n            \r\n            Spacer(modifier = Modifier.height(6.dp))\r\n            \r\n            // Charts TabView - Horizontal Pager like Swift\r\n            val pagerState = rememberPagerState(pageCount = { 3 })\r\n            \r\n            HorizontalPager(\r\n                state = pagerState,\r\n                modifier = Modifier\r\n                    .fillMaxWidth()\r\n                    .height(180.dp)\r\n                    .padding(horizontal = 20.dp)\r\n            ) { page ->\r\n                Box(\r\n                    contentAlignment = Alignment.Center,\r\n                    modifier = Modifier.fillMaxSize()\r\n                ) {\r\n                    when (page) {\r\n                        0 -> {\r\n                            // Monthly Progress Ring\r\n                            MonthlyProgressRingView(\r\n                                totalSpent = viewModel.getMonthlyTotal(currentCalendarMonth),\r\n                                progressPercentage = viewModel.getMonthlyProgressPercentage(currentCalendarMonth),\r\n                                isOverLimit = viewModel.isMonthlyOverLimit(currentCalendarMonth),\r\n                                onTap = { showingMonthlyCalendar = true },\r\n                                currency = viewModel.defaultCurrency,\r\n                                isDarkTheme = isDarkTheme,\r\n                                month = currentCalendarMonth.format(java.time.format.DateTimeFormatter.ofPattern(\"MMMM\", Locale.getDefault())),\r\n\r\n                                selectedDate = viewModel.selectedDate\r\n                            )\r\n                        }\r\n                        1 -> {\r\n                                                    // Daily Progress Ring\r\n                        DailyProgressRingView(\r\n                            dailyProgressPercentage = viewModel.dailyProgressPercentage,\r\n                            isOverDailyLimit = viewModel.isOverDailyLimit,\r\n                            selectedDateTotal = viewModel.getSelectedDayTotal(),\r\n                            currency = viewModel.defaultCurrency,\r\n                            isDarkTheme = isDarkTheme\r\n                        )\r\n                        }\r\n                        2 -> {\r\n                            // Category Distribution\r\n                            CategoryDistributionChart(\r\n                                categoryExpenses = viewModel.dailyExpensesByCategory,\r\n                                onCategoryClick = { category ->\r\n                                    selectedCategoryForDetail = category\r\n                                    showingDailyCategoryDetail = true\r\n                                },\r\n                                isDarkTheme = isDarkTheme\r\n                            )\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            \r\n            // Search and Sort controls\r\n            if (baseSelectedDateExpenses.isNotEmpty()) {\r\n                Row(\r\n                    modifier = Modifier\r\n                        .fillMaxWidth()\r\n                        .padding(horizontal = 16.dp, vertical = 8.dp),\r\n                    horizontalArrangement = Arrangement.spacedBy(8.dp),\r\n                    verticalAlignment = Alignment.CenterVertically\r\n                ) {\r\n                    // Search toggle button\r\n                    IconButton(\r\n                        onClick = { \r\n                            showSearchBar = !showSearchBar \r\n                            if (!showSearchBar) {\r\n                                searchText = \"\"\r\n                            }\r\n                        }\r\n                    ) {\r\n                        Icon(\r\n                            imageVector = Icons.Default.Search,\r\n                            contentDescription = stringResource(R.string.search),\r\n                            tint = if (showSearchBar) AppColors.PrimaryOrange else ThemeColors.getTextColor(isDarkTheme)\r\n                        )\r\n                    }\r\n                    \r\n                    // Sort button\r\n                    Box {\r\n                        IconButton(\r\n                            onClick = { showSortMenu = true }\r\n                        ) {\r\n                            Icon(\r\n                                imageVector = Icons.AutoMirrored.Filled.Sort,\r\n                                contentDescription = stringResource(R.string.sort),\r\n                                tint = ThemeColors.getTextColor(isDarkTheme)\r\n                            )\r\n                        }\r\n                        \r\n                        DropdownMenu(\r\n                            expanded = showSortMenu,\r\n                            onDismissRequest = { showSortMenu = false },\r\n                            modifier = Modifier.background(ThemeColors.getCardBackgroundColor(isDarkTheme))\r\n                        ) {\r\n                            DropdownMenuItem(\r\n                                text = { Text(stringResource(R.string.time_newest_first), color = ThemeColors.getTextColor(isDarkTheme)) },\r\n                                onClick = { \r\n                                    currentSortType = ExpenseSortType.TIME_NEWEST_FIRST\r\n                                    showSortMenu = false \r\n                                }\r\n                            )\r\n                            DropdownMenuItem(\r\n                                text = { Text(stringResource(R.string.time_oldest_first), color = ThemeColors.getTextColor(isDarkTheme)) },\r\n                                onClick = { \r\n                                    currentSortType = ExpenseSortType.TIME_OLDEST_FIRST\r\n                                    showSortMenu = false \r\n                                }\r\n                            )\r\n                            DropdownMenuItem(\r\n                                text = { Text(stringResource(R.string.amount_high_to_low), color = ThemeColors.getTextColor(isDarkTheme)) },\r\n                                onClick = { \r\n                                    currentSortType = ExpenseSortType.AMOUNT_HIGH_TO_LOW\r\n                                    showSortMenu = false \r\n                                }\r\n                            )\r\n                            DropdownMenuItem(\r\n                                text = { Text(stringResource(R.string.amount_low_to_high), color = ThemeColors.getTextColor(isDarkTheme)) },\r\n                                onClick = { \r\n                                    currentSortType = ExpenseSortType.AMOUNT_LOW_TO_HIGH\r\n                                    showSortMenu = false \r\n                                }\r\n                            )\r\n                            DropdownMenuItem(\r\n                                text = { Text(stringResource(R.string.description_a_to_z), color = ThemeColors.getTextColor(isDarkTheme)) },\r\n                                onClick = { \r\n                                    currentSortType = ExpenseSortType.DESCRIPTION_A_TO_Z\r\n                                    showSortMenu = false \r\n                                }\r\n                            )\r\n                            DropdownMenuItem(\r\n                                text = { Text(stringResource(R.string.description_z_to_a), color = ThemeColors.getTextColor(isDarkTheme)) },\r\n                                onClick = { \r\n                                    currentSortType = ExpenseSortType.DESCRIPTION_Z_TO_A\r\n                                    showSortMenu = false \r\n                                }\r\n                            )\r\n                            DropdownMenuItem(\r\n                                text = { Text(stringResource(R.string.category_a_to_z), color = ThemeColors.getTextColor(isDarkTheme)) },\r\n                                onClick = { \r\n                                    currentSortType = ExpenseSortType.CATEGORY_A_TO_Z\r\n                                    showSortMenu = false \r\n                                }\r\n                            )\r\n                            DropdownMenuItem(\r\n                                text = { Text(stringResource(R.string.category_z_to_a), color = ThemeColors.getTextColor(isDarkTheme)) },\r\n                                onClick = { \r\n                                    currentSortType = ExpenseSortType.CATEGORY_Z_TO_A\r\n                                    showSortMenu = false \r\n                                }\r\n                            )\r\n                        }\r\n                    }\r\n                    \r\n                    // Search results count\r\n                    if (searchText.isNotBlank()) {\r\n                        Text(\r\n                            text = stringResource(R.string.results_count, selectedDateExpenses.size),\r\n                            fontSize = 12.sp,\r\n                            color = ThemeColors.getTextGrayColor(isDarkTheme)\r\n                        )\r\n                        Text(\r\n                            text = \"${viewModel.defaultCurrency} ${NumberFormatter.formatAmount(( selectedDateExpenses.sumOf { it.amount }))}\" ,\r\n                            fontSize = 12.sp,\r\n                            color = ThemeColors.getTextGrayColor(isDarkTheme)\r\n                        )\r\n                    }\r\n                }\r\n                \r\n                // Search bar\r\n                AnimatedVisibility(\r\n                    visible = showSearchBar,\r\n                    enter = expandVertically(),\r\n                    exit = shrinkVertically()\r\n                ) {\r\n                    Box(\r\n                        modifier = Modifier\r\n                            .fillMaxWidth()\r\n                            .padding(horizontal = 16.dp, vertical = 4.dp)\r\n                            .background(\r\n                                ThemeColors.getInputBackgroundColor(isDarkTheme),\r\n                                RoundedCornerShape(12.dp)\r\n                            )\r\n                            .border(\r\n                                width = 1.dp,\r\n                                color = ThemeColors.getTextGrayColor(isDarkTheme).copy(alpha = 0.3f),\r\n                                shape = RoundedCornerShape(12.dp)\r\n                            )\r\n                    ) {\r\n                        BasicTextField(\r\n                            value = searchText,\r\n                            onValueChange = { searchText = it },\r\n                            modifier = Modifier\r\n                                .fillMaxWidth()\r\n                                .padding(horizontal = 16.dp, vertical = 12.dp),\r\n                            singleLine = true,\r\n                            textStyle = androidx.compose.ui.text.TextStyle(\r\n                                fontSize = 14.sp,\r\n                                color = ThemeColors.getTextColor(isDarkTheme)\r\n                            ),\r\n                            decorationBox = { innerTextField ->\r\n                                Row(\r\n                                    verticalAlignment = Alignment.CenterVertically\r\n                                ) {\r\n                                    Icon(\r\n                                        imageVector = Icons.Default.Search,\r\n                                        contentDescription = \"Search\",\r\n                                        tint = ThemeColors.getTextGrayColor(isDarkTheme),\r\n                                        modifier = Modifier.size(20.dp)\r\n                                    )\r\n                                    \r\n                                    Spacer(modifier = Modifier.width(8.dp))\r\n                                    \r\n                                    Box(modifier = Modifier.weight(1f)) {\r\n                                        if (searchText.isEmpty()) {\r\n                                            Text(\r\n                                                text = stringResource(R.string.search_expenses_placeholder),\r\n                                                fontSize = 14.sp,\r\n                                                color = ThemeColors.getTextGrayColor(isDarkTheme)\r\n                                            )\r\n                                        }\r\n                                        innerTextField()\r\n                                    }\r\n                                }\r\n                            }\r\n                        )\r\n                    }\r\n                }\r\n            }\r\n            \r\n            // Expenses List\r\n            if (selectedDateExpenses.isEmpty()) {\r\n                Column(\r\n                    horizontalAlignment = Alignment.CenterHorizontally,\r\n                    verticalArrangement = Arrangement.Center,\r\n                    modifier = Modifier\r\n                        .fillMaxWidth()\r\n                        .weight(1f)\r\n                        .padding(horizontal = 40.dp)\r\n                ) {\r\n\r\n                    \r\n                    Text(\r\n                        text = if (searchText.isNotBlank()) {\r\n                            stringResource(R.string.no_search_results_found)\r\n                        } else if (selectedDate.toLocalDate() == LocalDateTime.now().toLocalDate()) {\r\n                            stringResource(R.string.no_expenses_yet)\r\n                        } else {\r\n                            stringResource(R.string.no_expenses_today)\r\n                        },\r\n                        fontSize = 22.sp,\r\n                        fontWeight = FontWeight.Medium,\r\n                        color = ThemeColors.getTextColor(isDarkTheme),\r\n                        textAlign = TextAlign.Center\r\n                    )\r\n                    \r\n                    Spacer(modifier = Modifier.height(8.dp))\r\n                    \r\n                    Text(\r\n                        text = if (searchText.isNotBlank()) {\r\n                            stringResource(R.string.no_search_results_description, searchText)\r\n                        } else if (selectedDate.toLocalDate() == LocalDateTime.now().toLocalDate()) {\r\n                            stringResource(R.string.first_expense_hint)\r\n                        } else {\r\n                            stringResource(R.string.add_expense_for_day_hint)\r\n                        },\r\n                        fontSize = 18.sp,\r\n                        color = ThemeColors.getTextGrayColor(isDarkTheme),\r\n                        textAlign = TextAlign.Center\r\n                    )\r\n                }\r\n            } else {\r\n                LazyColumn(\r\n                    contentPadding = PaddingValues(horizontal = 16.dp, vertical = 8.dp),\r\n                    verticalArrangement = Arrangement.spacedBy(8.dp),\r\n                    modifier = Modifier.weight(1f)\r\n                ) {\r\n                    items(selectedDateExpenses) { expense ->\r\n                        ExpenseRowView(\r\n                            expense = expense,\r\n                            onUpdate = { updatedExpense ->\r\n                                // Now each expense has its own ID, so we can update directly\r\n                                viewModel.updateExpense(updatedExpense)\r\n                            },\r\n                            onEditingChanged = { isEditing ->\r\n                                if (isEditing) {\r\n                                    viewModel.setEditingExpenseId(expense.id)\r\n                                } else {\r\n                                    viewModel.setEditingExpenseId(null)\r\n                                }\r\n                            },\r\n                            onDelete = {\r\n                                // Now each expense has its own ID, so we can delete directly\r\n                                viewModel.deleteExpense(expense.id)\r\n                            },\r\n                            isCurrentlyEditing = editingExpenseId == expense.id,\r\n                            dailyExpenseRatio = viewModel.getDailyExpenseRatio(expense),\r\n                            defaultCurrency = viewModel.defaultCurrency,\r\n                            isDarkTheme = isDarkTheme,\r\n                            viewModel = viewModel\r\n                        )\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        \r\n        // Floating Action Buttons (Over Charts)\r\n        Row(\r\n            modifier = Modifier\r\n                .fillMaxWidth()\r\n                .padding(horizontal = 20.dp, vertical = 20.dp), // Position higher up to avoid expense list overlap\r\n            horizontalArrangement = Arrangement.SpaceBetween,\r\n            verticalAlignment = Alignment.CenterVertically\r\n        ) {\r\n            // Left side buttons (vertical stack)\r\n            Column(\r\n                verticalArrangement = Arrangement.spacedBy(12.dp),\r\n                horizontalAlignment = Alignment.Start\r\n            ) {\r\n                // Purchase/Donation Button (Top)\r\n                FloatingActionButton(\r\n                    onClick = { showingPurchase = true },\r\n                    containerColor = Color.Transparent,\r\n                    modifier = Modifier.size(60.dp)\r\n                        .offset(y = 140.dp)\r\n                ) {\r\n\r\n                        Icon(\r\n                            imageVector = Icons.Default.FavoriteBorder,\r\n                            contentDescription = \"Support\",\r\n                            tint = Color.White,\r\n                            modifier = Modifier.size(30.dp)\r\n                        )\r\n\r\n                }\r\n\r\n                // Settings Button (Bottom)\r\n                FloatingActionButton(\r\n                    onClick = { showingSettings = true },\r\n                    containerColor = Color.Transparent,\r\n                    modifier = Modifier.size(60.dp)\r\n                        .offset(y = 140.dp)\r\n                ) {\r\n                    Box(\r\n                        modifier = Modifier\r\n                            .fillMaxSize()\r\n                            .background(\r\n                                Brush.radialGradient(\r\n                                    colors = listOf(Color(0xFF101010), Color(0xFF101010))\r\n                                ),\r\n                                CircleShape\r\n                            ),\r\n                        contentAlignment = Alignment.Center\r\n                    ) {\r\n                        Icon(\r\n                            imageVector = Icons.Default.Settings,\r\n                            contentDescription = \"Settings\",\r\n                            tint = Color.White,\r\n                            modifier = Modifier.size(30.dp)\r\n                        )\r\n                    }\r\n                }\r\n            }\r\n            \r\n            // Right side buttons (vertical stack)\r\n            Column(\r\n                verticalArrangement = Arrangement.spacedBy(12.dp),\r\n                horizontalAlignment = Alignment.End\r\n            ) {\r\n                // Recurring Expenses Button (Top)\r\n                FloatingActionButton(\r\n                    onClick = { showingRecurringExpenses = true },\r\n                    containerColor = Color.Transparent,\r\n                    modifier = Modifier.size(60.dp)\r\n                        .offset(y = 140.dp)\r\n                ) {\r\n                    Box(\r\n                        modifier = Modifier\r\n                            .fillMaxSize()\r\n                            .background(\r\n                                Brush.radialGradient(\r\n                                    colors = listOf(AppColors.RecurringButtonStart, AppColors.RecurringButtonEnd)\r\n                                ),\r\n                                CircleShape\r\n                            ),\r\n                        contentAlignment = Alignment.Center\r\n                    ) {\r\n                        Icon(\r\n                            imageVector = Icons.Default.Edit,\r\n                            contentDescription = \"Recurring Expenses\",\r\n                            tint = Color.White,\r\n                            modifier = Modifier.size(30.dp)\r\n                        )\r\n                    }\r\n                }\r\n                \r\n                // Add Expense Button (Bottom)\r\n                FloatingActionButton(\r\n                    onClick = { showingAddExpense = true },\r\n                    containerColor = Color.Transparent,\r\n                    modifier = Modifier.size(60.dp)\r\n                        .offset(y = 140.dp)\r\n                ) {\r\n                    Box(\r\n                        modifier = Modifier\r\n                            .fillMaxSize()\r\n                            .background(\r\n                                Brush.radialGradient(\r\n                                    colors = listOf(Color(0xFFFF9500), Color(0xFFFF3B30))\r\n                                ),\r\n                                CircleShape\r\n                            ),\r\n                        contentAlignment = Alignment.Center\r\n                    ) {\r\n                        Icon(\r\n                            imageVector = Icons.Default.Add,\r\n                            contentDescription = \"Add Expense\",\r\n                            tint = Color.White,\r\n                            modifier = Modifier.size(36.dp)\r\n                        )\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        \r\n        // Over Limit Alert\r\n        if (showingOverLimitAlert) {\r\n            Card(\r\n                modifier = Modifier\r\n                    .fillMaxWidth()\r\n                    .padding(20.dp)\r\n                    .align(Alignment.TopCenter),\r\n                colors = CardDefaults.cardColors(\r\n                    containerColor = Color.Red\r\n                ),\r\n                elevation = CardDefaults.cardElevation(defaultElevation = 8.dp)\r\n            ) {\r\n                Row(\r\n                    modifier = Modifier\r\n                        .fillMaxWidth()\r\n                        .padding(16.dp),\r\n                    verticalAlignment = Alignment.CenterVertically\r\n                ) {\r\n                    Text(\r\n                        text = stringResource(R.string.monthly_limit_exceeded),\r\n                        color = Color.White,\r\n                        fontWeight = FontWeight.Medium,\r\n                        modifier = Modifier.weight(1f)\r\n                    )\r\n                    \r\n                    TextButton(\r\n                        onClick = { viewModel.dismissOverLimitAlert() }\r\n                    ) {\r\n                        Text(\"✕\", color = Color.White)\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    \r\n    // Recurring Expenses Bottom Sheet\r\n    if (showingRecurringExpenses) {\r\n        val recurringExpensesSheetState = rememberModalBottomSheetState(\r\n            skipPartiallyExpanded = true,\r\n            confirmValueChange = { true }\r\n        )\r\n        \r\n        LaunchedEffect(Unit) {\r\n            recurringExpensesSheetState.expand()\r\n        }\r\n        \r\n        ModalBottomSheet(\r\n            onDismissRequest = { showingRecurringExpenses = false },\r\n            containerColor = ThemeColors.getBackgroundColor(isDarkTheme),\r\n            sheetState = recurringExpensesSheetState,\r\n            dragHandle = { BottomSheetDefaults.DragHandle() }\r\n        ) {\r\n            Box(\r\n                modifier = Modifier\r\n                    .fillMaxWidth()\r\n                    .height(700.dp)\r\n            ) {\r\n                RecurringExpensesScreen(\r\n                    viewModel = viewModel,\r\n                    onDismiss = { showingRecurringExpenses = false }\r\n                )\r\n            }\r\n        }\r\n    }\r\n    \r\n    // Bottom Sheets\r\n    if (showingAddExpense) {\r\n        val sheetState = rememberModalBottomSheetState(\r\n            skipPartiallyExpanded = true,\r\n            confirmValueChange = { true }\r\n        )\r\n        \r\n        LaunchedEffect(Unit) {\r\n            sheetState.expand()\r\n        }\r\n        \r\n        ModalBottomSheet(\r\n            onDismissRequest = { showingAddExpense = false },\r\n            containerColor = ThemeColors.getBackgroundColor(isDarkTheme),\r\n            sheetState = sheetState,\r\n            dragHandle = { BottomSheetDefaults.DragHandle() }\r\n        ) {\r\n            Box(\r\n                modifier = Modifier\r\n                    .fillMaxWidth()\r\n                    .heightIn(max = 600.dp)\r\n            ) {\r\n                AddExpenseScreen(\r\n                    selectedDate = selectedDate,\r\n                    defaultCurrency = viewModel.defaultCurrency,\r\n                    dailyLimit = viewModel.dailyLimit,\r\n                    monthlyLimit = viewModel.monthlyLimit,\r\n                    isDarkTheme = isDarkTheme,\r\n                    onExpenseAdded = { expense ->\r\n                        viewModel.addExpense(expense)\r\n                    },\r\n                    onDismiss = { showingAddExpense = false },\r\n                    viewModel = viewModel\r\n                )\r\n            }\r\n        }\r\n    }\r\n    \r\n    if (showingSettings) {\r\n        val settingsSheetState = rememberModalBottomSheetState(\r\n            skipPartiallyExpanded = true,\r\n            confirmValueChange = { true }\r\n        )\r\n        \r\n        LaunchedEffect(Unit) {\r\n            settingsSheetState.expand()\r\n        }\r\n        \r\n        ModalBottomSheet(\r\n            onDismissRequest = { showingSettings = false },\r\n            containerColor = ThemeColors.getBackgroundColor(isDarkTheme),\r\n            sheetState = settingsSheetState,\r\n            dragHandle = { BottomSheetDefaults.DragHandle() }\r\n        ) {\r\n            Box(\r\n                modifier = Modifier\r\n                    .fillMaxWidth()\r\n                    .heightIn(max = 750.dp)\r\n            ) {\r\n                SettingsScreen(\r\n                    viewModel = viewModel,\r\n                    defaultCurrency = viewModel.defaultCurrency,\r\n                    dailyLimit = viewModel.dailyLimit,\r\n                    monthlyLimit = viewModel.monthlyLimit,\r\n                    theme = viewModel.theme,\r\n                    onCurrencyChanged = { currency ->\r\n                        scope.launch {\r\n                            viewModel.updateDefaultCurrency(currency)\r\n                        }\r\n                    },\r\n                    onDailyLimitChanged = { limit ->\r\n                        scope.launch {\r\n                            viewModel.updateDailyLimit(limit)\r\n                        }\r\n                    },\r\n                    onMonthlyLimitChanged = { limit ->\r\n                        scope.launch {\r\n                            viewModel.updateMonthlyLimit(limit)\r\n                        }\r\n                    },\r\n                    onThemeChanged = { theme ->\r\n                        scope.launch {\r\n                            viewModel.updateTheme(theme)\r\n                        }\r\n                    },\r\n                    onDismiss = { showingSettings = false }\r\n                )\r\n            }\r\n        }\r\n    }\r\n    \r\n    // Monthly Calendar Bottom Sheet\r\n    if (showingMonthlyCalendar) {\r\n        val monthlyCalendarSheetState = rememberModalBottomSheetState(\r\n            skipPartiallyExpanded = true,\r\n            confirmValueChange = { true }\r\n        )\r\n        \r\n        var selectedTabIndex by remember { mutableStateOf(0) }\r\n        val tabs = listOf(stringResource(R.string.calendar_tab), stringResource(R.string.expenses_tab))\r\n        \r\n        LaunchedEffect(Unit) {\r\n            monthlyCalendarSheetState.expand()\r\n        }\r\n        \r\n        ModalBottomSheet(\r\n            onDismissRequest = { showingMonthlyCalendar = false },\r\n            sheetState = monthlyCalendarSheetState,\r\n            containerColor = ThemeColors.getBackgroundColor(isDarkTheme),\r\n            dragHandle = { BottomSheetDefaults.DragHandle() }\r\n        ) {\r\n            Column(\r\n                modifier = Modifier\r\n                    .fillMaxWidth()\r\n                    .height(700.dp)\r\n            ) {\r\n                // Tab Row\r\n                TabRow(\r\n                    selectedTabIndex = selectedTabIndex,\r\n                    modifier = Modifier.padding(horizontal = 10.dp),\r\n                    containerColor = Color.Transparent,\r\n\r\n                    contentColor = AppColors.PrimaryOrange,\r\n                    indicator = { tabPositions ->\r\n                        TabRowDefaults.SecondaryIndicator(\r\n                            modifier = Modifier.tabIndicatorOffset(tabPositions[selectedTabIndex]),\r\n                            height = 2.dp,\r\n                            color = AppColors.PrimaryOrange\r\n                        )\r\n                    }\r\n                ) {\r\n                    tabs.forEachIndexed { index, title ->\r\n                        Tab(\r\n                            selected = selectedTabIndex == index,\r\n                            onClick = { selectedTabIndex = index },\r\n                            text = {\r\n                                Text(\r\n                                    text = title,\r\n                                    fontSize = 22.sp,\r\n                                    fontWeight = if (selectedTabIndex == index) FontWeight.SemiBold else FontWeight.Normal,\r\n                                    color = if (selectedTabIndex == index) AppColors.PrimaryOrange else ThemeColors.getTextGrayColor(isDarkTheme)\r\n                                )\r\n                            },\r\n                            modifier = Modifier.padding(vertical = 8.dp)\r\n                        )\r\n                    }\r\n                }\r\n                \r\n                Spacer(modifier = Modifier.height(16.dp))\r\n                \r\n                // Tab Content\r\n                when (selectedTabIndex) {\r\n                    0 -> {\r\n                        MonthlyCalendarView(\r\n                            selectedDate = selectedDate,\r\n                            expenses = expenses,\r\n                            onDateSelected = { date ->\r\n                                viewModel.updateSelectedDate(date)\r\n                                showingMonthlyCalendar = false\r\n                            },\r\n                            defaultCurrency = viewModel.defaultCurrency,\r\n                            dailyLimit = viewModel.dailyLimit,\r\n                            isDarkTheme = isDarkTheme,\r\n                            onMonthChanged = { month ->\r\n                                currentCalendarMonth = month\r\n                            },\r\n                            modifier = Modifier.weight(1f)\r\n                        )\r\n                    }\r\n                    1 -> {\r\n                        MonthlyExpensesView(\r\n                            currentMonth = currentCalendarMonth,\r\n                            expenses = expenses,\r\n                            viewModel = viewModel,\r\n                            isDarkTheme = isDarkTheme,\r\n                            modifier = Modifier.weight(1f)\r\n                        )\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    \r\n    // Daily Category Detail Bottom Sheet\r\n    if (showingDailyCategoryDetail && selectedCategoryForDetail != null) {\r\n        DailyCategoryDetailBottomSheet(\r\n            category = selectedCategoryForDetail!!,\r\n            selectedDateExpenses = selectedDateExpenses,\r\n            subCategories = subCategories,\r\n            selectedDate = selectedDate,\r\n            defaultCurrency = viewModel.defaultCurrency,\r\n            isDarkTheme = isDarkTheme,\r\n            onDismiss = {\r\n                showingDailyCategoryDetail = false\r\n                selectedCategoryForDetail = null\r\n            }\r\n        )\r\n    }\r\n\r\n    // Purchase Bottom Sheet\r\n    if (showingPurchase) {\r\n        PurchaseBottomSheet(\r\n            isDarkTheme = isDarkTheme,\r\n            onDismiss = { showingPurchase = false },\r\n            onPurchase = { productId ->\r\n                activity?.let { act ->\r\n                    billingManager.launchPurchaseFlow(act, productId)\r\n                }\r\n            }\r\n        )\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/expensetrackerkotlin/ui/screens/ExpensesScreen.kt b/app/src/main/java/com/example/expensetrackerkotlin/ui/screens/ExpensesScreen.kt
--- a/app/src/main/java/com/example/expensetrackerkotlin/ui/screens/ExpensesScreen.kt	(revision 704fb63dbd103d83a77a5d2f59944f4c74685798)
+++ b/app/src/main/java/com/example/expensetrackerkotlin/ui/screens/ExpensesScreen.kt	(date 1759270738039)
@@ -80,62 +80,77 @@
     val subCategories by viewModel.subCategories.collectAsState()
     val weeklyHistoryData by viewModel.weeklyHistoryData.collectAsState()
 
-    // Billing Manager
-    val billingManager = remember { BillingManager(context) }
-    val purchaseState by billingManager.purchaseState.collectAsState()
-
-    // Initialize billing client
-    DisposableEffect(Unit) {
-        billingManager.initialize()
-        onDispose {
-            billingManager.destroy()
-        }
-    }
-
-    // Handle purchase state
-    LaunchedEffect(purchaseState) {
-        when (purchaseState) {
-            is BillingManager.PurchaseState.Success -> {
-                // Show success message or handle success
-                billingManager.resetPurchaseState()
-            }
-            is BillingManager.PurchaseState.Error -> {
-                // Show error message
-                billingManager.resetPurchaseState()
-            }
-            is BillingManager.PurchaseState.Cancelled -> {
-                // Handle cancellation
-                billingManager.resetPurchaseState()
-            }
-            else -> { /* Do nothing */ }
-        }
-    }
-    
     var showingAddExpense by remember { mutableStateOf(false) }
     var showingSettings by remember { mutableStateOf(false) }
     var showingMonthlyCalendar by remember { mutableStateOf(false) }
     var showingRecurringExpenses by remember { mutableStateOf(false) }
     var showingPurchase by remember { mutableStateOf(false) }
     var currentCalendarMonth by remember { mutableStateOf(java.time.YearMonth.from(selectedDate)) }
-    
+
     // Daily category detail bottom sheet state
     var showingDailyCategoryDetail by remember { mutableStateOf(false) }
     var selectedCategoryForDetail by remember { mutableStateOf<com.example.expensetrackerkotlin.data.Category?>(null) }
-    
+
     // Search and sorting state
     var searchText by remember { mutableStateOf("") }
     var showSortMenu by remember { mutableStateOf(false) }
     var currentSortType by remember { mutableStateOf(ExpenseSortType.TIME_NEWEST_FIRST) }
     var showSearchBar by remember { mutableStateOf(false) }
-    
+
     val scope = rememberCoroutineScope()
-    
+
     // Get selected date expenses (including recurring expenses)
     val baseSelectedDateExpenses = remember(expenses, selectedDate) {
         expenses.filter { expense ->
             expense.isActiveOnDate(selectedDate)
         }
     }
+    // Billing Manager
+    val billingManager = remember { BillingManager(context) }
+    val purchaseState by billingManager.purchaseState.collectAsState()
+
+    // Initialize billing client
+    DisposableEffect(Unit) {
+        billingManager.initialize()
+        onDispose {
+            billingManager.destroy()
+        }
+    }
+
+    // Purchase result state for showing messages
+    var showPurchaseMessage by remember { mutableStateOf<String?>(null) }
+
+    // Handle purchase state
+    LaunchedEffect(purchaseState) {
+        when (val state = purchaseState) {
+            is BillingManager.PurchaseState.Success -> {
+                showPurchaseMessage = "🎉 Teşekkürler! Satın alma başarılı: ${state.productId}"
+                showingPurchase = false
+                billingManager.resetPurchaseState()
+            }
+            is BillingManager.PurchaseState.Error -> {
+                showPurchaseMessage = "❌ Hata: ${state.message}"
+                billingManager.resetPurchaseState()
+            }
+            is BillingManager.PurchaseState.Cancelled -> {
+                showPurchaseMessage = "❌ Satın alma iptal edildi"
+                billingManager.resetPurchaseState()
+            }
+            is BillingManager.PurchaseState.Loading -> {
+                showPurchaseMessage = "⏳ Satın alma işlemi başlatılıyor..."
+            }
+            else -> { /* Do nothing */ }
+        }
+    }
+
+    // Auto-hide message after 3 seconds
+    LaunchedEffect(showPurchaseMessage) {
+        if (showPurchaseMessage != null) {
+            kotlinx.coroutines.delay(3000)
+            showPurchaseMessage = null
+        }
+    }
+
     
     // Filter and sort expenses
     val selectedDateExpenses = remember(baseSelectedDateExpenses, searchText, currentSortType, categories, subCategories) {
@@ -652,7 +667,7 @@
                         fontWeight = FontWeight.Medium,
                         modifier = Modifier.weight(1f)
                     )
-                    
+
                     TextButton(
                         onClick = { viewModel.dismissOverLimitAlert() }
                     ) {
@@ -661,6 +676,41 @@
                 }
             }
         }
+
+        // Purchase Message Alert
+        if (showPurchaseMessage != null) {
+            Card(
+                modifier = Modifier
+                    .fillMaxWidth()
+                    .padding(20.dp)
+                    .align(Alignment.TopCenter),
+                colors = CardDefaults.cardColors(
+                    containerColor = if (showPurchaseMessage!!.contains("🎉"))
+                        Color.Green else AppColors.PrimaryOrange
+                ),
+                elevation = CardDefaults.cardElevation(defaultElevation = 8.dp)
+            ) {
+                Row(
+                    modifier = Modifier
+                        .fillMaxWidth()
+                        .padding(16.dp),
+                    verticalAlignment = Alignment.CenterVertically
+                ) {
+                    Text(
+                        text = showPurchaseMessage!!,
+                        color = Color.White,
+                        fontWeight = FontWeight.Medium,
+                        modifier = Modifier.weight(1f)
+                    )
+
+                    TextButton(
+                        onClick = { showPurchaseMessage = null }
+                    ) {
+                        Text("✕", color = Color.White)
+                    }
+                }
+            }
+        }
     }
     
     // Recurring Expenses Bottom Sheet
Index: app/src/main/java/com/example/expensetrackerkotlin/ui/screens/RecurringExpensesScreen.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.expensetrackerkotlin.ui.screens\r\n\r\nimport androidx.compose.foundation.background\r\nimport androidx.compose.foundation.layout.*\r\nimport androidx.compose.foundation.lazy.LazyColumn\r\nimport androidx.compose.foundation.lazy.items\r\nimport androidx.compose.foundation.shape.CircleShape\r\nimport androidx.compose.foundation.shape.RoundedCornerShape\r\nimport androidx.compose.foundation.text.KeyboardOptions\r\nimport androidx.compose.foundation.text.BasicTextField\r\nimport androidx.compose.foundation.gestures.detectHorizontalDragGestures\r\nimport androidx.compose.foundation.layout.offset\r\nimport androidx.compose.animation.*\r\nimport androidx.compose.animation.core.*\r\nimport androidx.compose.animation.expandVertically\r\nimport androidx.compose.animation.shrinkVertically\r\nimport androidx.compose.foundation.border\r\nimport androidx.compose.foundation.clickable\r\nimport androidx.compose.material.icons.Icons\r\nimport androidx.compose.material.icons.automirrored.filled.ArrowBack\r\nimport androidx.compose.material.icons.automirrored.filled.Sort\r\nimport androidx.compose.material.icons.filled.CalendarToday\r\nimport androidx.compose.material.icons.filled.Category\r\nimport androidx.compose.material.icons.filled.Check\r\nimport androidx.compose.material.icons.filled.Close\r\nimport androidx.compose.material.icons.filled.Delete\r\nimport androidx.compose.material.icons.filled.Search\r\nimport androidx.compose.material3.*\r\nimport androidx.compose.runtime.*\r\nimport androidx.compose.ui.Alignment\r\nimport androidx.compose.ui.Modifier\r\nimport androidx.compose.ui.graphics.Color\r\nimport androidx.compose.ui.input.pointer.pointerInput\r\nimport androidx.compose.ui.text.font.FontWeight\r\nimport androidx.compose.ui.text.input.KeyboardType\r\nimport androidx.compose.ui.text.style.TextAlign\r\nimport androidx.compose.ui.text.style.TextOverflow\r\nimport androidx.compose.ui.unit.dp\r\nimport androidx.compose.ui.unit.sp\r\nimport androidx.compose.ui.res.stringResource\r\nimport com.example.expensetrackerkotlin.R\r\nimport com.example.expensetrackerkotlin.data.Expense\r\nimport com.example.expensetrackerkotlin.data.RecurrenceType\r\nimport androidx.compose.runtime.collectAsState\r\nimport com.example.expensetrackerkotlin.ui.theme.AppColors\r\nimport com.example.expensetrackerkotlin.ui.theme.ThemeColors\r\nimport com.example.expensetrackerkotlin.utils.NumberFormatter\r\nimport com.example.expensetrackerkotlin.viewmodel.ExpenseViewModel\r\nimport java.time.LocalDateTime\r\nimport java.time.format.DateTimeFormatter\r\nimport java.util.*\r\nimport kotlin.math.abs\r\n\r\nenum class SortType {\r\n    AMOUNT_HIGH_TO_LOW,\r\n    AMOUNT_LOW_TO_HIGH,\r\n    DESCRIPTION_A_TO_Z,\r\n    DESCRIPTION_Z_TO_A,\r\n    CATEGORY_A_TO_Z,\r\n    CATEGORY_Z_TO_A\r\n}\r\n\r\n@OptIn(ExperimentalMaterial3Api::class)\r\n@Composable\r\nfun RecurringExpensesScreen(\r\n    viewModel: ExpenseViewModel,\r\n    onDismiss: () -> Unit\r\n) {\r\n    val expenses by viewModel.expenses.collectAsState()\r\n    val categories by viewModel.categories.collectAsState()\r\n    val subCategories by viewModel.subCategories.collectAsState()\r\n    val isDarkTheme = viewModel.theme == \"dark\"\r\n    \r\n    // Search and filter state\r\n    var searchText by remember { mutableStateOf(\"\") }\r\n    var showSortMenu by remember { mutableStateOf(false) }\r\n    var currentSortType by remember { mutableStateOf(SortType.AMOUNT_HIGH_TO_LOW) }\r\n    \r\n    // Get only recurring expenses that still have future occurrences\r\n    val baseRecurringExpenses = remember(expenses) {\r\n        val today = LocalDateTime.now()\r\n        expenses.filter { it.recurrenceType != RecurrenceType.NONE }\r\n            .groupBy { it.recurrenceGroupId }\r\n            .mapNotNull { (_, groupExpenses) -> \r\n                val baseExpense = groupExpenses.first()\r\n                // Check if this recurring expense still has future occurrences\r\n                val hasFutureOccurrences = groupExpenses.any { \r\n                    it.date.toLocalDate().isAfter(today.toLocalDate().minusDays(1)) // Today and future\r\n                }\r\n                if (hasFutureOccurrences) baseExpense else null\r\n            }\r\n    }\r\n    \r\n    // Filter and sort expenses\r\n    val recurringExpenses = remember(baseRecurringExpenses, searchText, currentSortType, categories, subCategories) {\r\n        var filteredExpenses = baseRecurringExpenses\r\n        \r\n        // Apply search filter\r\n        if (searchText.isNotBlank()) {\r\n            filteredExpenses = filteredExpenses.filter { expense ->\r\n                val category = categories.find { it.id == expense.categoryId }\r\n                val subCategory = subCategories.find { it.id == expense.subCategoryId }\r\n                \r\n                expense.description.contains(searchText, ignoreCase = true) ||\r\n                expense.amount.toString().contains(searchText) ||\r\n                (category?.name?.contains(searchText, ignoreCase = true) == true) ||\r\n                (subCategory?.name?.contains(searchText, ignoreCase = true) == true)\r\n            }\r\n        }\r\n        \r\n        // Apply sorting\r\n        when (currentSortType) {\r\n            SortType.AMOUNT_HIGH_TO_LOW -> filteredExpenses.sortedByDescending { it.getAmountInDefaultCurrency(viewModel.defaultCurrency) }\r\n            SortType.AMOUNT_LOW_TO_HIGH -> filteredExpenses.sortedBy { it.getAmountInDefaultCurrency(viewModel.defaultCurrency) }\r\n            SortType.DESCRIPTION_A_TO_Z -> filteredExpenses.sortedBy { it.description.lowercase() }\r\n            SortType.DESCRIPTION_Z_TO_A -> filteredExpenses.sortedByDescending { it.description.lowercase() }\r\n            SortType.CATEGORY_A_TO_Z -> filteredExpenses.sortedBy { expense ->\r\n                val subCategory = subCategories.find { it.id == expense.subCategoryId }\r\n                subCategory?.name?.lowercase() ?: \"zzz\"\r\n            }\r\n            SortType.CATEGORY_Z_TO_A -> filteredExpenses.sortedByDescending { expense ->\r\n                val subCategory = subCategories.find { it.id == expense.subCategoryId }\r\n                subCategory?.name?.lowercase() ?: \"\"\r\n            }\r\n        }\r\n    }\r\n    \r\n    Box(\r\n        modifier = Modifier\r\n            .fillMaxSize()\r\n            .background(ThemeColors.getBackgroundColor(isDarkTheme))\r\n    ) {\r\n        Column(\r\n            modifier = Modifier.fillMaxSize()\r\n        ) {\r\n            // Header\r\n            Row(\r\n                modifier = Modifier\r\n                    .fillMaxWidth()\r\n                    .padding(16.dp),\r\n                verticalAlignment = Alignment.CenterVertically\r\n            ) {\r\n                IconButton(\r\n                    onClick = onDismiss\r\n                ) {\r\n                    Icon(\r\n                        imageVector = Icons.AutoMirrored.Filled.ArrowBack,\r\n                        contentDescription = stringResource(R.string.back),\r\n                        tint = ThemeColors.getTextColor(isDarkTheme)\r\n                    )\r\n                }\r\n                \r\n                Spacer(modifier = Modifier.width(8.dp))\r\n                \r\n                Text(\r\n                    text = stringResource(R.string.recurring_expenses),\r\n                    fontSize = 20.sp,\r\n                    fontWeight = FontWeight.Bold,\r\n                    color = ThemeColors.getTextColor(isDarkTheme),\r\n                    modifier = Modifier.weight(1f)\r\n                )\r\n                \r\n                // Sort button\r\n                Box {\r\n                    IconButton(\r\n                        onClick = { showSortMenu = true }\r\n                    ) {\r\n                        Icon(\r\n                            imageVector = Icons.AutoMirrored.Filled.Sort,\r\n                            contentDescription = stringResource(R.string.sort),\r\n                            tint = ThemeColors.getTextColor(isDarkTheme)\r\n                        )\r\n                    }\r\n                    \r\n                    DropdownMenu(\r\n                        expanded = showSortMenu,\r\n                        onDismissRequest = { showSortMenu = false },\r\n                        modifier = Modifier.background(ThemeColors.getCardBackgroundColor(isDarkTheme))\r\n                    ) {\r\n                        DropdownMenuItem(\r\n                            text = { Text(stringResource(R.string.amount_high_to_low), color = ThemeColors.getTextColor(isDarkTheme)) },\r\n                            onClick = { \r\n                                currentSortType = SortType.AMOUNT_HIGH_TO_LOW\r\n                                showSortMenu = false \r\n                            }\r\n                        )\r\n                        DropdownMenuItem(\r\n                            text = { Text(stringResource(R.string.amount_low_to_high), color = ThemeColors.getTextColor(isDarkTheme)) },\r\n                            onClick = { \r\n                                currentSortType = SortType.AMOUNT_LOW_TO_HIGH\r\n                                showSortMenu = false \r\n                            }\r\n                        )\r\n                        DropdownMenuItem(\r\n                            text = { Text(stringResource(R.string.description_a_to_z), color = ThemeColors.getTextColor(isDarkTheme)) },\r\n                            onClick = { \r\n                                currentSortType = SortType.DESCRIPTION_A_TO_Z\r\n                                showSortMenu = false \r\n                            }\r\n                        )\r\n                        DropdownMenuItem(\r\n                            text = { Text(stringResource(R.string.description_z_to_a), color = ThemeColors.getTextColor(isDarkTheme)) },\r\n                            onClick = { \r\n                                currentSortType = SortType.DESCRIPTION_Z_TO_A\r\n                                showSortMenu = false \r\n                            }\r\n                        )\r\n                        DropdownMenuItem(\r\n                            text = { Text(stringResource(R.string.category_a_to_z), color = ThemeColors.getTextColor(isDarkTheme)) },\r\n                            onClick = { \r\n                                currentSortType = SortType.CATEGORY_A_TO_Z\r\n                                showSortMenu = false \r\n                            }\r\n                        )\r\n                        DropdownMenuItem(\r\n                            text = { Text(stringResource(R.string.category_z_to_a), color = ThemeColors.getTextColor(isDarkTheme)) },\r\n                            onClick = { \r\n                                currentSortType = SortType.CATEGORY_Z_TO_A\r\n                                showSortMenu = false \r\n                            }\r\n                        )\r\n                    }\r\n                }\r\n            }\r\n            \r\n            // Search bar\r\n            Box(\r\n                modifier = Modifier\r\n                    .fillMaxWidth()\r\n                    .padding(horizontal = 16.dp, vertical = 8.dp)\r\n                    .background(\r\n                        ThemeColors.getInputBackgroundColor(isDarkTheme),\r\n                        RoundedCornerShape(12.dp)\r\n                    )\r\n                    .border(\r\n                        width = 1.dp,\r\n                        color = ThemeColors.getTextGrayColor(isDarkTheme).copy(alpha = 0.3f),\r\n                        shape = RoundedCornerShape(12.dp)\r\n                    )\r\n            ) {\r\n                BasicTextField(\r\n                    value = searchText,\r\n                    onValueChange = { searchText = it },\r\n                    modifier = Modifier\r\n                        .fillMaxWidth()\r\n                        .padding(horizontal = 16.dp, vertical = 12.dp),\r\n                    singleLine = true,\r\n                    textStyle = androidx.compose.ui.text.TextStyle(\r\n                        fontSize = 14.sp,\r\n                        color = ThemeColors.getTextColor(isDarkTheme)\r\n                    ),\r\n                    decorationBox = { innerTextField ->\r\n                        Row(\r\n                            verticalAlignment = Alignment.CenterVertically\r\n                        ) {\r\n                            Icon(\r\n                                imageVector = Icons.Default.Search,\r\n                                contentDescription = stringResource(R.string.search),\r\n                                tint = ThemeColors.getTextGrayColor(isDarkTheme),\r\n                                modifier = Modifier.size(20.dp)\r\n                            )\r\n                            \r\n                            Spacer(modifier = Modifier.width(8.dp))\r\n                            \r\n                            Box(modifier = Modifier.weight(1f)) {\r\n                                if (searchText.isEmpty()) {\r\n                                    Text(\r\n                                        text = stringResource(R.string.search_placeholder),\r\n                                        fontSize = 14.sp,\r\n                                        color = ThemeColors.getTextGrayColor(isDarkTheme)\r\n                                    )\r\n                                }\r\n                                innerTextField()\r\n                            }\r\n                        }\r\n                    }\r\n                )\r\n            }\r\n            \r\n            // Content\r\n            if (recurringExpenses.isEmpty()) {\r\n                Box(\r\n                    modifier = Modifier.fillMaxSize(),\r\n                    contentAlignment = Alignment.Center\r\n                ) {\r\n                    Column(\r\n                        horizontalAlignment = Alignment.CenterHorizontally,\r\n                        modifier = Modifier.padding(32.dp)\r\n                    ) {\r\n                        if (searchText.isNotBlank()) {\r\n                            Text(\r\n                                text = stringResource(R.string.no_search_results),\r\n                                fontSize = 18.sp,\r\n                                fontWeight = FontWeight.Medium,\r\n                                color = ThemeColors.getTextColor(isDarkTheme),\r\n                                textAlign = TextAlign.Center\r\n                            )\r\n                            \r\n                            Spacer(modifier = Modifier.height(8.dp))\r\n                            \r\n                            Text(\r\n                                text = stringResource(R.string.search_no_results_description, searchText),\r\n                                fontSize = 14.sp,\r\n                                color = ThemeColors.getTextGrayColor(isDarkTheme),\r\n                                textAlign = TextAlign.Center\r\n                            )\r\n                        } else {\r\n                            Text(\r\n                                text = stringResource(R.string.no_recurring_expenses),\r\n                                fontSize = 18.sp,\r\n                                fontWeight = FontWeight.Medium,\r\n                                color = ThemeColors.getTextColor(isDarkTheme),\r\n                                textAlign = TextAlign.Center\r\n                            )\r\n                            \r\n                            Spacer(modifier = Modifier.height(8.dp))\r\n                            \r\n                            Text(\r\n                                text = stringResource(R.string.recurring_expenses_hint),\r\n                                fontSize = 14.sp,\r\n                                color = ThemeColors.getTextGrayColor(isDarkTheme),\r\n                                textAlign = TextAlign.Center\r\n                            )\r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n                Column {\r\n                    // Results count (only show when searching)\r\n                    if (searchText.isNotBlank()) {\r\n                        Text(\r\n                            text = stringResource(R.string.results_found, recurringExpenses.size),\r\n                            fontSize = 12.sp,\r\n                            color = ThemeColors.getTextGrayColor(isDarkTheme),\r\n                            modifier = Modifier.padding(horizontal = 16.dp, vertical = 4.dp)\r\n                        )\r\n                    }\r\n                    \r\n                    LazyColumn(\r\n                        modifier = Modifier.fillMaxSize(),\r\n                        contentPadding = PaddingValues(16.dp),\r\n                        verticalArrangement = Arrangement.spacedBy(12.dp)\r\n                    ) {\r\n                    items(recurringExpenses) { expense ->\r\n                        RecurringExpenseCard(\r\n                            expense = expense,\r\n                            viewModel = viewModel,\r\n                            isDarkTheme = isDarkTheme,\r\n                            onDelete = {\r\n                                // Delete all expenses with the same recurrence group ID that are from today onwards\r\n                                val today = java.time.LocalDate.now()\r\n                                val expensesToDelete = expenses.filter { \r\n                                    it.recurrenceGroupId == expense.recurrenceGroupId &&\r\n                                    it.date.toLocalDate().isAfter(today.minusDays(1)) // Today and future\r\n                                }\r\n                                expensesToDelete.forEach { viewModel.deleteExpense(it.id) }\r\n                            }\r\n                        )\r\n                    }\r\n                }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n@OptIn(ExperimentalMaterial3Api::class)\r\n@Composable\r\nfun RecurringExpenseCard(\r\n    expense: Expense,\r\n    viewModel: ExpenseViewModel,\r\n    isDarkTheme: Boolean,\r\n    onDelete: () -> Unit\r\n) {\r\n    var isEditing by remember { mutableStateOf(false) }\r\n    var editAmount by remember { mutableStateOf(expense.amount.toString()) }\r\n    var editDescription by remember { mutableStateOf(expense.description) }\r\n    var editExchangeRate by remember { mutableStateOf(expense.exchangeRate?.toString() ?: \"\") }\r\n    var showDeleteConfirmation by remember { mutableStateOf(false) }\r\n    var showEndDatePicker by remember { mutableStateOf(false) }\r\n    var tempEndDate by remember { mutableStateOf(expense.endDate ?: LocalDateTime.now().plusYears(1)) }\r\n    \r\n    // Collect categories and subcategories from ViewModel\r\n    val categories by viewModel.categories.collectAsState()\r\n    val subCategories by viewModel.subCategories.collectAsState()\r\n    \r\n    // Get category and subcategory for this expense\r\n    val category = categories.find { it.id == expense.categoryId }\r\n    val subCategory = subCategories.find { it.id == expense.subCategoryId }\r\n\r\n    // Calculate total and remaining amounts based on selected date\r\n    val allExpenses by viewModel.expenses.collectAsState()\r\n    val selectedDate = viewModel.selectedDate.collectAsState().value\r\n    val recurringExpensesForThisGroup = allExpenses.filter {\r\n        it.recurrenceGroupId == expense.recurrenceGroupId\r\n    }\r\n\r\n    // Total amount for all expenses in this recurring group\r\n    val totalAmount = recurringExpensesForThisGroup\r\n        .sumOf { it.getAmountInDefaultCurrency(viewModel.defaultCurrency) }\r\n\r\n    // Remaining amount from selected date onwards\r\n    val remainingAmount =\r\n        recurringExpensesForThisGroup.filter {\r\n            it.date.toLocalDate().isAfter(selectedDate.toLocalDate()) &&\r\n            it.date.toLocalDate().isBefore(expense.endDate!!.toLocalDate().plusDays(1))\r\n        }.sumOf { it.getAmountInDefaultCurrency(viewModel.defaultCurrency) }\r\n    \r\n    // Swipe animation state\r\n    var offsetX by remember { mutableStateOf(0f) }\r\n    var isSwiped by remember { mutableStateOf(false) }\r\n    \r\n    // Animated offset for smooth movement\r\n    val animatedOffsetX by animateFloatAsState(\r\n        targetValue = offsetX,\r\n        animationSpec = spring(\r\n            dampingRatio = Spring.DampingRatioMediumBouncy,\r\n            stiffness = Spring.StiffnessLow\r\n        ),\r\n        label = \"swipe_offset\"\r\n    )\r\n    \r\n    Column(\r\n        modifier = Modifier.fillMaxWidth()\r\n    ) {\r\n        Box(\r\n            modifier = Modifier\r\n                .fillMaxWidth()\r\n                .padding(vertical = 2.dp)\r\n        ) {\r\n            // Delete background that appears when swiping\r\n            if (abs(offsetX) > 0f) {\r\n                Box(\r\n                    modifier = Modifier\r\n                        .fillMaxSize()\r\n                        .background(\r\n                            Color.Red.copy(alpha = 0.8f),\r\n                            RoundedCornerShape(12.dp)\r\n                        )\r\n                        .padding(16.dp),\r\n                    contentAlignment = Alignment.CenterEnd\r\n                ) {\r\n                    Row(\r\n                        verticalAlignment = Alignment.CenterVertically,\r\n                        horizontalArrangement = Arrangement.spacedBy(8.dp)\r\n                    ) {\r\n                        Icon(\r\n                            imageVector = Icons.Default.Delete,\r\n                            contentDescription = stringResource(R.string.delete),\r\n                            tint = Color.White,\r\n                            modifier = Modifier.size(24.dp)\r\n                        )\r\n                        Text(\r\n                            text = stringResource(R.string.delete),\r\n                            color = Color.White,\r\n                            fontWeight = FontWeight.Bold,\r\n                            fontSize = 16.sp\r\n                        )\r\n                    }\r\n                }\r\n            }\r\n            \r\n            // Main card content\r\n            Card(\r\n                modifier = Modifier\r\n                    .fillMaxWidth()\r\n                    .offset(x = animatedOffsetX.dp)\r\n                    .pointerInput(Unit) {\r\n                        detectHorizontalDragGestures(\r\n                            onDragEnd = {\r\n                                if (abs(offsetX) > 150f) {\r\n                                    // Swipe threshold reached, show confirmation\r\n                                    showDeleteConfirmation = true\r\n                                    isSwiped = true\r\n                                } else {\r\n                                    // Reset position if not swiped enough\r\n                                    offsetX = 0f\r\n                                    isSwiped = false\r\n                                }\r\n                            }\r\n                        ) { _, dragAmount ->\r\n                            // Only allow left swipe (negative drag)\r\n                            if (dragAmount < 0) {\r\n                                offsetX = (offsetX + dragAmount).coerceAtMost(0f)\r\n                            }\r\n                        }\r\n                    }\r\n                    .clickable {\r\n                        if (!isSwiped) {\r\n                            if (isEditing) {\r\n                                // If already editing, close the edit mode\r\n                                isEditing = false\r\n                                // Reset edit fields to original values\r\n                                editAmount = expense.amount.toString()\r\n                                editDescription = expense.description\r\n                                editExchangeRate = expense.exchangeRate?.toString() ?: \"\"\r\n                            } else {\r\n                                // If not editing, open edit mode\r\n                                isEditing = true\r\n                            }\r\n                        }\r\n                    },\r\n                shape = RoundedCornerShape(12.dp),\r\n                colors = CardDefaults.cardColors(\r\n                    containerColor = ThemeColors.getCardBackgroundColor(isDarkTheme)\r\n                )\r\n            ) {\r\n                Column(\r\n                    modifier = Modifier.fillMaxWidth()\r\n                ) {\r\n                    Row(\r\n                        modifier = Modifier\r\n                            .fillMaxWidth()\r\n                            .padding(12.dp),\r\n                        horizontalArrangement = Arrangement.SpaceBetween,\r\n                        verticalAlignment = Alignment.CenterVertically\r\n                    ) {\r\n                        Row(\r\n                            verticalAlignment = Alignment.CenterVertically,\r\n                            modifier = Modifier.weight(1f)\r\n                        ) {\r\n                            Box(\r\n                                modifier = Modifier\r\n                                    .size(32.dp)\r\n                                    .background(\r\n                                        (category?.getColor() ?: Color.Gray).copy(alpha = 0.2f),\r\n                                        CircleShape\r\n                                    ),\r\n                                contentAlignment = Alignment.Center\r\n                            ) {\r\n                                Icon(\r\n                                    imageVector = category?.getIcon() ?: Icons.Default.Category,\r\n                                    contentDescription = category?.name ?: \"Category\",\r\n                                    tint = category?.getColor() ?: Color.Gray,\r\n                                    modifier = Modifier.size(16.dp)\r\n                                )\r\n                            }\r\n                            \r\n                            Spacer(modifier = Modifier.width(12.dp))\r\n                            \r\n                            Column {\r\n                                Text(\r\n                                    text = subCategory?.name ?: \"Unknown\",\r\n                                    fontWeight = FontWeight.Medium,\r\n                                    fontSize = 15.sp,\r\n                                    color = ThemeColors.getTextColor(isDarkTheme),\r\n                                    maxLines = 1,\r\n                                    overflow = TextOverflow.Ellipsis\r\n                                )\r\n                                if (expense.description.isNotBlank()) {\r\n                                    Text(\r\n                                        text = expense.description,\r\n                                        fontSize = 13.sp,\r\n                                        color = ThemeColors.getTextGrayColor(isDarkTheme),\r\n                                        maxLines = 1,\r\n                                        overflow = TextOverflow.Ellipsis\r\n                                    )\r\n                                }\r\n                            }\r\n                        }\r\n                        \r\n                        Column(\r\n                            horizontalAlignment = Alignment.End\r\n                        ) {\r\n                            Text(\r\n                                text = \"${expense.currency} ${NumberFormatter.formatAmount(expense.amount)}\",\r\n                                fontWeight = FontWeight.Bold,\r\n                                fontSize = 16.sp,\r\n                                color = ThemeColors.getTextColor(isDarkTheme)\r\n                            )\r\n                            if (expense.exchangeRate != null) {\r\n                                Text(\r\n                                    text = stringResource(R.string.exchange_rate, String.format(\"%.4f\", expense.exchangeRate)),\r\n                                    fontSize = 11.sp,\r\n                                    color = ThemeColors.getTextGrayColor(isDarkTheme)\r\n                                )\r\n                            }\r\n                            Text(\r\n                                text = \"Toplam: ${viewModel.defaultCurrency} ${NumberFormatter.formatAmount(totalAmount)}\",\r\n                                fontSize = 11.sp,\r\n                                color = ThemeColors.getTextGrayColor(isDarkTheme)\r\n                            )\r\n                            Text(\r\n                                text = \"Kalan: ${viewModel.defaultCurrency} ${NumberFormatter.formatAmount(remainingAmount)}\",\r\n                                fontSize = 11.sp,\r\n                                color = AppColors.PrimaryOrange\r\n                            )\r\n                        }\r\n                    }\r\n                    \r\n                    // Recurrence info row\r\n                    Row(\r\n                        modifier = Modifier\r\n                            .fillMaxWidth()\r\n                            .padding(horizontal = 12.dp, vertical = 4.dp),\r\n                        horizontalArrangement = Arrangement.SpaceBetween,\r\n                        verticalAlignment = Alignment.CenterVertically\r\n                    ) {\r\n                        Text(\r\n                            text = when (expense.recurrenceType) {\r\n                                RecurrenceType.DAILY -> stringResource(R.string.daily)\r\n                                RecurrenceType.WEEKDAYS -> stringResource(R.string.weekdays)\r\n                                RecurrenceType.WEEKLY -> stringResource(R.string.weekly)\r\n                                RecurrenceType.MONTHLY -> stringResource(R.string.monthly)\r\n                                RecurrenceType.NONE -> \"\"\r\n                            },\r\n                            fontSize = 12.sp,\r\n                            color = ThemeColors.getTextGrayColor(isDarkTheme)\r\n                        )\r\n                        \r\n                        expense.endDate?.let { endDate ->\r\n                            Text(\r\n                                text = stringResource(R.string.end_date_recurring, endDate.format(DateTimeFormatter.ofPattern(\"dd MMM yyyy\", Locale.getDefault()))),\r\n                                fontSize = 12.sp,\r\n                                color = ThemeColors.getTextGrayColor(isDarkTheme)\r\n                            )\r\n                        }\r\n                    }\r\n                    \r\n                    AnimatedVisibility(\r\n                        visible = isEditing,\r\n                        enter = expandVertically(),\r\n                        exit = shrinkVertically()\r\n                    ) {\r\n                        Column(\r\n                            modifier = Modifier\r\n                                .fillMaxWidth()\r\n                                .padding(12.dp)\r\n                                .background(\r\n                                    ThemeColors.getCardBackgroundColor(isDarkTheme),\r\n                                    RoundedCornerShape(8.dp)\r\n                                )\r\n                                .padding(12.dp)\r\n                        ) {\r\n                            // Amount field\r\n                            Box(\r\n                                modifier = Modifier\r\n                                    .fillMaxWidth()\r\n                                    .height(40.dp)\r\n                                    .background(\r\n                                        ThemeColors.getInputBackgroundColor(isDarkTheme),\r\n                                        RoundedCornerShape(12.dp)\r\n                                    )\r\n                                    .border(\r\n                                        width = 1.dp,\r\n                                        color = ThemeColors.getTextGrayColor(isDarkTheme),\r\n                                        shape = RoundedCornerShape(12.dp)\r\n                                    )\r\n                            ) {\r\n                                BasicTextField(\r\n                                    value = editAmount,\r\n                                    onValueChange = { newValue ->\r\n                                        if (newValue.isEmpty() || newValue.matches(Regex(\"^\\\\d*\\\\.?\\\\d*$\"))) {\r\n                                            editAmount = newValue\r\n                                        }\r\n                                    },\r\n                                    modifier = Modifier\r\n                                        .fillMaxSize()\r\n                                        .padding(horizontal = 12.dp),\r\n                                    singleLine = true,\r\n                                    keyboardOptions = KeyboardOptions(keyboardType = KeyboardType.Decimal),\r\n                                    textStyle = androidx.compose.ui.text.TextStyle(\r\n                                        fontSize = 14.sp,\r\n                                        color = ThemeColors.getTextColor(isDarkTheme)\r\n                                    ),\r\n                                    decorationBox = { innerTextField ->\r\n                                        Box(\r\n                                            contentAlignment = Alignment.CenterStart\r\n                                        ) {\r\n                                            if (editAmount.isEmpty()) {\r\n                                                Text(\r\n                                                    text = stringResource(R.string.amount),\r\n                                                    fontSize = 14.sp,\r\n                                                    color = ThemeColors.getTextGrayColor(isDarkTheme)\r\n                                                )\r\n                                            }\r\n                                            innerTextField()\r\n                                        }\r\n                                    }\r\n                                )\r\n                            }\r\n                            \r\n                            Spacer(modifier = Modifier.height(8.dp))\r\n                            \r\n                            // Description field\r\n                            Box(\r\n                                modifier = Modifier\r\n                                    .fillMaxWidth()\r\n                                    .height(40.dp)\r\n                                    .background(\r\n                                        ThemeColors.getInputBackgroundColor(isDarkTheme),\r\n                                        RoundedCornerShape(12.dp)\r\n                                    )\r\n                                    .border(\r\n                                        width = 1.dp,\r\n                                        color = ThemeColors.getTextGrayColor(isDarkTheme),\r\n                                        shape = RoundedCornerShape(12.dp)\r\n                                    )\r\n                            ) {\r\n                                BasicTextField(\r\n                                    value = editDescription,\r\n                                    onValueChange = { editDescription = it },\r\n                                    modifier = Modifier\r\n                                        .fillMaxSize()\r\n                                        .padding(horizontal = 12.dp),\r\n                                    singleLine = true,\r\n                                    textStyle = androidx.compose.ui.text.TextStyle(\r\n                                        fontSize = 14.sp,\r\n                                        color = ThemeColors.getTextColor(isDarkTheme)\r\n                                    ),\r\n                                    decorationBox = { innerTextField ->\r\n                                        Box(\r\n                                            contentAlignment = Alignment.CenterStart\r\n                                        ) {\r\n                                            if (editDescription.isEmpty()) {\r\n                                                Text(\r\n                                                    text = stringResource(R.string.description),\r\n                                                    fontSize = 14.sp,\r\n                                                    color = ThemeColors.getTextGrayColor(isDarkTheme)\r\n                                                )\r\n                                            }\r\n                                            innerTextField()\r\n                                        }\r\n                                    }\r\n                                )\r\n                            }\r\n                            \r\n                            // Exchange Rate (only show if currency is different from default)\r\n                            if (expense.currency != viewModel.defaultCurrency) {\r\n                                Spacer(modifier = Modifier.height(8.dp))\r\n                                \r\n                                Box(\r\n                                    modifier = Modifier\r\n                                        .fillMaxWidth()\r\n                                        .height(40.dp)\r\n                                        .background(\r\n                                            ThemeColors.getInputBackgroundColor(isDarkTheme),\r\n                                            RoundedCornerShape(12.dp)\r\n                                        )\r\n                                        .border(\r\n                                            width = 1.dp,\r\n                                            color = ThemeColors.getTextGrayColor(isDarkTheme),\r\n                                            shape = RoundedCornerShape(12.dp)\r\n                                        )\r\n                                ) {\r\n                                    BasicTextField(\r\n                                        value = editExchangeRate,\r\n                                        onValueChange = { newValue ->\r\n                                            if (newValue.isEmpty() || newValue.matches(Regex(\"^\\\\d*\\\\.?\\\\d*$\"))) {\r\n                                                editExchangeRate = newValue\r\n                                            }\r\n                                        },\r\n                                        modifier = Modifier\r\n                                            .fillMaxSize()\r\n                                            .padding(horizontal = 12.dp),\r\n                                        singleLine = true,\r\n                                        keyboardOptions = KeyboardOptions(keyboardType = KeyboardType.Decimal),\r\n                                        textStyle = androidx.compose.ui.text.TextStyle(\r\n                                            fontSize = 14.sp,\r\n                                            color = ThemeColors.getTextColor(isDarkTheme)\r\n                                        ),\r\n                                        decorationBox = { innerTextField ->\r\n                                            Box(\r\n                                                contentAlignment = Alignment.CenterStart\r\n                                            ) {\r\n                                                if (editExchangeRate.isEmpty()) {\r\n                                                    Text(\r\n                                                        text = stringResource(R.string.exchange_rate_field),\r\n                                                        fontSize = 14.sp,\r\n                                                        color = ThemeColors.getTextGrayColor(isDarkTheme)\r\n                                                    )\r\n                                                }\r\n                                                innerTextField()\r\n                                            }\r\n                                        }\r\n                                    )\r\n                                }\r\n                            }\r\n                            \r\n                            // End Date field\r\n                            Spacer(modifier = Modifier.height(8.dp))\r\n                            \r\n                            Box(\r\n                                modifier = Modifier\r\n                                    .fillMaxWidth()\r\n                                    .height(40.dp)\r\n                                    .background(\r\n                                        ThemeColors.getInputBackgroundColor(isDarkTheme),\r\n                                        RoundedCornerShape(12.dp)\r\n                                    )\r\n                                    .border(\r\n                                        width = 1.dp,\r\n                                        color = ThemeColors.getTextGrayColor(isDarkTheme),\r\n                                        shape = RoundedCornerShape(12.dp)\r\n                                    )\r\n                                    .clickable { showEndDatePicker = true }\r\n                            ) {\r\n                                Row(\r\n                                    modifier = Modifier\r\n                                        .fillMaxSize()\r\n                                        .padding(horizontal = 12.dp),\r\n                                    verticalAlignment = Alignment.CenterVertically,\r\n                                    horizontalArrangement = Arrangement.SpaceBetween\r\n                                ) {\r\n                                    Text(\r\n                                        text = tempEndDate.format(DateTimeFormatter.ofPattern(\"dd/MM/yyyy\")),\r\n                                        fontSize = 14.sp,\r\n                                        color = ThemeColors.getTextColor(isDarkTheme)\r\n                                    )\r\n                                    \r\n                                    Icon(\r\n                                        imageVector = Icons.Default.CalendarToday,\r\n                                        contentDescription = stringResource(R.string.select_date),\r\n                                        tint = ThemeColors.getTextGrayColor(isDarkTheme),\r\n                                        modifier = Modifier.size(20.dp)\r\n                                    )\r\n                                }\r\n                            }\r\n                            \r\n                            Spacer(modifier = Modifier.height(12.dp))\r\n                            \r\n                            Row(\r\n                                horizontalArrangement = Arrangement.spacedBy(8.dp),\r\n                                modifier = Modifier.fillMaxWidth()\r\n                            ) {\r\n\r\n\r\n                                Button(\r\n                                    onClick = {\r\n                                        isEditing = false\r\n                                        editAmount = expense.amount.toString()\r\n                                        editDescription = expense.description\r\n                                        editExchangeRate = expense.exchangeRate?.toString() ?: \"\"\r\n                                    },\r\n                                    modifier = Modifier\r\n                                        .weight(1f)\r\n                                        .height(36.dp),\r\n                                    colors = ButtonDefaults.buttonColors(\r\n                                        containerColor = ThemeColors.getButtonDisabledColor(isDarkTheme)\r\n                                    ),\r\n                                    shape = RoundedCornerShape(26.dp)\r\n                                ) {\r\n                                    Row(\r\n                                        verticalAlignment = Alignment.CenterVertically\r\n                                    ) {\r\n                                        Icon(\r\n                                            imageVector = Icons.Default.Close,\r\n                                            contentDescription = stringResource(R.string.cancel),\r\n                                            tint = ThemeColors.getTextColor(isDarkTheme),\r\n                                            modifier = Modifier.size(16.dp)\r\n                                        )\r\n                                        Spacer(modifier = Modifier.width(4.dp))\r\n                                        Text(stringResource(R.string.cancel), fontSize = 12.sp, color = ThemeColors.getTextColor(isDarkTheme))\r\n                                    }\r\n                                }\r\n                                Button(\r\n                                    onClick = {\r\n                                        val newAmount = editAmount.toDoubleOrNull()\r\n                                        if (newAmount != null && newAmount > 0) {\r\n                                            val newEndDate = tempEndDate\r\n                                            val newExchangeRate = if (expense.currency != viewModel.defaultCurrency) {\r\n                                                editExchangeRate.toDoubleOrNull()\r\n                                            } else {\r\n                                                null\r\n                                            }\r\n\r\n                                            // Use the new method to handle end date changes properly\r\n                                            viewModel.updateRecurringExpenseEndDate(\r\n                                                baseExpense = expense,\r\n                                                newEndDate = newEndDate,\r\n                                                newAmount = newAmount,\r\n                                                newDescription = editDescription,\r\n                                                newExchangeRate = newExchangeRate\r\n                                            )\r\n                                        }\r\n                                        isEditing = false\r\n                                    },\r\n                                    modifier = Modifier\r\n                                        .weight(1f)\r\n                                        .height(36.dp),\r\n                                    colors = ButtonDefaults.buttonColors(\r\n                                        containerColor = AppColors.PrimaryOrange\r\n                                    ),\r\n                                    shape = RoundedCornerShape(26.dp)\r\n                                ) {\r\n                                    Row(\r\n                                        verticalAlignment = Alignment.CenterVertically\r\n                                    ) {\r\n                                        Icon(\r\n                                            imageVector = Icons.Default.Check,\r\n                                            contentDescription = stringResource(R.string.save),\r\n                                            tint = ThemeColors.getTextColor(isDarkTheme),\r\n                                            modifier = Modifier.size(16.dp)\r\n                                        )\r\n                                        Spacer(modifier = Modifier.width(4.dp))\r\n                                        Text(stringResource(R.string.save), fontSize = 12.sp, color = ThemeColors.getTextColor(isDarkTheme))\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    if (showDeleteConfirmation) {\r\n        AlertDialog(\r\n            onDismissRequest = {\r\n                showDeleteConfirmation = false\r\n                // Reset swipe state when dialog is dismissed\r\n                offsetX = 0f\r\n                isSwiped = false\r\n            },\r\n            title = {\r\n                Text(\r\n                    text = stringResource(R.string.delete_recurring_expense),\r\n                    color = ThemeColors.getTextColor(isDarkTheme),\r\n                    fontWeight = FontWeight.Bold\r\n                )\r\n            },\r\n            text = {\r\n                Text(\r\n                    text = stringResource(R.string.delete_recurring_confirmation),\r\n                    color = ThemeColors.getTextColor(isDarkTheme)\r\n                )\r\n            },\r\n            confirmButton = {\r\n                TextButton(\r\n                    onClick = {\r\n                        onDelete()\r\n                        showDeleteConfirmation = false\r\n                        // Reset swipe state after deletion\r\n                        offsetX = 0f\r\n                        isSwiped = false\r\n                    }\r\n                ) {\r\n                    Text(\r\n                        stringResource(R.string.delete),\r\n                        color = Color.Red,\r\n                        fontWeight = FontWeight.Bold\r\n                    )\r\n                }\r\n            },\r\n            dismissButton = {\r\n                TextButton(\r\n                    onClick = {\r\n                        showDeleteConfirmation = false\r\n                        // Reset swipe state when canceling\r\n                        offsetX = 0f\r\n                        isSwiped = false\r\n                    }\r\n                ) {\r\n                    Text(\r\n                        stringResource(R.string.cancel),\r\n                        color = ThemeColors.getTextColor(isDarkTheme)\r\n                    )\r\n                }\r\n            },\r\n            containerColor = ThemeColors.getDialogBackgroundColor(isDarkTheme)\r\n        )\r\n    }\r\n    \r\n    // Date Picker Dialog\r\n    if (showEndDatePicker) {\r\n        val datePickerState = rememberDatePickerState(\r\n            initialSelectedDateMillis = tempEndDate.toInstant(java.time.ZoneOffset.UTC).toEpochMilli()\r\n        )\r\n        \r\n        DatePickerDialog(\r\n            onDismissRequest = { showEndDatePicker = false },\r\n            confirmButton = {\r\n                TextButton(\r\n                    onClick = {\r\n                        datePickerState.selectedDateMillis?.let { millis ->\r\n                            tempEndDate = java.time.Instant.ofEpochMilli(millis)\r\n                                .atZone(java.time.ZoneOffset.UTC)\r\n                                .toLocalDateTime()\r\n                        }\r\n                        showEndDatePicker = false\r\n                    }\r\n                ) {\r\n                    Text(\r\n                        stringResource(R.string.ok),\r\n                        color = AppColors.PrimaryOrange,\r\n                        fontWeight = FontWeight.SemiBold\r\n                    )\r\n                }\r\n            },\r\n            dismissButton = {\r\n                TextButton(\r\n                    onClick = { showEndDatePicker = false }\r\n                ) {\r\n                    Text(\r\n                        stringResource(R.string.cancel),\r\n                        color = if (isDarkTheme) ThemeColors.getTextGrayColor(true) else Color.White\r\n                    )\r\n                }\r\n            }\r\n        ) {\r\n            DatePicker(\r\n                state = datePickerState,\r\n                colors = DatePickerDefaults.colors(\r\n                    containerColor = if (isDarkTheme) Color(0xFF1E1E1E) else Color.White,\r\n                    titleContentColor = if (isDarkTheme) Color.White else Color.Black,\r\n                    headlineContentColor = if (isDarkTheme) Color.White else Color.Black,\r\n                    weekdayContentColor = Color.Gray,\r\n                    subheadContentColor = if (isDarkTheme) Color.White else Color.Black,\r\n                    yearContentColor = if (isDarkTheme) Color.White else Color.Black,\r\n                    currentYearContentColor = AppColors.PrimaryOrange,\r\n                    selectedYearContentColor = if (isDarkTheme) Color.White else Color.White,\r\n                    selectedYearContainerColor = AppColors.PrimaryOrange,\r\n                    dayContentColor = if (isDarkTheme) Color.White else Color.Black,\r\n                    selectedDayContentColor = if (isDarkTheme) Color.White else Color.White,\r\n                    selectedDayContainerColor = AppColors.PrimaryOrange,\r\n                    todayContentColor = AppColors.PrimaryOrange,\r\n                    todayDateBorderColor = AppColors.PrimaryOrange\r\n                )\r\n            )\r\n        }\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/expensetrackerkotlin/ui/screens/RecurringExpensesScreen.kt b/app/src/main/java/com/example/expensetrackerkotlin/ui/screens/RecurringExpensesScreen.kt
--- a/app/src/main/java/com/example/expensetrackerkotlin/ui/screens/RecurringExpensesScreen.kt	(revision 704fb63dbd103d83a77a5d2f59944f4c74685798)
+++ b/app/src/main/java/com/example/expensetrackerkotlin/ui/screens/RecurringExpensesScreen.kt	(date 1759316126904)
@@ -576,12 +576,12 @@
                                 )
                             }
                             Text(
-                                text = "Toplam: ${viewModel.defaultCurrency} ${NumberFormatter.formatAmount(totalAmount)}",
+                                text = stringResource(R.string.recurring_total) + "${viewModel.defaultCurrency} ${NumberFormatter.formatAmount(totalAmount)}",
                                 fontSize = 11.sp,
                                 color = ThemeColors.getTextGrayColor(isDarkTheme)
                             )
                             Text(
-                                text = "Kalan: ${viewModel.defaultCurrency} ${NumberFormatter.formatAmount(remainingAmount)}",
+                                text = stringResource(R.string.recurring_remaining) +"${viewModel.defaultCurrency} ${NumberFormatter.formatAmount(remainingAmount)}",
                                 fontSize = 11.sp,
                                 color = AppColors.PrimaryOrange
                             )
Index: app/src/main/java/com/example/expensetrackerkotlin/ui/components/PurchaseBottomSheet.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.expensetrackerkotlin.ui.components\r\n\r\nimport androidx.compose.animation.core.*\r\nimport androidx.compose.foundation.background\r\nimport androidx.compose.foundation.border\r\nimport androidx.compose.foundation.clickable\r\nimport androidx.compose.foundation.layout.*\r\nimport androidx.compose.foundation.shape.RoundedCornerShape\r\nimport androidx.compose.material.icons.Icons\r\nimport androidx.compose.material.icons.filled.*\r\nimport androidx.compose.material3.*\r\nimport androidx.compose.runtime.*\r\nimport androidx.compose.ui.Alignment\r\nimport androidx.compose.ui.Modifier\r\nimport androidx.compose.ui.graphics.Brush\r\nimport androidx.compose.ui.graphics.Color\r\nimport androidx.compose.ui.graphics.vector.ImageVector\r\nimport androidx.compose.ui.res.painterResource\r\nimport androidx.compose.ui.res.vectorResource\r\nimport androidx.compose.ui.text.font.FontWeight\r\nimport androidx.compose.ui.text.style.TextAlign\r\nimport androidx.compose.ui.unit.dp\r\nimport androidx.compose.ui.unit.sp\r\nimport com.example.expensetrackerkotlin.R\r\nimport com.example.expensetrackerkotlin.ui.theme.AppColors\r\nimport com.example.expensetrackerkotlin.ui.theme.ThemeColors\r\nimport kotlinx.coroutines.delay\r\n\r\ndata class PurchaseOption(\r\n    val title: String,\r\n    val price: String,\r\n    val icon: ImageVector,\r\n    val productId: String\r\n)\r\n\r\n@OptIn(ExperimentalMaterial3Api::class)\r\n@Composable\r\nfun PurchaseBottomSheet(\r\n    isDarkTheme: Boolean,\r\n    onDismiss: () -> Unit,\r\n    onPurchase: (String) -> Unit\r\n) {\r\n    val sheetState = rememberModalBottomSheetState(\r\n        skipPartiallyExpanded = true,\r\n        confirmValueChange = { true }\r\n    )\r\n\r\n    LaunchedEffect(Unit) {\r\n        sheetState.expand()\r\n    }\r\n\r\n    ModalBottomSheet(\r\n        onDismissRequest = onDismiss,\r\n        sheetState = sheetState,\r\n        containerColor = ThemeColors.getBackgroundColor(isDarkTheme),\r\n        dragHandle = { BottomSheetDefaults.DragHandle() }\r\n    ) {\r\n        Column(\r\n            modifier = Modifier\r\n                .fillMaxWidth()\r\n                .padding(24.dp),\r\n            horizontalAlignment = Alignment.CenterHorizontally\r\n        ) {\r\n\r\n\r\n            // Typewriter Animation Text\r\n            TypewriterText(\r\n                text = \"Senin saçma reklamlar ile boğmak istemiyorum ve tüm özelliklere premium versiyon olmadan ulaşabilmeni istiyorum.\" +\r\n                \" Ama geliştirme yapabilmem için gelire ihtiyacım var.\" +\r\n                \" Uygulamamı beğendiysen ve destek olmak istersen bir çayını içerim(Fiyatlara enflasyon etki etmiyor burada) :).\",\r\n                isDarkTheme = isDarkTheme\r\n            )\r\n\r\n            Spacer(modifier = Modifier.height(32.dp))\r\n\r\n            // Purchase Options\r\n            PurchaseOptions(\r\n                isDarkTheme = isDarkTheme,\r\n                onPurchase = onPurchase\r\n            )\r\n\r\n            Spacer(modifier = Modifier.height(24.dp))\r\n        }\r\n    }\r\n}\r\n\r\n@Composable\r\nprivate fun TypewriterText(\r\n    text: String,\r\n    isDarkTheme: Boolean\r\n) {\r\n    var displayText by remember { mutableStateOf(\"\") }\r\n    var isAnimationComplete by remember { mutableStateOf(false) }\r\n\r\n    LaunchedEffect(text) {\r\n        displayText = \"\"\r\n        isAnimationComplete = false\r\n\r\n        text.forEachIndexed { index, _ ->\r\n            delay(80) // Typewriter speed\r\n            displayText = text.substring(0, index + 1)\r\n        }\r\n\r\n        isAnimationComplete = true\r\n    }\r\n\r\n    Text(\r\n        text = displayText + if (!isAnimationComplete && displayText.isNotEmpty()) \"|\" else \"\",\r\n        fontSize = 14.sp,\r\n        color = ThemeColors.getTextColor(isDarkTheme),\r\n        modifier = Modifier.fillMaxWidth()\r\n    )\r\n}\r\n\r\n@Composable\r\nprivate fun PurchaseOptions(\r\n    isDarkTheme: Boolean,\r\n    onPurchase: (String) -> Unit\r\n) {\r\n\r\n    val doner: ImageVector = ImageVector.vectorResource(id = R.drawable.doner)\r\n    val bagel: ImageVector = ImageVector.vectorResource(id = R.drawable.bagel)\r\n    val burrito: ImageVector = ImageVector.vectorResource(id = R.drawable.burrito)\r\n    val purchaseOptions = listOf(\r\n        PurchaseOption(\r\n            title = \"Su ısmarla\",\r\n            price = \"5 TL\",\r\n            icon = Icons.Default.LocalDrink,\r\n            productId = \"su_donation\"\r\n        ),\r\n        PurchaseOption(\r\n            title = \"Çay ısmarla\",\r\n            price = \"10 TL\",\r\n            icon = Icons.Default.LocalCafe,\r\n            productId = \"tea_donation\"\r\n        ),\r\n        PurchaseOption(\r\n            title = \"Simit ısmarla\",\r\n            price = \"25 TL\",\r\n            icon = bagel,\r\n            productId = \"bagel_donation\"\r\n        ),\r\n        PurchaseOption(\r\n            title = \"Kahve ısmarla\",\r\n            price = \"50 TL\",\r\n            icon = Icons.Default.LocalCafe,\r\n            productId = \"coffee_donation\"\r\n        ),\r\n        PurchaseOption(\r\n            title = \"Hatay Dürüm ısmarla\",\r\n            price = \"100 TL\",\r\n            icon = burrito,\r\n            productId = \"wrap_donation\"\r\n        ),\r\n        PurchaseOption(\r\n            title = \"Burger ısmarla\",\r\n            price = \"250 TL\",\r\n            icon = Icons.Default.LunchDining,\r\n            productId = \"burger_donation\"\r\n        ),\r\n        PurchaseOption(\r\n            title = \"İskender ısmarla\",\r\n            price = \"400 TL\",\r\n            icon = doner,\r\n            productId = \"doner_donation\"\r\n        ),\r\n        PurchaseOption(\r\n            title = \"Şımart beni\",\r\n            price = \"500 TL\",\r\n            icon = Icons.Default.Star,\r\n            productId = \"max_donation\"\r\n        )\r\n    )\r\n\r\n    Column(\r\n        verticalArrangement = Arrangement.spacedBy(12.dp)\r\n    ) {\r\n        // First row with 2 cards\r\n        Row(\r\n            modifier = Modifier.fillMaxWidth(),\r\n            horizontalArrangement = Arrangement.spacedBy(12.dp)\r\n        ) {\r\n            PurchaseOptionCard(\r\n                option = purchaseOptions[0],\r\n                isDarkTheme = isDarkTheme,\r\n                onClick = { onPurchase(purchaseOptions[0].productId) },\r\n                modifier = Modifier.weight(1f)\r\n            )\r\n            PurchaseOptionCard(\r\n                option = purchaseOptions[1],\r\n                isDarkTheme = isDarkTheme,\r\n                onClick = { onPurchase(purchaseOptions[1].productId) },\r\n                modifier = Modifier.weight(1f)\r\n            )\r\n        }\r\n\r\n        // Second row with 1 card centered\r\n        Row(\r\n            modifier = Modifier.fillMaxWidth(),\r\n            horizontalArrangement = Arrangement.Center\r\n        ) {\r\n            PurchaseOptionCard(\r\n                option = purchaseOptions[2],\r\n                isDarkTheme = isDarkTheme,\r\n                onClick = { onPurchase(purchaseOptions[2].productId) },\r\n                modifier = Modifier.fillMaxWidth(0.5f)\r\n            )\r\n            PurchaseOptionCard(\r\n                option = purchaseOptions[3],\r\n                isDarkTheme = isDarkTheme,\r\n                onClick = { onPurchase(purchaseOptions[3].productId) },\r\n                modifier = Modifier.weight(1f)\r\n            )\r\n        }\r\n        // Third row with 1 card centered\r\n        Row(\r\n            modifier = Modifier.fillMaxWidth(),\r\n            horizontalArrangement = Arrangement.Center\r\n        ) {\r\n            PurchaseOptionCard(\r\n                option = purchaseOptions[4],\r\n                isDarkTheme = isDarkTheme,\r\n                onClick = { onPurchase(purchaseOptions[4].productId) },\r\n                modifier = Modifier.fillMaxWidth(0.5f)\r\n            )\r\n            PurchaseOptionCard(\r\n                option = purchaseOptions[5],\r\n                isDarkTheme = isDarkTheme,\r\n                onClick = { onPurchase(purchaseOptions[5].productId) },\r\n                modifier = Modifier.weight(1f)\r\n            )\r\n        }\r\n        // Fifth row with 1 card centered\r\n        Row(\r\n            modifier = Modifier.fillMaxWidth(),\r\n            horizontalArrangement = Arrangement.Center\r\n        ) {\r\n            PurchaseOptionCard(\r\n                option = purchaseOptions[6],\r\n                isDarkTheme = isDarkTheme,\r\n                onClick = { onPurchase(purchaseOptions[6].productId) },\r\n                modifier = Modifier.fillMaxWidth(0.5f)\r\n            )\r\n            PurchaseOptionCard(\r\n                option = purchaseOptions[7],\r\n                isDarkTheme = isDarkTheme,\r\n                onClick = { onPurchase(purchaseOptions[7].productId) },\r\n                modifier = Modifier.weight(1f)\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\n@Composable\r\nprivate fun PurchaseOptionCard(\r\n    option: PurchaseOption,\r\n    isDarkTheme: Boolean,\r\n    onClick: () -> Unit,\r\n    modifier: Modifier = Modifier\r\n) {\r\n    var isPressed by remember { mutableStateOf(false) }\r\n    val scale by animateFloatAsState(\r\n        targetValue = if (isPressed) 0.95f else 1f,\r\n        animationSpec = spring(\r\n            dampingRatio = Spring.DampingRatioMediumBouncy,\r\n            stiffness = Spring.StiffnessLow\r\n        ),\r\n        label = \"card_scale\"\r\n    )\r\n\r\n    Card(\r\n        modifier = modifier\r\n            .clickable {\r\n                isPressed = true\r\n                onClick()\r\n            }\r\n            .then(\r\n                if (isPressed) {\r\n                    Modifier.border(\r\n                        2.dp,\r\n                        AppColors.PrimaryOrange,\r\n                        RoundedCornerShape(16.dp)\r\n                    )\r\n                } else Modifier\r\n            ),\r\n        colors = CardDefaults.cardColors(\r\n            containerColor = Color.Transparent\r\n        ),\r\n        elevation = CardDefaults.cardElevation(\r\n            defaultElevation = if (isPressed) 8.dp else 4.dp\r\n        ),\r\n        shape = RoundedCornerShape(16.dp)\r\n    ) {\r\n        Column(\r\n            modifier = Modifier\r\n                .fillMaxWidth()\r\n                .padding(12.dp),\r\n            horizontalAlignment = Alignment.CenterHorizontally,\r\n            verticalArrangement = Arrangement.spacedBy(8.dp)\r\n        ) {\r\n            Box(\r\n                modifier = Modifier\r\n                    .size(40.dp)\r\n                    .background(\r\n                        AppColors.PrimaryOrange.copy(alpha = 0.1f),\r\n                        RoundedCornerShape(12.dp)\r\n                    ),\r\n                contentAlignment = Alignment.Center\r\n            ) {\r\n                Icon(\r\n                    imageVector = option.icon,\r\n                    contentDescription = option.title,\r\n                    modifier = Modifier.size(20.dp),\r\n                    tint = AppColors.PrimaryOrange\r\n                )\r\n            }\r\n\r\n            Text(\r\n                text = option.title,\r\n                fontSize = 12.sp,\r\n                fontWeight = FontWeight.Medium,\r\n                color = ThemeColors.getTextColor(isDarkTheme),\r\n                textAlign = TextAlign.Center\r\n            )\r\n\r\n            Text(\r\n                text = option.price,\r\n                fontSize = 16.sp,\r\n                fontWeight = FontWeight.Bold,\r\n                color = AppColors.PrimaryOrange\r\n            )\r\n        }\r\n    }\r\n\r\n    LaunchedEffect(isPressed) {\r\n        if (isPressed) {\r\n            delay(150)\r\n            isPressed = false\r\n        }\r\n    }\r\n}\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/expensetrackerkotlin/ui/components/PurchaseBottomSheet.kt b/app/src/main/java/com/example/expensetrackerkotlin/ui/components/PurchaseBottomSheet.kt
--- a/app/src/main/java/com/example/expensetrackerkotlin/ui/components/PurchaseBottomSheet.kt	(revision 704fb63dbd103d83a77a5d2f59944f4c74685798)
+++ b/app/src/main/java/com/example/expensetrackerkotlin/ui/components/PurchaseBottomSheet.kt	(date 1759315896943)
@@ -5,6 +5,7 @@
 import androidx.compose.foundation.border
 import androidx.compose.foundation.clickable
 import androidx.compose.foundation.layout.*
+import androidx.compose.foundation.lazy.LazyColumn
 import androidx.compose.foundation.shape.RoundedCornerShape
 import androidx.compose.material.icons.Icons
 import androidx.compose.material.icons.filled.*
@@ -16,6 +17,7 @@
 import androidx.compose.ui.graphics.Color
 import androidx.compose.ui.graphics.vector.ImageVector
 import androidx.compose.ui.res.painterResource
+import androidx.compose.ui.res.stringResource
 import androidx.compose.ui.res.vectorResource
 import androidx.compose.ui.text.font.FontWeight
 import androidx.compose.ui.text.style.TextAlign
@@ -55,31 +57,36 @@
         containerColor = ThemeColors.getBackgroundColor(isDarkTheme),
         dragHandle = { BottomSheetDefaults.DragHandle() }
     ) {
-        Column(
+        Box(
             modifier = Modifier
                 .fillMaxWidth()
-                .padding(24.dp),
-            horizontalAlignment = Alignment.CenterHorizontally
-        ) {
+                .heightIn(max = 600.dp)
+        ) {
+            LazyColumn(
+                modifier = Modifier
+                    .fillMaxWidth()
+                    .padding(24.dp),
+                horizontalAlignment = Alignment.CenterHorizontally,
+                verticalArrangement = Arrangement.spacedBy(16.dp)
+            ) {
+                item {
 
 
-            // Typewriter Animation Text
-            TypewriterText(
-                text = "Senin saçma reklamlar ile boğmak istemiyorum ve tüm özelliklere premium versiyon olmadan ulaşabilmeni istiyorum." +
-                " Ama geliştirme yapabilmem için gelire ihtiyacım var." +
-                " Uygulamamı beğendiysen ve destek olmak istersen bir çayını içerim(Fiyatlara enflasyon etki etmiyor burada) :).",
-                isDarkTheme = isDarkTheme
-            )
+                    // Typewriter Animation Text
+                    TypewriterText(
+                        stringResource(R.string.no_add_text),
+                        isDarkTheme = isDarkTheme
+                    )
+                }
 
-            Spacer(modifier = Modifier.height(32.dp))
-
-            // Purchase Options
-            PurchaseOptions(
-                isDarkTheme = isDarkTheme,
-                onPurchase = onPurchase
-            )
-
-            Spacer(modifier = Modifier.height(24.dp))
+                item {
+                    // Purchase Options
+                    PurchaseOptions(
+                        isDarkTheme = isDarkTheme,
+                        onPurchase = onPurchase
+                    )
+                }
+            }
         }
     }
 }
@@ -123,49 +130,49 @@
     val burrito: ImageVector = ImageVector.vectorResource(id = R.drawable.burrito)
     val purchaseOptions = listOf(
         PurchaseOption(
-            title = "Su ısmarla",
+            title =  stringResource(R.string.buy_water),
             price = "5 TL",
             icon = Icons.Default.LocalDrink,
             productId = "su_donation"
         ),
         PurchaseOption(
-            title = "Çay ısmarla",
+            title =  stringResource(R.string.buy_tea),
             price = "10 TL",
             icon = Icons.Default.LocalCafe,
             productId = "tea_donation"
         ),
         PurchaseOption(
-            title = "Simit ısmarla",
+            title =  stringResource(R.string.buy_bagel),
             price = "25 TL",
             icon = bagel,
             productId = "bagel_donation"
         ),
         PurchaseOption(
-            title = "Kahve ısmarla",
+            title =  stringResource(R.string.buy_coffee),
             price = "50 TL",
             icon = Icons.Default.LocalCafe,
             productId = "coffee_donation"
         ),
         PurchaseOption(
-            title = "Hatay Dürüm ısmarla",
+            title =  stringResource(R.string.buy_wrap),
             price = "100 TL",
             icon = burrito,
             productId = "wrap_donation"
         ),
         PurchaseOption(
-            title = "Burger ısmarla",
+            title =  stringResource(R.string.buy_burger),
             price = "250 TL",
             icon = Icons.Default.LunchDining,
             productId = "burger_donation"
         ),
         PurchaseOption(
-            title = "İskender ısmarla",
+            title =  stringResource(R.string.buy_doner),
             price = "400 TL",
             icon = doner,
             productId = "doner_donation"
         ),
         PurchaseOption(
-            title = "Şımart beni",
+            title =  stringResource(R.string.max_donation),
             price = "500 TL",
             icon = Icons.Default.Star,
             productId = "max_donation"
Index: app/build.gradle.kts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>plugins {\r\n    alias(libs.plugins.android.application)\r\n    alias(libs.plugins.kotlin.android)\r\n    alias(libs.plugins.kotlin.compose)\r\n    id(\"kotlin-kapt\")\r\n}\r\n\r\nandroid {\r\n    namespace = \"com.example.expensetrackerkotlin\"\r\n    compileSdk = 36\r\n\r\n    defaultConfig {\r\n        applicationId = \"com.akinalpfdn.expensetracker\"\r\n        minSdk = 26\r\n        targetSdk = 36\r\n        versionCode = 1\r\n        versionName = \"1.0\"\r\n\r\n        testInstrumentationRunner = \"androidx.test.runner.AndroidJUnitRunner\"\r\n    }\r\n    signingConfigs {\r\n        getByName(\"debug\") {\r\n            storeFile = file(\"../keystore/debug.keystore\")\r\n            storePassword = \"android\"\r\n            keyAlias = \"androiddebugkey\"\r\n            keyPassword = \"android\"\r\n        }\r\n    }\r\n    buildTypes {\r\n        debug {\r\n            signingConfig = signingConfigs.getByName(\"debug\")\r\n        }\r\n        release {\r\n            isMinifyEnabled = false\r\n            proguardFiles(\r\n                getDefaultProguardFile(\"proguard-android-optimize.txt\"),\r\n                \"proguard-rules.pro\"\r\n            )\r\n        }\r\n    }\r\n    compileOptions {\r\n        sourceCompatibility = JavaVersion.VERSION_11\r\n        targetCompatibility = JavaVersion.VERSION_11\r\n    }\r\n    kotlinOptions {\r\n        jvmTarget = \"11\"\r\n    }\r\n    buildFeatures {\r\n        compose = true\r\n    }\r\n}\r\n\r\ndependencies {\r\n\r\n    implementation(libs.androidx.core.ktx)\r\n    implementation(libs.androidx.lifecycle.runtime.ktx)\r\n    implementation(libs.androidx.activity.compose)\r\n    implementation(platform(libs.androidx.compose.bom))\r\n    implementation(libs.androidx.ui)\r\n    implementation(libs.androidx.ui.graphics)\r\n    implementation(libs.androidx.ui.tooling.preview)\r\n    implementation(libs.androidx.material3)\r\n    \r\n    // Navigation\r\n    implementation(\"androidx.navigation:navigation-compose:2.7.6\")\r\n    \r\n    // ViewModel\r\n    implementation(\"androidx.lifecycle:lifecycle-viewmodel-compose:2.7.0\")\r\n    \r\n    // Date picker\r\n    implementation(\"io.github.vanpra.compose-material-dialogs:datetime:0.9.0\")\r\n    \r\n    // Preferences DataStore\r\n    implementation(\"androidx.datastore:datastore-preferences:1.0.0\")\r\n    \r\n    // Room Database\r\n    implementation(\"androidx.room:room-runtime:2.6.1\")\r\n    implementation(\"androidx.room:room-ktx:2.6.1\")\r\n    kapt(\"androidx.room:room-compiler:2.6.1\")\r\n    \r\n    // For charts and progress rings\r\n    implementation(\"androidx.compose.material:material-icons-extended:1.5.4\")\r\n\r\n    // Google Play Billing\r\n    implementation(\"com.android.billingclient:billing-ktx:6.1.0\")\r\n\r\n    testImplementation(libs.junit)\r\n    androidTestImplementation(libs.androidx.junit)\r\n    androidTestImplementation(libs.androidx.espresso.core)\r\n    androidTestImplementation(platform(libs.androidx.compose.bom))\r\n    androidTestImplementation(libs.androidx.ui.test.junit4)\r\n    debugImplementation(libs.androidx.ui.tooling)\r\n    debugImplementation(libs.androidx.ui.test.manifest)\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/build.gradle.kts b/app/build.gradle.kts
--- a/app/build.gradle.kts	(revision 704fb63dbd103d83a77a5d2f59944f4c74685798)
+++ b/app/build.gradle.kts	(date 1759269737219)
@@ -76,6 +76,7 @@
     // Room Database
     implementation("androidx.room:room-runtime:2.6.1")
     implementation("androidx.room:room-ktx:2.6.1")
+    implementation(libs.billing.ktx)
     kapt("androidx.room:room-compiler:2.6.1")
     
     // For charts and progress rings
Index: gradle/libs.versions.toml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>[versions]\r\nagp = \"8.12.1\"\r\nkotlin = \"2.0.21\"\r\ncoreKtx = \"1.17.0\"\r\njunit = \"4.13.2\"\r\njunitVersion = \"1.3.0\"\r\nespressoCore = \"3.7.0\"\r\nlifecycleRuntimeKtx = \"2.9.2\"\r\nactivityCompose = \"1.8.0\"\r\ncomposeBom = \"2024.09.00\"\r\n\r\n[libraries]\r\nandroidx-core-ktx = { group = \"androidx.core\", name = \"core-ktx\", version.ref = \"coreKtx\" }\r\njunit = { group = \"junit\", name = \"junit\", version.ref = \"junit\" }\r\nandroidx-junit = { group = \"androidx.test.ext\", name = \"junit\", version.ref = \"junitVersion\" }\r\nandroidx-espresso-core = { group = \"androidx.test.espresso\", name = \"espresso-core\", version.ref = \"espressoCore\" }\r\nandroidx-lifecycle-runtime-ktx = { group = \"androidx.lifecycle\", name = \"lifecycle-runtime-ktx\", version.ref = \"lifecycleRuntimeKtx\" }\r\nandroidx-activity-compose = { group = \"androidx.activity\", name = \"activity-compose\", version.ref = \"activityCompose\" }\r\nandroidx-compose-bom = { group = \"androidx.compose\", name = \"compose-bom\", version.ref = \"composeBom\" }\r\nandroidx-ui = { group = \"androidx.compose.ui\", name = \"ui\" }\r\nandroidx-ui-graphics = { group = \"androidx.compose.ui\", name = \"ui-graphics\" }\r\nandroidx-ui-tooling = { group = \"androidx.compose.ui\", name = \"ui-tooling\" }\r\nandroidx-ui-tooling-preview = { group = \"androidx.compose.ui\", name = \"ui-tooling-preview\" }\r\nandroidx-ui-test-manifest = { group = \"androidx.compose.ui\", name = \"ui-test-manifest\" }\r\nandroidx-ui-test-junit4 = { group = \"androidx.compose.ui\", name = \"ui-test-junit4\" }\r\nandroidx-material3 = { group = \"androidx.compose.material3\", name = \"material3\" }\r\n\r\n[plugins]\r\nandroid-application = { id = \"com.android.application\", version.ref = \"agp\" }\r\nkotlin-android = { id = \"org.jetbrains.kotlin.android\", version.ref = \"kotlin\" }\r\nkotlin-compose = { id = \"org.jetbrains.kotlin.plugin.compose\", version.ref = \"kotlin\" }\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/gradle/libs.versions.toml b/gradle/libs.versions.toml
--- a/gradle/libs.versions.toml	(revision 704fb63dbd103d83a77a5d2f59944f4c74685798)
+++ b/gradle/libs.versions.toml	(date 1759269737192)
@@ -8,6 +8,7 @@
 lifecycleRuntimeKtx = "2.9.2"
 activityCompose = "1.8.0"
 composeBom = "2024.09.00"
+billingKtx = "8.0.0"
 
 [libraries]
 androidx-core-ktx = { group = "androidx.core", name = "core-ktx", version.ref = "coreKtx" }
@@ -24,6 +25,7 @@
 androidx-ui-test-manifest = { group = "androidx.compose.ui", name = "ui-test-manifest" }
 androidx-ui-test-junit4 = { group = "androidx.compose.ui", name = "ui-test-junit4" }
 androidx-material3 = { group = "androidx.compose.material3", name = "material3" }
+billing-ktx = { group = "com.android.billingclient", name = "billing-ktx", version.ref = "billingKtx" }
 
 [plugins]
 android-application = { id = "com.android.application", version.ref = "agp" }
Index: app/src/main/java/com/example/expensetrackerkotlin/billing/BillingManager.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.expensetrackerkotlin.billing\r\n\r\nimport android.app.Activity\r\nimport android.content.Context\r\nimport android.util.Log\r\nimport com.android.billingclient.api.*\r\nimport kotlinx.coroutines.flow.MutableStateFlow\r\nimport kotlinx.coroutines.flow.StateFlow\r\nimport kotlinx.coroutines.flow.asStateFlow\r\n\r\nclass BillingManager(private val context: Context) : PurchasesUpdatedListener {\r\n\r\n    private var billingClient: BillingClient? = null\r\n\r\n    private val _purchaseState = MutableStateFlow<PurchaseState>(PurchaseState.Idle)\r\n    val purchaseState: StateFlow<PurchaseState> = _purchaseState.asStateFlow()\r\n\r\n    sealed class PurchaseState {\r\n        object Idle : PurchaseState()\r\n        object Loading : PurchaseState()\r\n        data class Success(val productId: String) : PurchaseState()\r\n        data class Error(val message: String) : PurchaseState()\r\n        object Cancelled : PurchaseState()\r\n    }\r\n\r\n    fun initialize(onBillingSetupFinished: (Boolean) -> Unit = {}) {\r\n        billingClient = BillingClient.newBuilder(context)\r\n            .setListener(this)\r\n            .enablePendingPurchases()\r\n            .build()\r\n\r\n        billingClient?.startConnection(object : BillingClientStateListener {\r\n            override fun onBillingSetupFinished(billingResult: BillingResult) {\r\n                if (billingResult.responseCode == BillingClient.BillingResponseCode.OK) {\r\n                    Log.d(\"BillingManager\", \"Billing setup successful\")\r\n                    onBillingSetupFinished(true)\r\n                } else {\r\n                    Log.e(\"BillingManager\", \"Billing setup failed: ${billingResult.debugMessage}\")\r\n                    onBillingSetupFinished(false)\r\n                }\r\n            }\r\n\r\n            override fun onBillingServiceDisconnected() {\r\n                Log.d(\"BillingManager\", \"Billing service disconnected\")\r\n            }\r\n        })\r\n    }\r\n\r\n    fun launchPurchaseFlow(activity: Activity, productId: String) {\r\n        val client = billingClient\r\n        if (client == null || !client.isReady) {\r\n            _purchaseState.value = PurchaseState.Error(\"Billing client not ready\")\r\n            return\r\n        }\r\n\r\n        _purchaseState.value = PurchaseState.Loading\r\n\r\n        val productDetailsParams = QueryProductDetailsParams.newBuilder()\r\n            .setProductList(\r\n                listOf(\r\n                    QueryProductDetailsParams.Product.newBuilder()\r\n                        .setProductId(productId)\r\n                        .setProductType(BillingClient.ProductType.INAPP)\r\n                        .build()\r\n                )\r\n            )\r\n            .build()\r\n\r\n        client.queryProductDetailsAsync(productDetailsParams) { billingResult, productDetailsList ->\r\n            if (billingResult.responseCode == BillingClient.BillingResponseCode.OK && productDetailsList.isNotEmpty()) {\r\n                val productDetails = productDetailsList[0]\r\n\r\n                val billingFlowParams = BillingFlowParams.newBuilder()\r\n                    .setProductDetailsParamsList(\r\n                        listOf(\r\n                            BillingFlowParams.ProductDetailsParams.newBuilder()\r\n                                .setProductDetails(productDetails)\r\n                                .build()\r\n                        )\r\n                    )\r\n                    .build()\r\n\r\n                val launchResult = client.launchBillingFlow(activity, billingFlowParams)\r\n                if (launchResult.responseCode != BillingClient.BillingResponseCode.OK) {\r\n                    _purchaseState.value = PurchaseState.Error(\"Failed to launch billing flow: ${launchResult.debugMessage}\")\r\n                }\r\n            } else {\r\n                _purchaseState.value = PurchaseState.Error(\"Product not found or billing error: ${billingResult.debugMessage}\")\r\n            }\r\n        }\r\n    }\r\n\r\n    override fun onPurchasesUpdated(billingResult: BillingResult, purchases: MutableList<Purchase>?) {\r\n        when (billingResult.responseCode) {\r\n            BillingClient.BillingResponseCode.OK -> {\r\n                purchases?.forEach { purchase ->\r\n                    handlePurchase(purchase)\r\n                }\r\n            }\r\n            BillingClient.BillingResponseCode.USER_CANCELED -> {\r\n                _purchaseState.value = PurchaseState.Cancelled\r\n            }\r\n            else -> {\r\n                _purchaseState.value = PurchaseState.Error(\"Purchase failed: ${billingResult.debugMessage}\")\r\n            }\r\n        }\r\n    }\r\n\r\n    private fun handlePurchase(purchase: Purchase) {\r\n        // Verify the purchase signature and handle the purchase\r\n        if (purchase.purchaseState == Purchase.PurchaseState.PURCHASED) {\r\n            // Acknowledge the purchase if it hasn't been acknowledged yet\r\n            if (!purchase.isAcknowledged) {\r\n                val acknowledgePurchaseParams = AcknowledgePurchaseParams.newBuilder()\r\n                    .setPurchaseToken(purchase.purchaseToken)\r\n                    .build()\r\n\r\n                billingClient?.acknowledgePurchase(acknowledgePurchaseParams) { billingResult ->\r\n                    if (billingResult.responseCode == BillingClient.BillingResponseCode.OK) {\r\n                        Log.d(\"BillingManager\", \"Purchase acknowledged successfully\")\r\n                    }\r\n                }\r\n            }\r\n\r\n            // Extract product ID from the purchase\r\n            val productId = purchase.products.firstOrNull() ?: \"unknown\"\r\n            _purchaseState.value = PurchaseState.Success(productId)\r\n\r\n            Log.d(\"BillingManager\", \"Purchase successful for product: $productId\")\r\n        }\r\n    }\r\n\r\n    fun resetPurchaseState() {\r\n        _purchaseState.value = PurchaseState.Idle\r\n    }\r\n\r\n    fun destroy() {\r\n        billingClient?.endConnection()\r\n        billingClient = null\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/expensetrackerkotlin/billing/BillingManager.kt b/app/src/main/java/com/example/expensetrackerkotlin/billing/BillingManager.kt
--- a/app/src/main/java/com/example/expensetrackerkotlin/billing/BillingManager.kt	(revision 704fb63dbd103d83a77a5d2f59944f4c74685798)
+++ b/app/src/main/java/com/example/expensetrackerkotlin/billing/BillingManager.kt	(date 1759270593866)
@@ -4,6 +4,7 @@
 import android.content.Context
 import android.util.Log
 import com.android.billingclient.api.*
+import com.android.billingclient.api.PurchasesUpdatedListener
 import kotlinx.coroutines.flow.MutableStateFlow
 import kotlinx.coroutines.flow.StateFlow
 import kotlinx.coroutines.flow.asStateFlow
@@ -26,7 +27,7 @@
     fun initialize(onBillingSetupFinished: (Boolean) -> Unit = {}) {
         billingClient = BillingClient.newBuilder(context)
             .setListener(this)
-            .enablePendingPurchases()
+            .enablePendingPurchases(PendingPurchasesParams.newBuilder().enableOneTimeProducts().build())
             .build()
 
         billingClient?.startConnection(object : BillingClientStateListener {
@@ -67,8 +68,8 @@
             .build()
 
         client.queryProductDetailsAsync(productDetailsParams) { billingResult, productDetailsList ->
-            if (billingResult.responseCode == BillingClient.BillingResponseCode.OK && productDetailsList.isNotEmpty()) {
-                val productDetails = productDetailsList[0]
+            if (billingResult.responseCode == BillingClient.BillingResponseCode.OK && productDetailsList.productDetailsList.isNotEmpty()) {
+                val productDetails = productDetailsList.productDetailsList[0]
 
                 val billingFlowParams = BillingFlowParams.newBuilder()
                     .setProductDetailsParamsList(
Index: app/src/main/res/values-it/strings.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<resources>\r\n    <string name=\"app_name\">Tracciatore Spese</string>\r\n    <string name=\"general_settings\">Impostazioni Generali</string>\r\n    <string name=\"categories\">Categorie</string>\r\n    <string name=\"default_currency\">Valuta Predefinita</string>\r\n    <string name=\"currency_description\">Valuta predefinita da utilizzare per le nuove spese</string>\r\n    <string name=\"daily_spending_limit\">Limite di Spesa Giornaliero</string>\r\n    <string name=\"enter_daily_limit\">Inserisci limite giornaliero</string>\r\n    <string name=\"daily_limit_description\">Il tuo limite di spesa giornaliero. Nessun limite applicato se lasciato vuoto</string>\r\n    <string name=\"monthly_spending_limit\">Limite di Spesa Mensile</string>\r\n    <string name=\"enter_monthly_limit\">Inserisci limite mensile</string>\r\n    <string name=\"monthly_limit_description\">Il tuo limite totale di spesa mensile. L\\'anello di progresso viene mostrato basato su questo valore</string>\r\n    <string name=\"theme\">Tema</string>\r\n    <string name=\"dark_theme\">Tema Scuro</string>\r\n    <string name=\"light_theme\">Tema Chiaro</string>\r\n    <string name=\"theme_description\">Cambia l\\'aspetto dell\\'applicazione</string>\r\n    <string name=\"cancel\">Annulla</string>\r\n    <string name=\"save\">Salva</string>\r\n    <!-- RecurringExpensesScreen -->\r\n    <string name=\"recurring_expenses\">Spese Ricorrenti</string>\r\n    <string name=\"sort\">Ordina</string>\r\n    <string name=\"search\">Cerca</string>\r\n    <string name=\"back\">Indietro</string>\r\n    <string name=\"amount_high_to_low\">Importo: Alto a Basso</string>\r\n    <string name=\"amount_low_to_high\">Importo: Basso ad Alto</string>\r\n    <string name=\"description_a_to_z\">Descrizione: A-Z</string>\r\n    <string name=\"description_z_to_a\">Descrizione: Z-A</string>\r\n    <string name=\"category_a_to_z\">Categoria: A-Z</string>\r\n    <string name=\"category_z_to_a\">Categoria: Z-A</string>\r\n    <string name=\"end_date_recurring\">Fine: %s</string>\r\n    <string name=\"search_placeholder\">Cerca per descrizione, importo o categoria...</string>\r\n    <string name=\"no_search_results\">Nessun risultato di ricerca trovato</string>\r\n    <string name=\"search_no_results_description\">Nessun risultato trovato per \\\"%1$s\\\". Prova un termine di ricerca diverso.</string>\r\n    <string name=\"no_recurring_expenses\">Nessuna spesa ricorrente ancora</string>\r\n    <string name=\"recurring_expenses_hint\">Premi il pulsante + per aggiungere spese ricorrenti</string>\r\n    <string name=\"results_found\">%d risultati trovati</string>\r\n    <string name=\"daily\">Giornaliero</string>\r\n    <string name=\"weekdays\">Giorni feriali</string>\r\n    <string name=\"weekly\">Settimanale</string>\r\n    <string name=\"monthly\">Mensile</string>\r\n    <string name=\"exchange_rate\">Tasso di Cambio: %s</string>\r\n    <string name=\"delete\">Elimina</string>\r\n    <string name=\"amount\">Importo</string>\r\n    <string name=\"description\">Descrizione</string>\r\n    <string name=\"exchange_rate_field\">Tasso di Cambio</string>\r\n    <string name=\"select_date\">Seleziona Data</string>\r\n    <string name=\"delete_recurring_expense\">Elimina Spesa Ricorrente</string>\r\n    <string name=\"delete_recurring_confirmation\">Sei sicuro di voler eliminare questa spesa ricorrente da oggi in poi? Questa azione non può essere annullata.</string>\r\n    <string name=\"ok\">OK</string>\r\n    <!-- PlanningScreen -->\r\n    <string name=\"financial_planning\">Pianificazione Finanziaria</string>\r\n    <string name=\"planning_description\">Crea e traccia i tuoi piani futuri</string>\r\n    <string name=\"no_plans_yet\">Nessun piano ancora</string>\r\n    <string name=\"create_first_plan\">Premi il pulsante + per creare il tuo primo piano finanziario</string>\r\n    <string name=\"add_plan\">Aggiungi Piano</string>\r\n    <string name=\"delete_plan\">Elimina Piano</string>\r\n    <string name=\"delete_plan_confirmation\">Sei sicuro di voler eliminare il piano \\\"%1$s\\\"? Questa azione non può essere annullata.</string>\r\n\r\n    <!-- ExpensesScreen -->\r\n    <string name=\"results_count\">%d risultati</string>\r\n    <string name=\"search_expenses_placeholder\">Cerca per descrizione, importo o categoria...</string>\r\n    <string name=\"monthly_limit_exceeded\">⚠\uFE0F Hai superato il tuo limite di spesa mensile!</string>\r\n    <string name=\"time_newest_first\">Data: Più Recente Prima</string>\r\n    <string name=\"time_oldest_first\">Data: Più Vecchio Prima</string>\r\n\r\n    <!-- AnalysisScreen -->\r\n    <string name=\"current_period_total\">Totale Spese Periodo Corrente</string>\r\n    <string name=\"vs_previous_month\">Confrontato al mese precedente</string>\r\n    <string name=\"vs_6_month_average\">Confrontato alla media di 6 mesi</string>\r\n    <string name=\"no_expenses_this_period\">Nessuna spesa in questo periodo ancora</string>\r\n    <string name=\"analysis_will_appear\">L\\'analisi apparirà qui quando aggiungerai delle spese</string>\r\n    <string name=\"previous_month\">Mese precedente</string>\r\n    <string name=\"next_month\">Mese successivo</string>\r\n    <string name=\"select_date_range\">Seleziona intervallo di date</string>\r\n    <string name=\"fixed_expenses\">Spese Fisse</string>\r\n    <string name=\"recurring_expenses_description\">Spese che continueranno per 3+ mesi</string>\r\n    <string name=\"recurring_expenses_cd\">Spese ricorrenti</string>\r\n    <string name=\"pick_date_range\">Scegli intervallo di date</string>\r\n\r\n    <!-- AddExpenseScreen -->\r\n    <string name=\"enter_expense_details\">Inserisci dettagli della spesa</string>\r\n    <string name=\"expense_amount_placeholder\">0,00</string>\r\n    <string name=\"search_placeholder_category\">cerca...</string>\r\n    <string name=\"description_optional\">Descrizione (Opzionale)</string>\r\n    <string name=\"add_description_placeholder\">Aggiungi descrizione...</string>\r\n    <string name=\"recurrence_type\">Tipo di Ricorrenza</string>\r\n    <string name=\"end_date\">Data di Fine</string>\r\n    <string name=\"exchange_rate_label\">Tasso di Cambio (1 %1$s = ? %2$s)</string>\r\n    <string name=\"exchange_rate_example\">es: 0,035 (1 %1$s = 0,035 %2$s)</string>\r\n    <string name=\"exchange_rate_note\">Questo tasso sarà utilizzato per i calcoli di progresso</string>\r\n    <string name=\"add_expense\">Aggiungi Spesa</string>\r\n    <string name=\"update_expense\">Aggiorna Spesa</string>\r\n    <string name=\"none\">Nessuno</string>\r\n    <string name=\"one_time\">Una volta</string>\r\n    <string name=\"every_day\">Ogni giorno</string>\r\n    <string name=\"weekdays_only\">Solo giorni feriali</string>\r\n    <string name=\"once_per_week\">Una volta a settimana</string>\r\n    <string name=\"once_per_month\">Una volta al mese</string>\r\n    <string name=\"edit_expense\">Modifica Spesa</string>\r\n    <string name=\"new_expense\">Nuova Spesa</string>\r\n    <string name=\"selectCategory\">Selezione categoria</string>\r\n    <string name=\"single_time\">Una sola volta</string>\r\n    <string name=\"okay\">Ok</string>\r\n\r\n    <!-- SubCategoryDetailBottomSheet -->\r\n    <string name=\"parent_category\">Categoria Genitore</string>\r\n    <string name=\"total_amount\">Importo Totale</string>\r\n    <string name=\"expense_count\">Numero di Spese</string>\r\n    <string name=\"average\">Media</string>\r\n    <string name=\"expenses\">Spese</string>\r\n    <string name=\"recurring_label\">Ricorrente</string>\r\n\r\n    <!-- ProgressRingComponent -->\r\n    <string name=\"monthly_label\">Mensile</string>\r\n    <string name=\"daily_label\">Giornaliero</string>\r\n\r\n    <!-- PlanDetailBottomSheet -->\r\n    <string name=\"update_expense_data\">Aggiorna Dati Spese</string>\r\n    <string name=\"update_expense_data_description\">Ricalcola i mesi attuali e futuri con dati aggiornati</string>\r\n    <string name=\"total_net_value\">Valore Netto Totale</string>\r\n    <string name=\"month\">Mese</string>\r\n    <string name=\"income\">Entrate</string>\r\n    <string name=\"expense\">Spesa</string>\r\n    <string name=\"net\">Netto</string>\r\n    <string name=\"total\">Totale</string>\r\n\r\n    <!-- PlanCard -->\r\n    <string name=\"avg_monthly_income\">Entrate Mensili Med.</string>\r\n    <string name=\"avg_monthly_expense\">Spese Mensili Med.</string>\r\n    <string name=\"current_net\">Netto Attuale</string>\r\n    <string name=\"target_net\">Netto Obiettivo</string>\r\n\r\n    <!-- MonthlyLineChart -->\r\n    <string name=\"all\">Tutti</string>\r\n    <string name=\"one_time_expense\">Spesa Una Tantum</string>\r\n    <string name=\"period_expense_trend\">Tendenza Spese del Periodo</string>\r\n    <string name=\"expand\">Espandi</string>\r\n    <string name=\"collapse\">Comprimi</string>\r\n    <string name=\"no_data_found\">Nessun dato trovato</string>\r\n    <string name=\"highest\">Più alto</string>\r\n\r\n    <!-- MonthlyExpensesView -->\r\n    <string name=\"no_expenses_this_month\">Nessuna spesa questo mese</string>\r\n    <string name=\"add_expense_for_month\">Premi il pulsante + sulla schermata principale per aggiungere spese per questo mese</string>\r\n\r\n    <!-- MonthlyCalendarView - Day headers -->\r\n    <string name=\"monday_short\">L</string>\r\n    <string name=\"tuesday_short\">M</string>\r\n    <string name=\"wednesday_short\">M</string>\r\n    <string name=\"thursday_short\">G</string>\r\n    <string name=\"friday_short\">V</string>\r\n    <string name=\"saturday_short\">S</string>\r\n    <string name=\"sunday_short\">D</string>\r\n\r\n    <!-- MonthlyAnalysisPieChart -->\r\n    <string name=\"category_distribution\">Distribuzione per Categorie</string>\r\n    <string name=\"tap_chart_to_select_category\">Tocca il grafico per selezionare una categoria</string>\r\n\r\n    <!-- ExpenseRowView -->\r\n    <string name=\"unknown\">Sconosciuto</string>\r\n    <string name=\"delete_expense\">Elimina Spesa</string>\r\n    <string name=\"delete_expense_confirmation\">Sei sicuro di voler eliminare questa spesa? Questa azione non può essere annullata.</string>\r\n\r\n    <!-- DailyCategoryDetailBottomSheet -->\r\n    <string name=\"amount_high_to_low_arrow\">Importo (Alto → Basso)</string>\r\n    <string name=\"amount_low_to_high_arrow\">Importo (Basso → Alto)</string>\r\n    <string name=\"time_newest_first_arrow\">Tempo (Nuovo → Vecchio)</string>\r\n    <string name=\"time_oldest_first_arrow\">Tempo (Vecchio → Nuovo)</string>\r\n    <string name=\"description_a_to_z_arrow\">Descrizione (A → Z)</string>\r\n    <string name=\"description_z_to_a_arrow\">Descrizione (Z → A)</string>\r\n    <string name=\"total_spending\">Spesa Totale</string>\r\n    <string name=\"no_expenses_in_category\">Nessuna spesa trovata in questa categoria</string>\r\n    <string name=\"expense_singular\">Spesa</string>\r\n\r\n    <!-- CreatePlanDialog -->\r\n    <string name=\"create_new_plan\">Crea Nuovo Piano</string>\r\n    <string name=\"plan_name\">Nome del Piano</string>\r\n    <string name=\"plan_name_example\">es: Piano di Risparmio 2024</string>\r\n    <string name=\"plan_duration\">Durata del Piano</string>\r\n    <string name=\"apply_interest_to_savings\">Applica Interessi (ai Risparmi)</string>\r\n    <string name=\"simple_interest\">Interesse Semplice</string>\r\n    <string name=\"compound_interest\">Interesse Composto</string>\r\n    <string name=\"annual_interest_rate\">Tasso di interesse annuale %</string>\r\n    <string name=\"interest_applied_to_positive_savings\">L\\'interesse viene applicato ai risparmi positivi</string>\r\n    <string name=\"interest_type\">Tipo di Interesse</string>\r\n    <string name=\"monthly_income_currency\">Entrate Mensili (%s)</string>\r\n    <string name=\"use_app_expense_data\">Usa i dati delle spese dell\\'app</string>\r\n    <string name=\"monthly_expenses_currency\">Spese Mensili (%s)</string>\r\n    <string name=\"manual_monthly_expense_amount\">Importo manuale spese mensili</string>\r\n    <string name=\"enter_manual_expense_amount\">Inserisci importo manuale spese</string>\r\n    <string name=\"apply_inflation\">Applica Inflazione</string>\r\n    <string name=\"annual_percentage_rate\">Tasso annuale %</string>\r\n    <string name=\"create\">Crea</string>\r\n\r\n    <!-- CategorySummarySection -->\r\n    <string name=\"category_details\">Dettagli Categoria</string>\r\n    <string name=\"main_categories\">Categorie Principali</string>\r\n    <string name=\"sub_categories\">Sottocategorie</string>\r\n    <string name=\"expense_lowercase\">spesa</string>\r\n    <string name=\"see_details\">Vedi dettagli</string>\r\n\r\n    <!-- CategoryPopupLines -->\r\n    <string name=\"vs_previous_month_colon\">Confrontato al mese precedente:</string>\r\n    <string name=\"vs_average_colon\">Confrontato alla media:</string>\r\n\r\n    <!-- CategoryManagementScreen -->\r\n    <string name=\"add_new_main_category\">Aggiungi Nuova Categoria Principale</string>\r\n    <string name=\"add_main_category_content_desc\">Aggiungi Categoria Principale</string>\r\n    <string name=\"category_name_hint\">Inserisci nome categoria</string>\r\n    <string name=\"unique_category_name_note\">Scegli un nome unico per la categoria</string>\r\n    <string name=\"icon_selection\">Selezione Icona</string>\r\n    <string name=\"color_selection\">Selezione Colore</string>\r\n    <string name=\"add_button\">Aggiungi</string>\r\n    <string name=\"main_category\">Categoria Principale</string>\r\n    <string name=\"select_category\">Seleziona categoria</string>\r\n    <string name=\"subcategory_name\">Nome Sottocategoria</string>\r\n    <string name=\"subcategory_name_hint\">Inserisci nome sottocategoria</string>\r\n    <string name=\"unique_subcategory_name_note\">Scegli un nome unico per la sottocategoria</string>\r\n    <string name=\"edit_subcategory\">Modifica Sottocategoria</string>\r\n    <string name=\"edit_category\">Modifica Categoria</string>\r\n    <string name=\"edit\">Modifica</string>\r\n    <string name=\"enter_name_hint\">Inserisci nome</string>\r\n    <string name=\"delete_confirmation\">Conferma Eliminazione</string>\r\n    <string name=\"delete_item_confirmation\">Sei sicuro di voler eliminare \\\"%s\\\"? Questa azione non può essere annullata.</string>\r\n    <string name=\"this_item\">Questo elemento</string>\r\n    <string name=\"collapse_desc\">Comprimi</string>\r\n    <string name=\"expand_desc\">Espandi</string>\r\n    <string name=\"edit_category_desc\">Modifica Categoria</string>\r\n    <string name=\"delete_category_desc\">Elimina Categoria</string>\r\n    <string name=\"add_subcategory\">Aggiungi Sottocategoria</string>\r\n    <string name=\"add_subcategory_desc\">Aggiungi Sottocategoria</string>\r\n    <string name=\"edit_subcategory_desc\">Modifica Sottocategoria</string>\r\n    <string name=\"delete_subcategory_desc\">Elimina Sottocategoria</string>\r\n    <string name=\"selected\">Selezionato</string>\r\n\r\n    <!-- CategoryDistributionChart -->\r\n    <string name=\"no_data\">Nessun dato</string>\r\n    <string name=\"category\">Categoria</string>\r\n\r\n    <!-- CategoryDetailBottomSheet -->\r\n    <string name=\"sort_amount_desc\">Per Importo (Alto → Basso)</string>\r\n    <string name=\"sort_amount_asc\">Per Importo (Basso → Alto)</string>\r\n    <string name=\"sort_date_desc\">Per Data (Nuovo → Vecchio)</string>\r\n    <string name=\"sort_date_asc\">Per Data (Vecchio → Nuovo)</string>\r\n    <string name=\"sort_name_asc\">Per Descrizione (A → Z)</string>\r\n    <string name=\"sort_name_desc\">Per Descrizione (Z → A)</string>\r\n\r\n    <!-- SubCategory - Default subcategories -->\r\n    <!-- Food & Drink -->\r\n    <string name=\"subcategory_restaurant\">Ristorante</string>\r\n    <string name=\"subcategory_kitchen_shopping\">Spesa cucina</string>\r\n\r\n    <!-- Housing -->\r\n    <string name=\"subcategory_rent\">Affitto</string>\r\n    <string name=\"subcategory_dues\">Spese condominiali</string>\r\n    <string name=\"subcategory_mortgage\">Pagamento mutuo</string>\r\n    <string name=\"subcategory_electricity\">Bolletta elettrica</string>\r\n    <string name=\"subcategory_water\">Bolletta acqua</string>\r\n    <string name=\"subcategory_heating\">Riscaldamento</string>\r\n    <string name=\"subcategory_internet_phone\">Internet e telefono</string>\r\n    <string name=\"subcategory_other_bills\">Altre Bollette</string>\r\n    <string name=\"subcategory_general_shopping\">Spesa generale alimentari</string>\r\n\r\n    <!-- Transportation -->\r\n    <string name=\"subcategory_fuel\">Carburante</string>\r\n    <string name=\"subcategory_public_transport\">Trasporto pubblico</string>\r\n    <string name=\"subcategory_car_maintenance\">Manutenzione auto</string>\r\n    <string name=\"subcategory_car_rental\">Noleggio auto</string>\r\n    <string name=\"subcategory_taxi_uber\">Taxi/Uber</string>\r\n    <string name=\"subcategory_car_insurance\">Assicurazione auto</string>\r\n    <string name=\"subcategory_mtv\">Bollo auto</string>\r\n    <string name=\"subcategory_parking_fees\">Costi parcheggio</string>\r\n\r\n    <!-- Health -->\r\n    <string name=\"subcategory_doctor_appointment\">Visita medica</string>\r\n    <string name=\"subcategory_medicines\">Medicinali</string>\r\n    <string name=\"subcategory_gym_membership\">Abbonamento palestra</string>\r\n    <string name=\"subcategory_cosmetics\">Cosmetici</string>\r\n\r\n    <!-- Entertainment -->\r\n    <string name=\"subcategory_cinema_theater\">Cinema e teatro</string>\r\n    <string name=\"subcategory_concerts_events\">Concerti ed eventi</string>\r\n    <string name=\"subcategory_subscriptions\">Abbonamenti</string>\r\n    <string name=\"subcategory_books_magazines\">Libri e riviste</string>\r\n    <string name=\"subcategory_travel_vacation\">Viaggi e vacanze</string>\r\n    <string name=\"subcategory_games_apps\">Giochi e app</string>\r\n\r\n    <!-- Education -->\r\n    <string name=\"subcategory_course_fees\">Tasse corsi</string>\r\n    <string name=\"subcategory_education_materials\">Materiali educativi</string>\r\n    <string name=\"subcategory_seminars\">Seminari</string>\r\n    <string name=\"subcategory_online_courses\">Corsi online</string>\r\n\r\n    <!-- Shopping -->\r\n    <string name=\"subcategory_electronics\">Elettronica</string>\r\n    <string name=\"subcategory_clothing\">Abbigliamento</string>\r\n    <string name=\"subcategory_home_goods\">Articoli per la casa</string>\r\n    <string name=\"subcategory_gifts\">Regali</string>\r\n    <string name=\"subcategory_perfume\">Profumo</string>\r\n\r\n    <!-- Pets -->\r\n    <string name=\"subcategory_pet_food_toys\">Cibo e giocattoli</string>\r\n    <string name=\"subcategory_vet_services\">Servizi veterinari</string>\r\n    <string name=\"subcategory_pet_insurance\">Assicurazione animali</string>\r\n\r\n    <!-- Work -->\r\n    <string name=\"subcategory_work_meals\">Pasti di lavoro</string>\r\n    <string name=\"subcategory_office_supplies\">Forniture ufficio</string>\r\n    <string name=\"subcategory_business_travel\">Viaggi di lavoro</string>\r\n    <string name=\"subcategory_work_education\">Formazione e seminari</string>\r\n    <string name=\"subcategory_freelance_payments\">Pagamenti lavoro freelance</string>\r\n\r\n    <!-- Tax -->\r\n    <string name=\"subcategory_tax_payments\">Pagamenti tasse</string>\r\n\r\n    <!-- Others -->\r\n    <string name=\"subcategory_other_expenses\">Altre Spese</string>\r\n\r\n    <!-- ExpensesScreen - Empty state messages -->\r\n    <string name=\"no_search_results_found\">Nessun risultato di ricerca trovato</string>\r\n    <string name=\"no_expenses_yet\">Nessuna spesa ancora</string>\r\n    <string name=\"no_expenses_today\">Nessuna spesa oggi</string>\r\n    <string name=\"no_search_results_description\">Nessun risultato trovato per \\\"%1$s\\\". Prova un termine di ricerca diverso.</string>\r\n    <string name=\"first_expense_hint\">Premi il pulsante + per aggiungere la tua prima spesa</string>\r\n    <string name=\"add_expense_for_day_hint\">Premi il pulsante + per aggiungere spese per questa giornata</string>\r\n    <string name=\"calendar_tab\">Calendario</string>\r\n    <string name=\"expenses_tab\">Spese</string>\r\n\r\n    <!-- PlanningUtils - Plan status and validation -->\r\n    <string name=\"plan_status_not_started\">Non iniziato</string>\r\n    <string name=\"plan_status_completed\">Completato</string>\r\n    <string name=\"plan_status_active\">Attivo</string>\r\n    <string name=\"validation_plan_name_empty\">Il nome del piano non può essere vuoto</string>\r\n    <string name=\"validation_monthly_income_positive\">Le entrate mensili devono essere maggiori di 0</string>\r\n    <string name=\"validation_duration_positive\">La durata del piano deve essere maggiore di 0</string>\r\n    <string name=\"validation_duration_max_10_years\">La durata del piano non può essere più di 10 anni</string>\r\n    <string name=\"validation_inflation_rate_range\">Il tasso di inflazione deve essere tra -50%% e 100%%</string>\r\n    <string name=\"duration_3_months\">3 Mesi</string>\r\n    <string name=\"duration_6_months\">6 Mesi</string>\r\n    <string name=\"duration_1_year\">1 Anno</string>\r\n    <string name=\"duration_1_5_years\">1,5 Anni</string>\r\n    <string name=\"duration_2_years\">2 Anni</string>\r\n    <string name=\"duration_3_years\">3 Anni</string>\r\n    <string name=\"duration_5_years\">5 Anni</string>\r\n\r\n    <!-- PlanningViewModel - Error messages -->\r\n    <string name=\"error_loading_plan\">Errore nel caricamento del piano: %s</string>\r\n    <string name=\"error_creating_plan\">Errore nella creazione del piano: %s</string>\r\n    <string name=\"error_deleting_plan\">Errore nell\\'eliminazione del piano: %s</string>\r\n    <string name=\"error_updating_expense_data\">Errore nell\\'aggiornamento dei dati delle spese: %s</string>\r\n    <string name=\"error_updating_plan_calculations\">Errore nell\\'aggiornamento dei calcoli del piano: %s</string>\r\n    <string name=\"error_saving_changes\">Errore nel salvataggio delle modifiche: %s</string>\r\n\r\n    <!-- Category - Default categories -->\r\n    <string name=\"category_food\">Cibo e Bevande</string>\r\n    <string name=\"category_housing\">Casa</string>\r\n    <string name=\"category_transportation\">Trasporti</string>\r\n    <string name=\"category_health\">Salute e Cura Personale</string>\r\n    <string name=\"category_entertainment\">Intrattenimento e Hobby</string>\r\n    <string name=\"category_education\">Istruzione</string>\r\n    <string name=\"category_shopping\">Acquisti</string>\r\n    <string name=\"category_pets\">Animali Domestici</string>\r\n    <string name=\"category_work\">Lavoro e Spese Professionali</string>\r\n    <string name=\"category_tax\">Tasse e Spese Legali</string>\r\n    <string name=\"category_donations\">Donazioni e Aiuti</string>\r\n    <string name=\"category_others\">Altri Pagamenti</string>\r\n</resources>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/values-it/strings.xml b/app/src/main/res/values-it/strings.xml
--- a/app/src/main/res/values-it/strings.xml	(revision 704fb63dbd103d83a77a5d2f59944f4c74685798)
+++ b/app/src/main/res/values-it/strings.xml	(date 1759316126891)
@@ -365,4 +365,19 @@
     <string name="category_tax">Tasse e Spese Legali</string>
     <string name="category_donations">Donazioni e Aiuti</string>
     <string name="category_others">Altri Pagamenti</string>
+    <!-- Billing Page -->
+    <string name="no_add_text">I don\'t want to bombard you with silly ads,
+        and I want you to be able to access all features without needing the premium version.
+        But I need income to keep developing. If you like my app and want to support me,
+        feel free to tip a cup of tea (Prices aren\'t affected by inflation here) :).</string>
+    <string name="buy_water">tip a water</string>
+    <string name="buy_bagel">tip a bagel</string>
+    <string name="buy_tea">tip a tea</string>
+    <string name="buy_coffee">tip a coffee</string>
+    <string name="buy_wrap">tip a wrap</string>
+    <string name="buy_burger">tip a burger</string>
+    <string name="buy_doner">tip a doner</string>
+    <string name="max_donation">suprise me</string>
+    <string name="recurring_total">"Total: "</string>
+    <string name="recurring_remaining">"Remaining: "</string>
 </resources>
\ No newline at end of file
Index: app/src/main/res/values/strings.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<resources>\r\n    <string name=\"app_name\">Expense Tracker</string>\r\n    <string name=\"general_settings\">General Settings</string>\r\n    <string name=\"categories\">Categories</string>\r\n    <string name=\"default_currency\">Default Currency</string>\r\n    <string name=\"currency_description\">Default currency to be used for new expenses</string>\r\n    <string name=\"daily_spending_limit\">Daily Spending Limit</string>\r\n    <string name=\"enter_daily_limit\">Enter daily limit</string>\r\n    <string name=\"daily_limit_description\">Your daily spending limit. No limit applied if left blank</string>\r\n    <string name=\"monthly_spending_limit\">Monthly Spending Limit</string>\r\n    <string name=\"enter_monthly_limit\">Enter monthly limit</string>\r\n    <string name=\"monthly_limit_description\">Your monthly total spending limit. Progress ring is shown based on this value</string>\r\n    <string name=\"theme\">Theme</string>\r\n    <string name=\"dark_theme\">Dark Theme</string>\r\n    <string name=\"light_theme\">Light Theme</string>\r\n    <string name=\"theme_description\">Change the app\\'s appearance</string>\r\n    <string name=\"cancel\">Cancel</string>\r\n    <string name=\"save\">Save</string>\r\n    <!-- RecurringExpensesScreen -->\r\n    <string name=\"recurring_expenses\">Recurring Expenses</string>\r\n    <string name=\"sort\">Sort</string>\r\n    <string name=\"search\">Search</string>\r\n    <string name=\"back\">Back</string>\r\n    <string name=\"amount_high_to_low\">Amount: High to Low</string>\r\n    <string name=\"amount_low_to_high\">Amount: Low to High</string>\r\n    <string name=\"description_a_to_z\">Description: A-Z</string>\r\n    <string name=\"description_z_to_a\">Description: Z-A</string>\r\n    <string name=\"category_a_to_z\">Category: A-Z</string>\r\n    <string name=\"category_z_to_a\">Category: Z-A</string>\r\n    <string name=\"end_date_recurring\">End: %s</string>\r\n    <string name=\"search_placeholder\">Search by description, amount or category...</string>\r\n    <string name=\"no_search_results\">No search results found</string>\r\n    <string name=\"search_no_results_description\">No results found for \\\"%1$s\\\". Try a different search term.</string>\r\n    <string name=\"no_recurring_expenses\">No recurring expenses yet</string>\r\n    <string name=\"recurring_expenses_hint\">Press the + button to add recurring expenses</string>\r\n    <string name=\"results_found\">%d results found</string>\r\n    <string name=\"daily\">Daily</string>\r\n    <string name=\"weekdays\">Weekdays</string>\r\n    <string name=\"weekly\">Weekly</string>\r\n    <string name=\"monthly\">Monthly</string>\r\n    <string name=\"exchange_rate\">Exchange Rate: %s</string>\r\n    <string name=\"delete\">Delete</string>\r\n    <string name=\"amount\">Amount</string>\r\n    <string name=\"description\">Description</string>\r\n    <string name=\"exchange_rate_field\">Exchange Rate</string>\r\n    <string name=\"select_date\">Select Date</string>\r\n    <string name=\"delete_recurring_expense\">Delete Recurring Expense</string>\r\n    <string name=\"delete_recurring_confirmation\">Are you sure you want to delete this recurring expense from today onwards? This action cannot be undone.</string>\r\n    <string name=\"ok\">OK</string>\r\n    <!-- PlanningScreen -->\r\n    <string name=\"financial_planning\">Financial Planning</string>\r\n    <string name=\"planning_description\">Create and track your future plans</string>\r\n    <string name=\"no_plans_yet\">No plans yet</string>\r\n    <string name=\"create_first_plan\">Press the + button to create your first financial plan</string>\r\n    <string name=\"add_plan\">Add Plan</string>\r\n    <string name=\"delete_plan\">Delete Plan</string>\r\n    <string name=\"delete_plan_confirmation\">Are you sure you want to delete the \\\"%1$s\\\" plan? This action cannot be undone.</string>\r\n\r\n    <!-- ExpensesScreen -->\r\n    <string name=\"results_count\">%d results</string>\r\n    <string name=\"search_expenses_placeholder\">Search by description, amount or category...</string>\r\n    <string name=\"monthly_limit_exceeded\">⚠\uFE0F You have exceeded your monthly spending limit!</string>\r\n    <string name=\"time_newest_first\">Date: Newest First</string>\r\n    <string name=\"time_oldest_first\">Date: Oldest First</string>\r\n\r\n    <!-- AnalysisScreen -->\r\n    <string name=\"current_period_total\">Current Period Total Spending</string>\r\n    <string name=\"vs_previous_month\">Compared to previous month</string>\r\n    <string name=\"vs_6_month_average\">Compared to 6-month average</string>\r\n    <string name=\"no_expenses_this_period\">No expenses this period yet</string>\r\n    <string name=\"analysis_will_appear\">Analysis will appear here when you add expenses</string>\r\n    <string name=\"previous_month\">Previous month</string>\r\n    <string name=\"next_month\">Next month</string>\r\n    <string name=\"select_date_range\">Select date range</string>\r\n    <string name=\"fixed_expenses\">Fixed Expenses</string>\r\n    <string name=\"recurring_expenses_description\">Expenses that will continue for 3+ months</string>\r\n    <string name=\"recurring_expenses_cd\">Recurring expenses</string>\r\n    <string name=\"pick_date_range\">Pick date range</string>\r\n\r\n    <!-- AddExpenseScreen -->\r\n    <string name=\"enter_expense_details\">Enter expense details</string>\r\n    <string name=\"expense_amount_placeholder\">0.00</string>\r\n    <string name=\"search_placeholder_category\">search...</string>\r\n    <string name=\"description_optional\">Description (Optional)</string>\r\n    <string name=\"add_description_placeholder\">Add description...</string>\r\n    <string name=\"recurrence_type\">Recurrence Type</string>\r\n    <string name=\"end_date\">End Date</string>\r\n    <string name=\"exchange_rate_label\">Exchange Rate (1 %1$s = ? %2$s)</string>\r\n    <string name=\"exchange_rate_example\">e.g: 0.035 (1 %1$s = 0.035 %2$s)</string>\r\n    <string name=\"exchange_rate_note\">This rate will be used for progress calculations</string>\r\n    <string name=\"add_expense\">Add Expense</string>\r\n    <string name=\"update_expense\">Update Expense</string>\r\n    <string name=\"none\">None</string>\r\n    <string name=\"one_time\">One time</string>\r\n    <string name=\"every_day\">Every day</string>\r\n    <string name=\"weekdays_only\">Weekdays only</string>\r\n    <string name=\"once_per_week\">Once per week</string>\r\n    <string name=\"once_per_month\">Once per month</string>\r\n    <string name=\"edit_expense\">Edit Expense</string>\r\n    <string name=\"new_expense\">New Expense</string>\r\n    <string name=\"selectCategory\">Category selection</string>\r\n    <string name=\"single_time\">Single time</string>\r\n    <string name=\"okay\">Okay</string>\r\n\r\n    <!-- SubCategoryDetailBottomSheet -->\r\n    <string name=\"parent_category\">Parent Category</string>\r\n    <string name=\"total_amount\">Total Amount</string>\r\n    <string name=\"expense_count\">Expense Count</string>\r\n    <string name=\"average\">Average</string>\r\n    <string name=\"expenses\">Expenses</string>\r\n    <string name=\"recurring_label\">Recurring</string>\r\n\r\n    <!-- ProgressRingComponent -->\r\n    <string name=\"monthly_label\">Monthly</string>\r\n    <string name=\"daily_label\">Daily</string>\r\n\r\n    <!-- PlanDetailBottomSheet -->\r\n    <string name=\"update_expense_data\">Update Expense Data</string>\r\n    <string name=\"update_expense_data_description\">Recalculates current and future months with updated data</string>\r\n    <string name=\"total_net_value\">Total Net Value</string>\r\n    <string name=\"month\">Month</string>\r\n    <string name=\"income\">Income</string>\r\n    <string name=\"expense\">Expense</string>\r\n    <string name=\"net\">Net</string>\r\n    <string name=\"total\">Total</string>\r\n\r\n    <!-- PlanCard -->\r\n    <string name=\"avg_monthly_income\">Avg. Monthly Income</string>\r\n    <string name=\"avg_monthly_expense\">Avg. Monthly Expense</string>\r\n    <string name=\"current_net\">Current Net</string>\r\n    <string name=\"target_net\">Target Net</string>\r\n\r\n    <!-- MonthlyLineChart -->\r\n    <string name=\"all\">All</string>\r\n    <string name=\"one_time_expense\">One-Time Expense</string>\r\n    <string name=\"period_expense_trend\">Period Expense Trend</string>\r\n    <string name=\"expand\">Expand</string>\r\n    <string name=\"collapse\">Collapse</string>\r\n    <string name=\"no_data_found\">No data found</string>\r\n    <string name=\"highest\">Highest</string>\r\n\r\n    <!-- MonthlyExpensesView -->\r\n    <string name=\"no_expenses_this_month\">No expenses this month</string>\r\n    <string name=\"add_expense_for_month\">Press the + button on the main screen to add expenses for this month</string>\r\n\r\n    <!-- MonthlyCalendarView - Day headers -->\r\n    <string name=\"monday_short\">M</string>\r\n    <string name=\"tuesday_short\">T</string>\r\n    <string name=\"wednesday_short\">W</string>\r\n    <string name=\"thursday_short\">T</string>\r\n    <string name=\"friday_short\">F</string>\r\n    <string name=\"saturday_short\">S</string>\r\n    <string name=\"sunday_short\">S</string>\r\n\r\n    <!-- MonthlyAnalysisPieChart -->\r\n    <string name=\"category_distribution\">Category Distribution</string>\r\n    <string name=\"tap_chart_to_select_category\">Tap the chart to select a category</string>\r\n\r\n    <!-- ExpenseRowView -->\r\n    <string name=\"unknown\">Unknown</string>\r\n    <string name=\"delete_expense\">Delete Expense</string>\r\n    <string name=\"delete_expense_confirmation\">Are you sure you want to delete this expense? This action cannot be undone.</string>\r\n\r\n    <!-- DailyCategoryDetailBottomSheet -->\r\n    <string name=\"amount_high_to_low_arrow\">Amount (High → Low)</string>\r\n    <string name=\"amount_low_to_high_arrow\">Amount (Low → High)</string>\r\n    <string name=\"time_newest_first_arrow\">Time (New → Old)</string>\r\n    <string name=\"time_oldest_first_arrow\">Time (Old → New)</string>\r\n    <string name=\"description_a_to_z_arrow\">Description (A → Z)</string>\r\n    <string name=\"description_z_to_a_arrow\">Description (Z → A)</string>\r\n    <string name=\"total_spending\">Total Spending</string>\r\n    <string name=\"no_expenses_in_category\">No expenses found in this category</string>\r\n    <string name=\"expense_singular\">Expense</string>\r\n\r\n    <!-- CreatePlanDialog -->\r\n    <string name=\"create_new_plan\">Create New Plan</string>\r\n    <string name=\"plan_name\">Plan Name</string>\r\n    <string name=\"plan_name_example\">e.g: 2024 Savings Plan</string>\r\n    <string name=\"plan_duration\">Plan Duration</string>\r\n    <string name=\"apply_interest_to_savings\">Apply Interest (to Savings)</string>\r\n    <string name=\"simple_interest\">Simple Interest</string>\r\n    <string name=\"compound_interest\">Compound Interest</string>\r\n    <string name=\"annual_interest_rate\">Annual interest rate %</string>\r\n    <string name=\"interest_applied_to_positive_savings\">Interest is applied to positive savings</string>\r\n    <string name=\"interest_type\">Interest Type</string>\r\n    <string name=\"monthly_income_currency\">Monthly Income (%s)</string>\r\n    <string name=\"use_app_expense_data\">Use app\\'s expense data</string>\r\n    <string name=\"monthly_expenses_currency\">Monthly Expenses (%s)</string>\r\n    <string name=\"manual_monthly_expense_amount\">Manual monthly expense amount</string>\r\n    <string name=\"enter_manual_expense_amount\">Enter manual expense amount</string>\r\n    <string name=\"apply_inflation\">Apply Inflation</string>\r\n    <string name=\"annual_percentage_rate\">Annual % rate</string>\r\n    <string name=\"create\">Create</string>\r\n\r\n    <!-- CategorySummarySection -->\r\n    <string name=\"category_details\">Category Details</string>\r\n    <string name=\"main_categories\">Main Categories</string>\r\n    <string name=\"sub_categories\">Sub Categories</string>\r\n    <string name=\"expense_lowercase\">expense</string>\r\n    <string name=\"see_details\">See details</string>\r\n\r\n    <!-- CategoryPopupLines -->\r\n    <string name=\"vs_previous_month_colon\">Compared to previous month:</string>\r\n    <string name=\"vs_average_colon\">Compared to average:</string>\r\n\r\n    <!-- CategoryManagementScreen -->\r\n    <string name=\"add_new_main_category\">Add New Main Category</string>\r\n    <string name=\"add_main_category_content_desc\">Add Main Category</string>\r\n    <string name=\"category_name_hint\">Enter category name</string>\r\n    <string name=\"unique_category_name_note\">Choose a unique name for the category</string>\r\n    <string name=\"icon_selection\">Icon Selection</string>\r\n    <string name=\"color_selection\">Color Selection</string>\r\n    <string name=\"add_button\">Add</string>\r\n    <string name=\"main_category\">Main Category</string>\r\n    <string name=\"select_category\">Select category</string>\r\n    <string name=\"subcategory_name\">Subcategory Name</string>\r\n    <string name=\"subcategory_name_hint\">Enter subcategory name</string>\r\n    <string name=\"unique_subcategory_name_note\">Choose a unique name for the subcategory</string>\r\n    <string name=\"edit_subcategory\">Edit Subcategory</string>\r\n    <string name=\"edit_category\">Edit Category</string>\r\n    <string name=\"edit\">Edit</string>\r\n    <string name=\"enter_name_hint\">Enter name</string>\r\n    <string name=\"delete_confirmation\">Delete Confirmation</string>\r\n    <string name=\"delete_item_confirmation\">Are you sure you want to delete \\\"%s\\\"? This action cannot be undone.</string>\r\n    <string name=\"this_item\">This item</string>\r\n    <string name=\"collapse_desc\">Collapse</string>\r\n    <string name=\"expand_desc\">Expand</string>\r\n    <string name=\"edit_category_desc\">Edit Category</string>\r\n    <string name=\"delete_category_desc\">Delete Category</string>\r\n    <string name=\"add_subcategory\">Add Subcategory</string>\r\n    <string name=\"add_subcategory_desc\">Add Subcategory</string>\r\n    <string name=\"edit_subcategory_desc\">Edit Subcategory</string>\r\n    <string name=\"delete_subcategory_desc\">Delete Subcategory</string>\r\n    <string name=\"selected\">Selected</string>\r\n\r\n    <!-- CategoryDistributionChart -->\r\n    <string name=\"no_data\">No data</string>\r\n    <string name=\"category\">Category</string>\r\n\r\n    <!-- CategoryDetailBottomSheet -->\r\n    <string name=\"sort_amount_desc\">By Amount (High → Low)</string>\r\n    <string name=\"sort_amount_asc\">By Amount (Low → High)</string>\r\n    <string name=\"sort_date_desc\">By Date (New → Old)</string>\r\n    <string name=\"sort_date_asc\">By Date (Old → New)</string>\r\n    <string name=\"sort_name_asc\">By Description (A → Z)</string>\r\n    <string name=\"sort_name_desc\">By Description (Z → A)</string>\r\n\r\n    <!-- SubCategory - Default subcategories -->\r\n    <!-- Food & Drink -->\r\n    <string name=\"subcategory_restaurant\">Restaurant</string>\r\n    <string name=\"subcategory_kitchen_shopping\">Kitchen shopping</string>\r\n\r\n    <!-- Housing -->\r\n    <string name=\"subcategory_rent\">Rent</string>\r\n    <string name=\"subcategory_dues\">Dues</string>\r\n    <string name=\"subcategory_mortgage\">Mortgage payment</string>\r\n    <string name=\"subcategory_electricity\">Electricity bill</string>\r\n    <string name=\"subcategory_water\">Water bill</string>\r\n    <string name=\"subcategory_heating\">Heating</string>\r\n    <string name=\"subcategory_internet_phone\">Internet and phone</string>\r\n    <string name=\"subcategory_other_bills\">Other Bills</string>\r\n    <string name=\"subcategory_general_shopping\">General grocery shopping</string>\r\n\r\n    <!-- Transportation -->\r\n    <string name=\"subcategory_fuel\">Fuel</string>\r\n    <string name=\"subcategory_public_transport\">Public transport</string>\r\n    <string name=\"subcategory_car_maintenance\">Car maintenance</string>\r\n    <string name=\"subcategory_car_rental\">Car rental</string>\r\n    <string name=\"subcategory_taxi_uber\">Taxi/Uber</string>\r\n    <string name=\"subcategory_car_insurance\">Car insurance</string>\r\n    <string name=\"subcategory_mtv\">Vehicle tax</string>\r\n    <string name=\"subcategory_parking_fees\">Parking fees</string>\r\n\r\n    <!-- Health -->\r\n    <string name=\"subcategory_doctor_appointment\">Doctor appointment</string>\r\n    <string name=\"subcategory_medicines\">Medicines</string>\r\n    <string name=\"subcategory_gym_membership\">Gym membership</string>\r\n    <string name=\"subcategory_cosmetics\">Cosmetics</string>\r\n\r\n    <!-- Entertainment -->\r\n    <string name=\"subcategory_cinema_theater\">Cinema and theater</string>\r\n    <string name=\"subcategory_concerts_events\">Concerts and events</string>\r\n    <string name=\"subcategory_subscriptions\">Subscriptions</string>\r\n    <string name=\"subcategory_books_magazines\">Books and magazines</string>\r\n    <string name=\"subcategory_travel_vacation\">Travel and vacation</string>\r\n    <string name=\"subcategory_games_apps\">Games and apps</string>\r\n\r\n    <!-- Education -->\r\n    <string name=\"subcategory_course_fees\">Course fees</string>\r\n    <string name=\"subcategory_education_materials\">Education materials</string>\r\n    <string name=\"subcategory_seminars\">Seminars</string>\r\n    <string name=\"subcategory_online_courses\">Online courses</string>\r\n\r\n    <!-- Shopping -->\r\n    <string name=\"subcategory_electronics\">Electronics</string>\r\n    <string name=\"subcategory_clothing\">Clothing</string>\r\n    <string name=\"subcategory_home_goods\">Home goods</string>\r\n    <string name=\"subcategory_gifts\">Gifts</string>\r\n    <string name=\"subcategory_perfume\">Perfume</string>\r\n\r\n    <!-- Pets -->\r\n    <string name=\"subcategory_pet_food_toys\">Food and toys</string>\r\n    <string name=\"subcategory_vet_services\">Veterinary services</string>\r\n    <string name=\"subcategory_pet_insurance\">Pet insurance</string>\r\n\r\n    <!-- Work -->\r\n    <string name=\"subcategory_work_meals\">Work meals</string>\r\n    <string name=\"subcategory_office_supplies\">Office supplies</string>\r\n    <string name=\"subcategory_business_travel\">Business travel</string>\r\n    <string name=\"subcategory_work_education\">Training and seminars</string>\r\n    <string name=\"subcategory_freelance_payments\">Freelance work payments</string>\r\n\r\n    <!-- Tax -->\r\n    <string name=\"subcategory_tax_payments\">Tax payments</string>\r\n\r\n    <!-- Others -->\r\n    <string name=\"subcategory_other_expenses\">Other Expenses</string>\r\n\r\n    <!-- ExpensesScreen - Empty state messages -->\r\n    <string name=\"no_search_results_found\">No search results found</string>\r\n    <string name=\"no_expenses_yet\">No expenses yet</string>\r\n    <string name=\"no_expenses_today\">No expenses today</string>\r\n    <string name=\"no_search_results_description\">No results found for \\\"%1$s\\\". Try a different search term.</string>\r\n    <string name=\"first_expense_hint\">Press the + button to add your first expense</string>\r\n    <string name=\"add_expense_for_day_hint\">Press the + button to add expenses for this day</string>\r\n    <string name=\"calendar_tab\">Calendar</string>\r\n    <string name=\"expenses_tab\">Expenses</string>\r\n\r\n    <!-- PlanningUtils - Plan status and validation -->\r\n    <string name=\"plan_status_not_started\">Not started</string>\r\n    <string name=\"plan_status_completed\">Completed</string>\r\n    <string name=\"plan_status_active\">Active</string>\r\n    <string name=\"validation_plan_name_empty\">Plan name cannot be empty</string>\r\n    <string name=\"validation_monthly_income_positive\">Monthly income must be greater than 0</string>\r\n    <string name=\"validation_duration_positive\">Plan duration must be greater than 0</string>\r\n    <string name=\"validation_duration_max_10_years\">Plan duration cannot be more than 10 years</string>\r\n    <string name=\"validation_inflation_rate_range\">Inflation rate must be between -50%% and 100%%</string>\r\n    <string name=\"duration_3_months\">3 Months</string>\r\n    <string name=\"duration_6_months\">6 Months</string>\r\n    <string name=\"duration_1_year\">1 Year</string>\r\n    <string name=\"duration_1_5_years\">1.5 Years</string>\r\n    <string name=\"duration_2_years\">2 Years</string>\r\n    <string name=\"duration_3_years\">3 Years</string>\r\n    <string name=\"duration_5_years\">5 Years</string>\r\n\r\n    <!-- PlanningViewModel - Error messages -->\r\n    <string name=\"error_loading_plan\">Error loading plan: %s</string>\r\n    <string name=\"error_creating_plan\">Error creating plan: %s</string>\r\n    <string name=\"error_deleting_plan\">Error deleting plan: %s</string>\r\n    <string name=\"error_updating_expense_data\">Error updating expense data: %s</string>\r\n    <string name=\"error_updating_plan_calculations\">Error updating plan calculations: %s</string>\r\n    <string name=\"error_saving_changes\">Error saving changes: %s</string>\r\n\r\n    <!-- Category - Default categories -->\r\n    <string name=\"category_food\">Food and Drink</string>\r\n    <string name=\"category_housing\">Housing</string>\r\n    <string name=\"category_transportation\">Transportation</string>\r\n    <string name=\"category_health\">Health and Personal Care</string>\r\n    <string name=\"category_entertainment\">Entertainment and Hobbies</string>\r\n    <string name=\"category_education\">Education</string>\r\n    <string name=\"category_shopping\">Shopping</string>\r\n    <string name=\"category_pets\">Pets</string>\r\n    <string name=\"category_work\">Work and Professional Expenses</string>\r\n    <string name=\"category_tax\">Tax and Legal Expenses</string>\r\n    <string name=\"category_donations\">Donations and Aid</string>\r\n    <string name=\"category_others\">Other Payments</string>\r\n</resources>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/values/strings.xml b/app/src/main/res/values/strings.xml
--- a/app/src/main/res/values/strings.xml	(revision 704fb63dbd103d83a77a5d2f59944f4c74685798)
+++ b/app/src/main/res/values/strings.xml	(date 1759316126897)
@@ -365,4 +365,20 @@
     <string name="category_tax">Tax and Legal Expenses</string>
     <string name="category_donations">Donations and Aid</string>
     <string name="category_others">Other Payments</string>
+
+    <!-- Billing Page -->
+    <string name="no_add_text">I don\'t want to bombard you with silly ads,
+        and I want you to be able to access all features without needing the premium version.
+        But I need income to keep developing. If you like my app and want to support me,
+        feel free to tip a cup of tea (Prices aren\'t affected by inflation here) :).</string>
+    <string name="buy_water">tip a water</string>
+    <string name="buy_bagel">tip a bagel</string>
+    <string name="buy_tea">tip a tea</string>
+    <string name="buy_coffee">tip a coffee</string>
+    <string name="buy_wrap">tip a wrap</string>
+    <string name="buy_burger">tip a burger</string>
+    <string name="buy_doner">tip a doner</string>
+    <string name="max_donation">suprise me</string>
+    <string name="recurring_total">"Total: "</string>
+    <string name="recurring_remaining">"Remaining: "</string>
 </resources>
\ No newline at end of file
Index: app/src/main/res/values-pt/strings.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<resources>\r\n    <string name=\"app_name\">Controle de Gastos</string>\r\n    <string name=\"general_settings\">Configurações Gerais</string>\r\n    <string name=\"categories\">Categorias</string>\r\n    <string name=\"default_currency\">Moeda Padrão</string>\r\n    <string name=\"currency_description\">Moeda padrão a ser usada para novos gastos</string>\r\n    <string name=\"daily_spending_limit\">Limite de Gasto Diário</string>\r\n    <string name=\"enter_daily_limit\">Digite o limite diário</string>\r\n    <string name=\"daily_limit_description\">Seu limite de gasto diário. Nenhum limite aplicado se deixado em branco</string>\r\n    <string name=\"monthly_spending_limit\">Limite de Gasto Mensal</string>\r\n    <string name=\"enter_monthly_limit\">Digite o limite mensal</string>\r\n    <string name=\"monthly_limit_description\">Seu limite total de gasto mensal. O anel de progresso é mostrado baseado neste valor</string>\r\n    <string name=\"theme\">Tema</string>\r\n    <string name=\"dark_theme\">Tema Escuro</string>\r\n    <string name=\"light_theme\">Tema Claro</string>\r\n    <string name=\"theme_description\">Alterar a aparência do aplicativo</string>\r\n    <string name=\"cancel\">Cancelar</string>\r\n    <string name=\"save\">Salvar</string>\r\n    <!-- RecurringExpensesScreen -->\r\n    <string name=\"recurring_expenses\">Gastos Recorrentes</string>\r\n    <string name=\"sort\">Ordenar</string>\r\n    <string name=\"search\">Pesquisar</string>\r\n    <string name=\"back\">Voltar</string>\r\n    <string name=\"amount_high_to_low\">Valor: Alto para Baixo</string>\r\n    <string name=\"amount_low_to_high\">Valor: Baixo para Alto</string>\r\n    <string name=\"description_a_to_z\">Descrição: A-Z</string>\r\n    <string name=\"description_z_to_a\">Descrição: Z-A</string>\r\n    <string name=\"category_a_to_z\">Categoria: A-Z</string>\r\n    <string name=\"category_z_to_a\">Categoria: Z-A</string>\r\n    <string name=\"end_date_recurring\">Fim: %s</string>\r\n    <string name=\"search_placeholder\">Pesquisar por descrição, valor ou categoria...</string>\r\n    <string name=\"no_search_results\">Nenhum resultado de pesquisa encontrado</string>\r\n    <string name=\"search_no_results_description\">Nenhum resultado encontrado para \\\"%1$s\\\". Tente um termo de pesquisa diferente.</string>\r\n    <string name=\"no_recurring_expenses\">Nenhum gasto recorrente ainda</string>\r\n    <string name=\"recurring_expenses_hint\">Pressione o botão + para adicionar gastos recorrentes</string>\r\n    <string name=\"results_found\">%d resultados encontrados</string>\r\n    <string name=\"daily\">Diário</string>\r\n    <string name=\"weekdays\">Dias úteis</string>\r\n    <string name=\"weekly\">Semanal</string>\r\n    <string name=\"monthly\">Mensal</string>\r\n    <string name=\"exchange_rate\">Taxa de Câmbio: %s</string>\r\n    <string name=\"delete\">Excluir</string>\r\n    <string name=\"amount\">Valor</string>\r\n    <string name=\"description\">Descrição</string>\r\n    <string name=\"exchange_rate_field\">Taxa de Câmbio</string>\r\n    <string name=\"select_date\">Selecionar Data</string>\r\n    <string name=\"delete_recurring_expense\">Excluir Gasto Recorrente</string>\r\n    <string name=\"delete_recurring_confirmation\">Tem certeza de que deseja excluir este gasto recorrente a partir de hoje? Esta ação não pode ser desfeita.</string>\r\n    <string name=\"ok\">OK</string>\r\n    <!-- PlanningScreen -->\r\n    <string name=\"financial_planning\">Planejamento Financeiro</string>\r\n    <string name=\"planning_description\">Crie e acompanhe seus planos futuros</string>\r\n    <string name=\"no_plans_yet\">Nenhum plano ainda</string>\r\n    <string name=\"create_first_plan\">Pressione o botão + para criar seu primeiro plano financeiro</string>\r\n    <string name=\"add_plan\">Adicionar Plano</string>\r\n    <string name=\"delete_plan\">Excluir Plano</string>\r\n    <string name=\"delete_plan_confirmation\">Tem certeza de que deseja excluir o plano \\\"%1$s\\\"? Esta ação não pode ser desfeita.</string>\r\n\r\n    <!-- ExpensesScreen -->\r\n    <string name=\"results_count\">%d resultados</string>\r\n    <string name=\"search_expenses_placeholder\">Pesquisar por descrição, valor ou categoria...</string>\r\n    <string name=\"monthly_limit_exceeded\">⚠\uFE0F Você excedeu seu limite de gasto mensal!</string>\r\n    <string name=\"time_newest_first\">Data: Mais Recente Primeiro</string>\r\n    <string name=\"time_oldest_first\">Data: Mais Antigo Primeiro</string>\r\n\r\n    <!-- AnalysisScreen -->\r\n    <string name=\"current_period_total\">Total de Gastos do Período Atual</string>\r\n    <string name=\"vs_previous_month\">Comparado ao mês anterior</string>\r\n    <string name=\"vs_6_month_average\">Comparado à média de 6 meses</string>\r\n    <string name=\"no_expenses_this_period\">Nenhum gasto neste período ainda</string>\r\n    <string name=\"analysis_will_appear\">A análise aparecerá aqui quando você adicionar gastos</string>\r\n    <string name=\"previous_month\">Mês anterior</string>\r\n    <string name=\"next_month\">Próximo mês</string>\r\n    <string name=\"select_date_range\">Selecionar intervalo de datas</string>\r\n    <string name=\"fixed_expenses\">Gastos Fixos</string>\r\n    <string name=\"recurring_expenses_description\">Gastos que continuarão por 3+ meses</string>\r\n    <string name=\"recurring_expenses_cd\">Gastos recorrentes</string>\r\n    <string name=\"pick_date_range\">Escolher intervalo de datas</string>\r\n\r\n    <!-- AddExpenseScreen -->\r\n    <string name=\"enter_expense_details\">Digite os detalhes do gasto</string>\r\n    <string name=\"expense_amount_placeholder\">0,00</string>\r\n    <string name=\"search_placeholder_category\">pesquisar...</string>\r\n    <string name=\"description_optional\">Descrição (Opcional)</string>\r\n    <string name=\"add_description_placeholder\">Adicionar descrição...</string>\r\n    <string name=\"recurrence_type\">Tipo de Recorrência</string>\r\n    <string name=\"end_date\">Data de Fim</string>\r\n    <string name=\"exchange_rate_label\">Taxa de Câmbio (1 %1$s = ? %2$s)</string>\r\n    <string name=\"exchange_rate_example\">ex: 0,035 (1 %1$s = 0,035 %2$s)</string>\r\n    <string name=\"exchange_rate_note\">Esta taxa será usada para cálculos de progresso</string>\r\n    <string name=\"add_expense\">Adicionar Gasto</string>\r\n    <string name=\"update_expense\">Atualizar Gasto</string>\r\n    <string name=\"none\">Nenhum</string>\r\n    <string name=\"one_time\">Uma vez</string>\r\n    <string name=\"every_day\">Todos os dias</string>\r\n    <string name=\"weekdays_only\">Apenas dias úteis</string>\r\n    <string name=\"once_per_week\">Uma vez por semana</string>\r\n    <string name=\"once_per_month\">Uma vez por mês</string>\r\n    <string name=\"edit_expense\">Editar Gasto</string>\r\n    <string name=\"new_expense\">Novo Gasto</string>\r\n    <string name=\"selectCategory\">Seleção de categoria</string>\r\n    <string name=\"single_time\">Uma única vez</string>\r\n    <string name=\"okay\">Ok</string>\r\n\r\n    <!-- SubCategoryDetailBottomSheet -->\r\n    <string name=\"parent_category\">Categoria Pai</string>\r\n    <string name=\"total_amount\">Valor Total</string>\r\n    <string name=\"expense_count\">Número de Gastos</string>\r\n    <string name=\"average\">Média</string>\r\n    <string name=\"expenses\">Gastos</string>\r\n    <string name=\"recurring_label\">Recorrente</string>\r\n\r\n    <!-- ProgressRingComponent -->\r\n    <string name=\"monthly_label\">Mensal</string>\r\n    <string name=\"daily_label\">Diário</string>\r\n\r\n    <!-- PlanDetailBottomSheet -->\r\n    <string name=\"update_expense_data\">Atualizar Dados de Gastos</string>\r\n    <string name=\"update_expense_data_description\">Recalcula os meses atuais e futuros com dados atualizados</string>\r\n    <string name=\"total_net_value\">Valor Líquido Total</string>\r\n    <string name=\"month\">Mês</string>\r\n    <string name=\"income\">Renda</string>\r\n    <string name=\"expense\">Gasto</string>\r\n    <string name=\"net\">Líquido</string>\r\n    <string name=\"total\">Total</string>\r\n\r\n    <!-- PlanCard -->\r\n    <string name=\"avg_monthly_income\">Renda Mensal Média</string>\r\n    <string name=\"avg_monthly_expense\">Gastos Mensais Médios</string>\r\n    <string name=\"current_net\">Líquido Atual</string>\r\n    <string name=\"target_net\">Meta Líquida</string>\r\n\r\n    <!-- MonthlyLineChart -->\r\n    <string name=\"all\">Todos</string>\r\n    <string name=\"one_time_expense\">Gasto Único</string>\r\n    <string name=\"period_expense_trend\">Tendência de Gastos do Período</string>\r\n    <string name=\"expand\">Expandir</string>\r\n    <string name=\"collapse\">Recolher</string>\r\n    <string name=\"no_data_found\">Nenhum dado encontrado</string>\r\n    <string name=\"highest\">Maior</string>\r\n\r\n    <!-- MonthlyExpensesView -->\r\n    <string name=\"no_expenses_this_month\">Nenhum gasto este mês</string>\r\n    <string name=\"add_expense_for_month\">Pressione o botão + na tela principal para adicionar gastos para este mês</string>\r\n\r\n    <!-- MonthlyCalendarView - Day headers -->\r\n    <string name=\"monday_short\">S</string>\r\n    <string name=\"tuesday_short\">T</string>\r\n    <string name=\"wednesday_short\">Q</string>\r\n    <string name=\"thursday_short\">Q</string>\r\n    <string name=\"friday_short\">S</string>\r\n    <string name=\"saturday_short\">S</string>\r\n    <string name=\"sunday_short\">D</string>\r\n\r\n    <!-- MonthlyAnalysisPieChart -->\r\n    <string name=\"category_distribution\">Distribuição por Categorias</string>\r\n    <string name=\"tap_chart_to_select_category\">Toque no gráfico para selecionar uma categoria</string>\r\n\r\n    <!-- ExpenseRowView -->\r\n    <string name=\"unknown\">Desconhecido</string>\r\n    <string name=\"delete_expense\">Excluir Gasto</string>\r\n    <string name=\"delete_expense_confirmation\">Tem certeza de que deseja excluir este gasto? Esta ação não pode ser desfeita.</string>\r\n\r\n    <!-- DailyCategoryDetailBottomSheet -->\r\n    <string name=\"amount_high_to_low_arrow\">Valor (Alto → Baixo)</string>\r\n    <string name=\"amount_low_to_high_arrow\">Valor (Baixo → Alto)</string>\r\n    <string name=\"time_newest_first_arrow\">Tempo (Novo → Antigo)</string>\r\n    <string name=\"time_oldest_first_arrow\">Tempo (Antigo → Novo)</string>\r\n    <string name=\"description_a_to_z_arrow\">Descrição (A → Z)</string>\r\n    <string name=\"description_z_to_a_arrow\">Descrição (Z → A)</string>\r\n    <string name=\"total_spending\">Gasto Total</string>\r\n    <string name=\"no_expenses_in_category\">Nenhum gasto encontrado nesta categoria</string>\r\n    <string name=\"expense_singular\">Gasto</string>\r\n\r\n    <!-- CreatePlanDialog -->\r\n    <string name=\"create_new_plan\">Criar Novo Plano</string>\r\n    <string name=\"plan_name\">Nome do Plano</string>\r\n    <string name=\"plan_name_example\">ex: Plano de Poupança 2024</string>\r\n    <string name=\"plan_duration\">Duração do Plano</string>\r\n    <string name=\"apply_interest_to_savings\">Aplicar Juros (à Poupança)</string>\r\n    <string name=\"simple_interest\">Juros Simples</string>\r\n    <string name=\"compound_interest\">Juros Compostos</string>\r\n    <string name=\"annual_interest_rate\">Taxa de juros anual %</string>\r\n    <string name=\"interest_applied_to_positive_savings\">Os juros são aplicados à poupança positiva</string>\r\n    <string name=\"interest_type\">Tipo de Juros</string>\r\n    <string name=\"monthly_income_currency\">Renda Mensal (%s)</string>\r\n    <string name=\"use_app_expense_data\">Usar dados de gastos do aplicativo</string>\r\n    <string name=\"monthly_expenses_currency\">Gastos Mensais (%s)</string>\r\n    <string name=\"manual_monthly_expense_amount\">Valor manual de gastos mensais</string>\r\n    <string name=\"enter_manual_expense_amount\">Digite o valor manual de gastos</string>\r\n    <string name=\"apply_inflation\">Aplicar Inflação</string>\r\n    <string name=\"annual_percentage_rate\">Taxa anual %</string>\r\n    <string name=\"create\">Criar</string>\r\n\r\n    <!-- CategorySummarySection -->\r\n    <string name=\"category_details\">Detalhes da Categoria</string>\r\n    <string name=\"main_categories\">Categorias Principais</string>\r\n    <string name=\"sub_categories\">Subcategorias</string>\r\n    <string name=\"expense_lowercase\">gasto</string>\r\n    <string name=\"see_details\">Ver detalhes</string>\r\n\r\n    <!-- CategoryPopupLines -->\r\n    <string name=\"vs_previous_month_colon\">Comparado ao mês anterior:</string>\r\n    <string name=\"vs_average_colon\">Comparado à média:</string>\r\n\r\n    <!-- CategoryManagementScreen -->\r\n    <string name=\"add_new_main_category\">Adicionar Nova Categoria Principal</string>\r\n    <string name=\"add_main_category_content_desc\">Adicionar Categoria Principal</string>\r\n    <string name=\"category_name_hint\">Digite o nome da categoria</string>\r\n    <string name=\"unique_category_name_note\">Escolha um nome único para a categoria</string>\r\n    <string name=\"icon_selection\">Seleção de Ícone</string>\r\n    <string name=\"color_selection\">Seleção de Cor</string>\r\n    <string name=\"add_button\">Adicionar</string>\r\n    <string name=\"main_category\">Categoria Principal</string>\r\n    <string name=\"select_category\">Selecionar categoria</string>\r\n    <string name=\"subcategory_name\">Nome da Subcategoria</string>\r\n    <string name=\"subcategory_name_hint\">Digite o nome da subcategoria</string>\r\n    <string name=\"unique_subcategory_name_note\">Escolha um nome único para a subcategoria</string>\r\n    <string name=\"edit_subcategory\">Editar Subcategoria</string>\r\n    <string name=\"edit_category\">Editar Categoria</string>\r\n    <string name=\"edit\">Editar</string>\r\n    <string name=\"enter_name_hint\">Digite o nome</string>\r\n    <string name=\"delete_confirmation\">Confirmação de Exclusão</string>\r\n    <string name=\"delete_item_confirmation\">Tem certeza de que deseja excluir \\\"%s\\\"? Esta ação não pode ser desfeita.</string>\r\n    <string name=\"this_item\">Este item</string>\r\n    <string name=\"collapse_desc\">Recolher</string>\r\n    <string name=\"expand_desc\">Expandir</string>\r\n    <string name=\"edit_category_desc\">Editar Categoria</string>\r\n    <string name=\"delete_category_desc\">Excluir Categoria</string>\r\n    <string name=\"add_subcategory\">Adicionar Subcategoria</string>\r\n    <string name=\"add_subcategory_desc\">Adicionar Subcategoria</string>\r\n    <string name=\"edit_subcategory_desc\">Editar Subcategoria</string>\r\n    <string name=\"delete_subcategory_desc\">Excluir Subcategoria</string>\r\n    <string name=\"selected\">Selecionado</string>\r\n\r\n    <!-- CategoryDistributionChart -->\r\n    <string name=\"no_data\">Nenhum dado</string>\r\n    <string name=\"category\">Categoria</string>\r\n\r\n    <!-- CategoryDetailBottomSheet -->\r\n    <string name=\"sort_amount_desc\">Por Valor (Alto → Baixo)</string>\r\n    <string name=\"sort_amount_asc\">Por Valor (Baixo → Alto)</string>\r\n    <string name=\"sort_date_desc\">Por Data (Novo → Antigo)</string>\r\n    <string name=\"sort_date_asc\">Por Data (Antigo → Novo)</string>\r\n    <string name=\"sort_name_asc\">Por Descrição (A → Z)</string>\r\n    <string name=\"sort_name_desc\">Por Descrição (Z → A)</string>\r\n\r\n    <!-- SubCategory - Default subcategories -->\r\n    <!-- Food & Drink -->\r\n    <string name=\"subcategory_restaurant\">Restaurante</string>\r\n    <string name=\"subcategory_kitchen_shopping\">Compras de cozinha</string>\r\n\r\n    <!-- Housing -->\r\n    <string name=\"subcategory_rent\">Aluguel</string>\r\n    <string name=\"subcategory_dues\">Condomínio</string>\r\n    <string name=\"subcategory_mortgage\">Pagamento de financiamento</string>\r\n    <string name=\"subcategory_electricity\">Conta de luz</string>\r\n    <string name=\"subcategory_water\">Conta de água</string>\r\n    <string name=\"subcategory_heating\">Aquecimento</string>\r\n    <string name=\"subcategory_internet_phone\">Internet e telefone</string>\r\n    <string name=\"subcategory_other_bills\">Outras Contas</string>\r\n    <string name=\"subcategory_general_shopping\">Compras gerais de supermercado</string>\r\n\r\n    <!-- Transportation -->\r\n    <string name=\"subcategory_fuel\">Combustível</string>\r\n    <string name=\"subcategory_public_transport\">Transporte público</string>\r\n    <string name=\"subcategory_car_maintenance\">Manutenção do carro</string>\r\n    <string name=\"subcategory_car_rental\">Aluguel de carro</string>\r\n    <string name=\"subcategory_taxi_uber\">Táxi/Uber</string>\r\n    <string name=\"subcategory_car_insurance\">Seguro do carro</string>\r\n    <string name=\"subcategory_mtv\">IPVA</string>\r\n    <string name=\"subcategory_parking_fees\">Taxas de estacionamento</string>\r\n\r\n    <!-- Health -->\r\n    <string name=\"subcategory_doctor_appointment\">Consulta médica</string>\r\n    <string name=\"subcategory_medicines\">Medicamentos</string>\r\n    <string name=\"subcategory_gym_membership\">Mensalidade da academia</string>\r\n    <string name=\"subcategory_cosmetics\">Cosméticos</string>\r\n\r\n    <!-- Entertainment -->\r\n    <string name=\"subcategory_cinema_theater\">Cinema e teatro</string>\r\n    <string name=\"subcategory_concerts_events\">Shows e eventos</string>\r\n    <string name=\"subcategory_subscriptions\">Assinaturas</string>\r\n    <string name=\"subcategory_books_magazines\">Livros e revistas</string>\r\n    <string name=\"subcategory_travel_vacation\">Viagens e férias</string>\r\n    <string name=\"subcategory_games_apps\">Jogos e aplicativos</string>\r\n\r\n    <!-- Education -->\r\n    <string name=\"subcategory_course_fees\">Taxas de cursos</string>\r\n    <string name=\"subcategory_education_materials\">Materiais educacionais</string>\r\n    <string name=\"subcategory_seminars\">Seminários</string>\r\n    <string name=\"subcategory_online_courses\">Cursos online</string>\r\n\r\n    <!-- Shopping -->\r\n    <string name=\"subcategory_electronics\">Eletrônicos</string>\r\n    <string name=\"subcategory_clothing\">Roupas</string>\r\n    <string name=\"subcategory_home_goods\">Artigos para casa</string>\r\n    <string name=\"subcategory_gifts\">Presentes</string>\r\n    <string name=\"subcategory_perfume\">Perfume</string>\r\n\r\n    <!-- Pets -->\r\n    <string name=\"subcategory_pet_food_toys\">Ração e brinquedos</string>\r\n    <string name=\"subcategory_vet_services\">Serviços veterinários</string>\r\n    <string name=\"subcategory_pet_insurance\">Seguro pet</string>\r\n\r\n    <!-- Work -->\r\n    <string name=\"subcategory_work_meals\">Refeições de trabalho</string>\r\n    <string name=\"subcategory_office_supplies\">Material de escritório</string>\r\n    <string name=\"subcategory_business_travel\">Viagens de negócios</string>\r\n    <string name=\"subcategory_work_education\">Treinamento e seminários</string>\r\n    <string name=\"subcategory_freelance_payments\">Pagamentos de freelance</string>\r\n\r\n    <!-- Tax -->\r\n    <string name=\"subcategory_tax_payments\">Pagamentos de impostos</string>\r\n\r\n    <!-- Others -->\r\n    <string name=\"subcategory_other_expenses\">Outros Gastos</string>\r\n\r\n    <!-- ExpensesScreen - Empty state messages -->\r\n    <string name=\"no_search_results_found\">Nenhum resultado de pesquisa encontrado</string>\r\n    <string name=\"no_expenses_yet\">Nenhum gasto ainda</string>\r\n    <string name=\"no_expenses_today\">Nenhum gasto hoje</string>\r\n    <string name=\"no_search_results_description\">Nenhum resultado encontrado para \\\"%1$s\\\". Tente um termo de pesquisa diferente.</string>\r\n    <string name=\"first_expense_hint\">Pressione o botão + para adicionar seu primeiro gasto</string>\r\n    <string name=\"add_expense_for_day_hint\">Pressione o botão + para adicionar gastos para este dia</string>\r\n    <string name=\"calendar_tab\">Calendário</string>\r\n    <string name=\"expenses_tab\">Gastos</string>\r\n\r\n    <!-- PlanningUtils - Plan status and validation -->\r\n    <string name=\"plan_status_not_started\">Não iniciado</string>\r\n    <string name=\"plan_status_completed\">Concluído</string>\r\n    <string name=\"plan_status_active\">Ativo</string>\r\n    <string name=\"validation_plan_name_empty\">O nome do plano não pode estar vazio</string>\r\n    <string name=\"validation_monthly_income_positive\">A renda mensal deve ser maior que 0</string>\r\n    <string name=\"validation_duration_positive\">A duração do plano deve ser maior que 0</string>\r\n    <string name=\"validation_duration_max_10_years\">A duração do plano não pode ser mais de 10 anos</string>\r\n    <string name=\"validation_inflation_rate_range\">A taxa de inflação deve estar entre -50%% e 100%%</string>\r\n    <string name=\"duration_3_months\">3 Meses</string>\r\n    <string name=\"duration_6_months\">6 Meses</string>\r\n    <string name=\"duration_1_year\">1 Ano</string>\r\n    <string name=\"duration_1_5_years\">1,5 Anos</string>\r\n    <string name=\"duration_2_years\">2 Anos</string>\r\n    <string name=\"duration_3_years\">3 Anos</string>\r\n    <string name=\"duration_5_years\">5 Anos</string>\r\n\r\n    <!-- PlanningViewModel - Error messages -->\r\n    <string name=\"error_loading_plan\">Erro ao carregar o plano: %s</string>\r\n    <string name=\"error_creating_plan\">Erro ao criar o plano: %s</string>\r\n    <string name=\"error_deleting_plan\">Erro ao excluir o plano: %s</string>\r\n    <string name=\"error_updating_expense_data\">Erro ao atualizar os dados de gastos: %s</string>\r\n    <string name=\"error_updating_plan_calculations\">Erro ao atualizar os cálculos do plano: %s</string>\r\n    <string name=\"error_saving_changes\">Erro ao salvar as alterações: %s</string>\r\n\r\n    <!-- Category - Default categories -->\r\n    <string name=\"category_food\">Comida e Bebida</string>\r\n    <string name=\"category_housing\">Moradia</string>\r\n    <string name=\"category_transportation\">Transporte</string>\r\n    <string name=\"category_health\">Saúde e Cuidados Pessoais</string>\r\n    <string name=\"category_entertainment\">Entretenimento e Hobbies</string>\r\n    <string name=\"category_education\">Educação</string>\r\n    <string name=\"category_shopping\">Compras</string>\r\n    <string name=\"category_pets\">Animais de Estimação</string>\r\n    <string name=\"category_work\">Trabalho e Gastos Profissionais</string>\r\n    <string name=\"category_tax\">Impostos e Gastos Legais</string>\r\n    <string name=\"category_donations\">Doações e Ajuda</string>\r\n    <string name=\"category_others\">Outros Pagamentos</string>\r\n</resources>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/values-pt/strings.xml b/app/src/main/res/values-pt/strings.xml
--- a/app/src/main/res/values-pt/strings.xml	(revision 704fb63dbd103d83a77a5d2f59944f4c74685798)
+++ b/app/src/main/res/values-pt/strings.xml	(date 1759316126930)
@@ -365,4 +365,19 @@
     <string name="category_tax">Impostos e Gastos Legais</string>
     <string name="category_donations">Doações e Ajuda</string>
     <string name="category_others">Outros Pagamentos</string>
+    <!-- Billing Page -->
+    <string name="no_add_text">I don\'t want to bombard you with silly ads,
+        and I want you to be able to access all features without needing the premium version.
+        But I need income to keep developing. If you like my app and want to support me,
+        feel free to tip a cup of tea (Prices aren\'t affected by inflation here) :).</string>
+    <string name="buy_water">tip a water</string>
+    <string name="buy_bagel">tip a bagel</string>
+    <string name="buy_tea">tip a tea</string>
+    <string name="buy_coffee">tip a coffee</string>
+    <string name="buy_wrap">tip a wrap</string>
+    <string name="buy_burger">tip a burger</string>
+    <string name="buy_doner">tip a doner</string>
+    <string name="max_donation">suprise me</string>
+    <string name="recurring_total">"Total: "</string>
+    <string name="recurring_remaining">"Remaining: "</string>
 </resources>
\ No newline at end of file
Index: app/src/main/res/values-de/strings.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<resources>\r\n    <string name=\"app_name\">Ausgaben Tracker</string>\r\n    <string name=\"general_settings\">Allgemeine Einstellungen</string>\r\n    <string name=\"categories\">Kategorien</string>\r\n    <string name=\"default_currency\">Standardwährung</string>\r\n    <string name=\"currency_description\">Standardwährung für neue Ausgaben</string>\r\n    <string name=\"daily_spending_limit\">Tägliches Ausgabenlimit</string>\r\n    <string name=\"enter_daily_limit\">Tägliches Limit eingeben</string>\r\n    <string name=\"daily_limit_description\">Ihr tägliches Ausgabenlimit. Kein Limit angewendet, wenn leer gelassen</string>\r\n    <string name=\"monthly_spending_limit\">Monatliches Ausgabenlimit</string>\r\n    <string name=\"enter_monthly_limit\">Monatliches Limit eingeben</string>\r\n    <string name=\"monthly_limit_description\">Ihr monatliches Gesamtausgabenlimit. Fortschrittsring wird basierend auf diesem Wert angezeigt</string>\r\n    <string name=\"theme\">Design</string>\r\n    <string name=\"dark_theme\">Dunkles Design</string>\r\n    <string name=\"light_theme\">Helles Design</string>\r\n    <string name=\"theme_description\">Das Erscheinungsbild der App ändern</string>\r\n    <string name=\"cancel\">Abbrechen</string>\r\n    <string name=\"save\">Speichern</string>\r\n    <!-- RecurringExpensesScreen -->\r\n    <string name=\"recurring_expenses\">Wiederkehrende Ausgaben</string>\r\n    <string name=\"sort\">Sortieren</string>\r\n    <string name=\"search\">Suchen</string>\r\n    <string name=\"back\">Zurück</string>\r\n    <string name=\"amount_high_to_low\">Betrag: Hoch zu Niedrig</string>\r\n    <string name=\"amount_low_to_high\">Betrag: Niedrig zu Hoch</string>\r\n    <string name=\"description_a_to_z\">Beschreibung: A-Z</string>\r\n    <string name=\"description_z_to_a\">Beschreibung: Z-A</string>\r\n    <string name=\"category_a_to_z\">Kategorie: A-Z</string>\r\n    <string name=\"category_z_to_a\">Kategorie: Z-A</string>\r\n    <string name=\"end_date_recurring\">Ende: %s</string>\r\n    <string name=\"search_placeholder\">Nach Beschreibung, Betrag oder Kategorie suchen...</string>\r\n    <string name=\"no_search_results\">Keine Suchergebnisse gefunden</string>\r\n    <string name=\"search_no_results_description\">Keine Ergebnisse für \\\"%1$s\\\" gefunden. Versuchen Sie einen anderen Suchbegriff.</string>\r\n    <string name=\"no_recurring_expenses\">Noch keine wiederkehrenden Ausgaben</string>\r\n    <string name=\"recurring_expenses_hint\">Drücken Sie die + Taste, um wiederkehrende Ausgaben hinzuzufügen</string>\r\n    <string name=\"results_found\">%d Ergebnisse gefunden</string>\r\n    <string name=\"daily\">Täglich</string>\r\n    <string name=\"weekdays\">Wochentage</string>\r\n    <string name=\"weekly\">Wöchentlich</string>\r\n    <string name=\"monthly\">Monatlich</string>\r\n    <string name=\"exchange_rate\">Wechselkurs: %s</string>\r\n    <string name=\"delete\">Löschen</string>\r\n    <string name=\"amount\">Betrag</string>\r\n    <string name=\"description\">Beschreibung</string>\r\n    <string name=\"exchange_rate_field\">Wechselkurs</string>\r\n    <string name=\"select_date\">Datum auswählen</string>\r\n    <string name=\"delete_recurring_expense\">Wiederkehrende Ausgabe löschen</string>\r\n    <string name=\"delete_recurring_confirmation\">Sind Sie sicher, dass Sie diese wiederkehrende Ausgabe ab heute löschen möchten? Diese Aktion kann nicht rückgängig gemacht werden.</string>\r\n    <string name=\"ok\">OK</string>\r\n    <!-- PlanningScreen -->\r\n    <string name=\"financial_planning\">Finanzplanung</string>\r\n    <string name=\"planning_description\">Erstellen und verfolgen Sie Ihre Zukunftspläne</string>\r\n    <string name=\"no_plans_yet\">Noch keine Pläne</string>\r\n    <string name=\"create_first_plan\">Drücken Sie die + Taste, um Ihren ersten Finanzplan zu erstellen</string>\r\n    <string name=\"add_plan\">Plan hinzufügen</string>\r\n    <string name=\"delete_plan\">Plan löschen</string>\r\n    <string name=\"delete_plan_confirmation\">Sind Sie sicher, dass Sie den Plan \\\"%1$s\\\" löschen möchten? Diese Aktion kann nicht rückgängig gemacht werden.</string>\r\n\r\n    <!-- ExpensesScreen -->\r\n    <string name=\"results_count\">%d Ergebnisse</string>\r\n    <string name=\"search_expenses_placeholder\">Nach Beschreibung, Betrag oder Kategorie suchen...</string>\r\n    <string name=\"monthly_limit_exceeded\">⚠\uFE0F Sie haben Ihr monatliches Ausgabenlimit überschritten!</string>\r\n    <string name=\"time_newest_first\">Datum: Neueste zuerst</string>\r\n    <string name=\"time_oldest_first\">Datum: Älteste zuerst</string>\r\n\r\n    <!-- AnalysisScreen -->\r\n    <string name=\"current_period_total\">Aktuelle Periode Gesamtausgaben</string>\r\n    <string name=\"vs_previous_month\">Verglichen mit dem Vormonat</string>\r\n    <string name=\"vs_6_month_average\">Verglichen mit dem 6-Monats-Durchschnitt</string>\r\n    <string name=\"no_expenses_this_period\">Noch keine Ausgaben in dieser Periode</string>\r\n    <string name=\"analysis_will_appear\">Die Analyse wird hier angezeigt, wenn Sie Ausgaben hinzufügen</string>\r\n    <string name=\"previous_month\">Vorheriger Monat</string>\r\n    <string name=\"next_month\">Nächster Monat</string>\r\n    <string name=\"select_date_range\">Datumsbereich auswählen</string>\r\n    <string name=\"fixed_expenses\">Fixe Ausgaben</string>\r\n    <string name=\"recurring_expenses_description\">Ausgaben, die 3+ Monate andauern werden</string>\r\n    <string name=\"recurring_expenses_cd\">Wiederkehrende Ausgaben</string>\r\n    <string name=\"pick_date_range\">Datumsbereich wählen</string>\r\n\r\n    <!-- AddExpenseScreen -->\r\n    <string name=\"enter_expense_details\">Ausgabendetails eingeben</string>\r\n    <string name=\"expense_amount_placeholder\">0,00</string>\r\n    <string name=\"search_placeholder_category\">suchen...</string>\r\n    <string name=\"description_optional\">Beschreibung (Optional)</string>\r\n    <string name=\"add_description_placeholder\">Beschreibung hinzufügen...</string>\r\n    <string name=\"recurrence_type\">Wiederholungstyp</string>\r\n    <string name=\"end_date\">Enddatum</string>\r\n    <string name=\"exchange_rate_label\">Wechselkurs (1 %1$s = ? %2$s)</string>\r\n    <string name=\"exchange_rate_example\">z.B.: 0,035 (1 %1$s = 0,035 %2$s)</string>\r\n    <string name=\"exchange_rate_note\">Dieser Kurs wird für Fortschrittsberechnungen verwendet</string>\r\n    <string name=\"add_expense\">Ausgabe hinzufügen</string>\r\n    <string name=\"update_expense\">Ausgabe aktualisieren</string>\r\n    <string name=\"none\">Keine</string>\r\n    <string name=\"one_time\">Einmalig</string>\r\n    <string name=\"every_day\">Jeden Tag</string>\r\n    <string name=\"weekdays_only\">Nur Wochentage</string>\r\n    <string name=\"once_per_week\">Einmal pro Woche</string>\r\n    <string name=\"once_per_month\">Einmal pro Monat</string>\r\n    <string name=\"edit_expense\">Ausgabe bearbeiten</string>\r\n    <string name=\"new_expense\">Neue Ausgabe</string>\r\n    <string name=\"selectCategory\">Kategorieauswahl</string>\r\n    <string name=\"single_time\">Einmalig</string>\r\n    <string name=\"okay\">Okay</string>\r\n\r\n    <!-- SubCategoryDetailBottomSheet -->\r\n    <string name=\"parent_category\">Übergeordnete Kategorie</string>\r\n    <string name=\"total_amount\">Gesamtbetrag</string>\r\n    <string name=\"expense_count\">Anzahl Ausgaben</string>\r\n    <string name=\"average\">Durchschnitt</string>\r\n    <string name=\"expenses\">Ausgaben</string>\r\n    <string name=\"recurring_label\">Wiederkehrend</string>\r\n\r\n    <!-- ProgressRingComponent -->\r\n    <string name=\"monthly_label\">Monatlich</string>\r\n    <string name=\"daily_label\">Täglich</string>\r\n\r\n    <!-- PlanDetailBottomSheet -->\r\n    <string name=\"update_expense_data\">Ausgabendaten aktualisieren</string>\r\n    <string name=\"update_expense_data_description\">Berechnet aktuelle und zukünftige Monate mit aktualisierten Daten neu</string>\r\n    <string name=\"total_net_value\">Gesamtnettowert</string>\r\n    <string name=\"month\">Monat</string>\r\n    <string name=\"income\">Einkommen</string>\r\n    <string name=\"expense\">Ausgabe</string>\r\n    <string name=\"net\">Netto</string>\r\n    <string name=\"total\">Gesamt</string>\r\n\r\n    <!-- PlanCard -->\r\n    <string name=\"avg_monthly_income\">Durchschn. Monatseinkommen</string>\r\n    <string name=\"avg_monthly_expense\">Durchschn. Monatsausgaben</string>\r\n    <string name=\"current_net\">Aktuelles Netto</string>\r\n    <string name=\"target_net\">Ziel-Netto</string>\r\n\r\n    <!-- MonthlyLineChart -->\r\n    <string name=\"all\">Alle</string>\r\n    <string name=\"one_time_expense\">Einmalige Ausgabe</string>\r\n    <string name=\"period_expense_trend\">Periodenausgaben-Trend</string>\r\n    <string name=\"expand\">Erweitern</string>\r\n    <string name=\"collapse\">Einklappen</string>\r\n    <string name=\"no_data_found\">Keine Daten gefunden</string>\r\n    <string name=\"highest\">Höchste</string>\r\n\r\n    <!-- MonthlyExpensesView -->\r\n    <string name=\"no_expenses_this_month\">Keine Ausgaben in diesem Monat</string>\r\n    <string name=\"add_expense_for_month\">Drücken Sie die + Taste auf dem Hauptbildschirm, um Ausgaben für diesen Monat hinzuzufügen</string>\r\n\r\n    <!-- MonthlyCalendarView - Day headers -->\r\n    <string name=\"monday_short\">M</string>\r\n    <string name=\"tuesday_short\">D</string>\r\n    <string name=\"wednesday_short\">M</string>\r\n    <string name=\"thursday_short\">D</string>\r\n    <string name=\"friday_short\">F</string>\r\n    <string name=\"saturday_short\">S</string>\r\n    <string name=\"sunday_short\">S</string>\r\n\r\n    <!-- MonthlyAnalysisPieChart -->\r\n    <string name=\"category_distribution\">Kategorieverteilung</string>\r\n    <string name=\"tap_chart_to_select_category\">Tippen Sie auf das Diagramm, um eine Kategorie auszuwählen</string>\r\n\r\n    <!-- ExpenseRowView -->\r\n    <string name=\"unknown\">Unbekannt</string>\r\n    <string name=\"delete_expense\">Ausgabe löschen</string>\r\n    <string name=\"delete_expense_confirmation\">Sind Sie sicher, dass Sie diese Ausgabe löschen möchten? Diese Aktion kann nicht rückgängig gemacht werden.</string>\r\n\r\n    <!-- DailyCategoryDetailBottomSheet -->\r\n    <string name=\"amount_high_to_low_arrow\">Betrag (Hoch → Niedrig)</string>\r\n    <string name=\"amount_low_to_high_arrow\">Betrag (Niedrig → Hoch)</string>\r\n    <string name=\"time_newest_first_arrow\">Zeit (Neu → Alt)</string>\r\n    <string name=\"time_oldest_first_arrow\">Zeit (Alt → Neu)</string>\r\n    <string name=\"description_a_to_z_arrow\">Beschreibung (A → Z)</string>\r\n    <string name=\"description_z_to_a_arrow\">Beschreibung (Z → A)</string>\r\n    <string name=\"total_spending\">Gesamtausgaben</string>\r\n    <string name=\"no_expenses_in_category\">Keine Ausgaben in dieser Kategorie gefunden</string>\r\n    <string name=\"expense_singular\">Ausgabe</string>\r\n\r\n    <!-- CreatePlanDialog -->\r\n    <string name=\"create_new_plan\">Neuen Plan erstellen</string>\r\n    <string name=\"plan_name\">Planname</string>\r\n    <string name=\"plan_name_example\">z.B.: 2024 Sparplan</string>\r\n    <string name=\"plan_duration\">Plandauer</string>\r\n    <string name=\"apply_interest_to_savings\">Zinsen anwenden (auf Ersparnisse)</string>\r\n    <string name=\"simple_interest\">Einfache Zinsen</string>\r\n    <string name=\"compound_interest\">Zinseszins</string>\r\n    <string name=\"annual_interest_rate\">Jährlicher Zinssatz %</string>\r\n    <string name=\"interest_applied_to_positive_savings\">Zinsen werden auf positive Ersparnisse angewendet</string>\r\n    <string name=\"interest_type\">Zinstyp</string>\r\n    <string name=\"monthly_income_currency\">Monatseinkommen (%s)</string>\r\n    <string name=\"use_app_expense_data\">App-Ausgabendaten verwenden</string>\r\n    <string name=\"monthly_expenses_currency\">Monatsausgaben (%s)</string>\r\n    <string name=\"manual_monthly_expense_amount\">Manueller monatlicher Ausgabenbetrag</string>\r\n    <string name=\"enter_manual_expense_amount\">Manuellen Ausgabenbetrag eingeben</string>\r\n    <string name=\"apply_inflation\">Inflation anwenden</string>\r\n    <string name=\"annual_percentage_rate\">Jährlicher %-Satz</string>\r\n    <string name=\"create\">Erstellen</string>\r\n\r\n    <!-- CategorySummarySection -->\r\n    <string name=\"category_details\">Kategoriedetails</string>\r\n    <string name=\"main_categories\">Hauptkategorien</string>\r\n    <string name=\"sub_categories\">Unterkategorien</string>\r\n    <string name=\"expense_lowercase\">ausgabe</string>\r\n    <string name=\"see_details\">Details anzeigen</string>\r\n\r\n    <!-- CategoryPopupLines -->\r\n    <string name=\"vs_previous_month_colon\">Verglichen mit dem Vormonat:</string>\r\n    <string name=\"vs_average_colon\">Verglichen mit dem Durchschnitt:</string>\r\n\r\n    <!-- CategoryManagementScreen -->\r\n    <string name=\"add_new_main_category\">Neue Hauptkategorie hinzufügen</string>\r\n    <string name=\"add_main_category_content_desc\">Hauptkategorie hinzufügen</string>\r\n    <string name=\"category_name_hint\">Kategorienamen eingeben</string>\r\n    <string name=\"unique_category_name_note\">Wählen Sie einen eindeutigen Namen für die Kategorie</string>\r\n    <string name=\"icon_selection\">Icon-Auswahl</string>\r\n    <string name=\"color_selection\">Farbauswahl</string>\r\n    <string name=\"add_button\">Hinzufügen</string>\r\n    <string name=\"main_category\">Hauptkategorie</string>\r\n    <string name=\"select_category\">Kategorie auswählen</string>\r\n    <string name=\"subcategory_name\">Unterkategoriename</string>\r\n    <string name=\"subcategory_name_hint\">Unterkategorienamen eingeben</string>\r\n    <string name=\"unique_subcategory_name_note\">Wählen Sie einen eindeutigen Namen für die Unterkategorie</string>\r\n    <string name=\"edit_subcategory\">Unterkategorie bearbeiten</string>\r\n    <string name=\"edit_category\">Kategorie bearbeiten</string>\r\n    <string name=\"edit\">Bearbeiten</string>\r\n    <string name=\"enter_name_hint\">Namen eingeben</string>\r\n    <string name=\"delete_confirmation\">Löschbestätigung</string>\r\n    <string name=\"delete_item_confirmation\">Sind Sie sicher, dass Sie \\\"%s\\\" löschen möchten? Diese Aktion kann nicht rückgängig gemacht werden.</string>\r\n    <string name=\"this_item\">Dieses Element</string>\r\n    <string name=\"collapse_desc\">Einklappen</string>\r\n    <string name=\"expand_desc\">Erweitern</string>\r\n    <string name=\"edit_category_desc\">Kategorie bearbeiten</string>\r\n    <string name=\"delete_category_desc\">Kategorie löschen</string>\r\n    <string name=\"add_subcategory\">Unterkategorie hinzufügen</string>\r\n    <string name=\"add_subcategory_desc\">Unterkategorie hinzufügen</string>\r\n    <string name=\"edit_subcategory_desc\">Unterkategorie bearbeiten</string>\r\n    <string name=\"delete_subcategory_desc\">Unterkategorie löschen</string>\r\n    <string name=\"selected\">Ausgewählt</string>\r\n\r\n    <!-- CategoryDistributionChart -->\r\n    <string name=\"no_data\">Keine Daten</string>\r\n    <string name=\"category\">Kategorie</string>\r\n\r\n    <!-- CategoryDetailBottomSheet -->\r\n    <string name=\"sort_amount_desc\">Nach Betrag (Hoch → Niedrig)</string>\r\n    <string name=\"sort_amount_asc\">Nach Betrag (Niedrig → Hoch)</string>\r\n    <string name=\"sort_date_desc\">Nach Datum (Neu → Alt)</string>\r\n    <string name=\"sort_date_asc\">Nach Datum (Alt → Neu)</string>\r\n    <string name=\"sort_name_asc\">Nach Beschreibung (A → Z)</string>\r\n    <string name=\"sort_name_desc\">Nach Beschreibung (Z → A)</string>\r\n\r\n    <!-- SubCategory - Default subcategories -->\r\n    <!-- Food & Drink -->\r\n    <string name=\"subcategory_restaurant\">Restaurant</string>\r\n    <string name=\"subcategory_kitchen_shopping\">Kücheneinkauf</string>\r\n\r\n    <!-- Housing -->\r\n    <string name=\"subcategory_rent\">Miete</string>\r\n    <string name=\"subcategory_dues\">Nebenkosten</string>\r\n    <string name=\"subcategory_mortgage\">Hypothekenzahlung</string>\r\n    <string name=\"subcategory_electricity\">Stromrechnung</string>\r\n    <string name=\"subcategory_water\">Wasserrechnung</string>\r\n    <string name=\"subcategory_heating\">Heizung</string>\r\n    <string name=\"subcategory_internet_phone\">Internet und Telefon</string>\r\n    <string name=\"subcategory_other_bills\">Andere Rechnungen</string>\r\n    <string name=\"subcategory_general_shopping\">Allgemeiner Lebensmitteleinkauf</string>\r\n\r\n    <!-- Transportation -->\r\n    <string name=\"subcategory_fuel\">Kraftstoff</string>\r\n    <string name=\"subcategory_public_transport\">Öffentliche Verkehrsmittel</string>\r\n    <string name=\"subcategory_car_maintenance\">Autowartung</string>\r\n    <string name=\"subcategory_car_rental\">Autovermietung</string>\r\n    <string name=\"subcategory_taxi_uber\">Taxi/Uber</string>\r\n    <string name=\"subcategory_car_insurance\">Autoversicherung</string>\r\n    <string name=\"subcategory_mtv\">Kraftfahrzeugsteuer</string>\r\n    <string name=\"subcategory_parking_fees\">Parkgebühren</string>\r\n\r\n    <!-- Health -->\r\n    <string name=\"subcategory_doctor_appointment\">Arzttermin</string>\r\n    <string name=\"subcategory_medicines\">Medikamente</string>\r\n    <string name=\"subcategory_gym_membership\">Fitnessstudio-Mitgliedschaft</string>\r\n    <string name=\"subcategory_cosmetics\">Kosmetik</string>\r\n\r\n    <!-- Entertainment -->\r\n    <string name=\"subcategory_cinema_theater\">Kino und Theater</string>\r\n    <string name=\"subcategory_concerts_events\">Konzerte und Veranstaltungen</string>\r\n    <string name=\"subcategory_subscriptions\">Abonnements</string>\r\n    <string name=\"subcategory_books_magazines\">Bücher und Zeitschriften</string>\r\n    <string name=\"subcategory_travel_vacation\">Reisen und Urlaub</string>\r\n    <string name=\"subcategory_games_apps\">Spiele und Apps</string>\r\n\r\n    <!-- Education -->\r\n    <string name=\"subcategory_course_fees\">Kursgebühren</string>\r\n    <string name=\"subcategory_education_materials\">Bildungsmaterialien</string>\r\n    <string name=\"subcategory_seminars\">Seminare</string>\r\n    <string name=\"subcategory_online_courses\">Online-Kurse</string>\r\n\r\n    <!-- Shopping -->\r\n    <string name=\"subcategory_electronics\">Elektronik</string>\r\n    <string name=\"subcategory_clothing\">Kleidung</string>\r\n    <string name=\"subcategory_home_goods\">Haushaltswaren</string>\r\n    <string name=\"subcategory_gifts\">Geschenke</string>\r\n    <string name=\"subcategory_perfume\">Parfüm</string>\r\n\r\n    <!-- Pets -->\r\n    <string name=\"subcategory_pet_food_toys\">Futter und Spielzeug</string>\r\n    <string name=\"subcategory_vet_services\">Tierarztdienste</string>\r\n    <string name=\"subcategory_pet_insurance\">Haustierversicherung</string>\r\n\r\n    <!-- Work -->\r\n    <string name=\"subcategory_work_meals\">Arbeitsessen</string>\r\n    <string name=\"subcategory_office_supplies\">Büromaterial</string>\r\n    <string name=\"subcategory_business_travel\">Geschäftsreisen</string>\r\n    <string name=\"subcategory_work_education\">Schulungen und Seminare</string>\r\n    <string name=\"subcategory_freelance_payments\">Freiberufliche Arbeitszahlungen</string>\r\n\r\n    <!-- Tax -->\r\n    <string name=\"subcategory_tax_payments\">Steuerzahlungen</string>\r\n\r\n    <!-- Others -->\r\n    <string name=\"subcategory_other_expenses\">Andere Ausgaben</string>\r\n\r\n    <!-- Category - Default categories -->\r\n    <string name=\"category_food\">Essen und Trinken</string>\r\n    <string name=\"category_housing\">Wohnen</string>\r\n    <string name=\"category_transportation\">Transport</string>\r\n    <string name=\"category_health\">Gesundheit und Körperpflege</string>\r\n    <string name=\"category_entertainment\">Unterhaltung und Hobbys</string>\r\n    <string name=\"category_education\">Bildung</string>\r\n    <string name=\"category_shopping\">Einkaufen</string>\r\n    <string name=\"category_pets\">Haustiere</string>\r\n    <string name=\"category_work\">Arbeit und berufliche Ausgaben</string>\r\n    <string name=\"category_tax\">Steuer- und Rechtskosten</string>\r\n    <string name=\"category_donations\">Spenden und Hilfe</string>\r\n    <string name=\"category_others\">Andere Zahlungen</string>\r\n\r\n    <!-- PlanningUtils - Plan status and validation -->\r\n    <string name=\"plan_status_not_started\">Nicht begonnen</string>\r\n    <string name=\"plan_status_completed\">Abgeschlossen</string>\r\n    <string name=\"plan_status_active\">Aktiv</string>\r\n    <string name=\"validation_plan_name_empty\">Planname darf nicht leer sein</string>\r\n    <string name=\"validation_monthly_income_positive\">Monatseinkommen muss größer als 0 sein</string>\r\n    <string name=\"validation_duration_positive\">Plandauer muss größer als 0 sein</string>\r\n    <string name=\"validation_duration_max_10_years\">Plandauer darf nicht mehr als 10 Jahre betragen</string>\r\n    <string name=\"validation_inflation_rate_range\">Inflationsrate muss zwischen -50%% und 100%% liegen</string>\r\n    <string name=\"duration_3_months\">3 Monate</string>\r\n    <string name=\"duration_6_months\">6 Monate</string>\r\n    <string name=\"duration_1_year\">1 Jahr</string>\r\n    <string name=\"duration_1_5_years\">1,5 Jahre</string>\r\n    <string name=\"duration_2_years\">2 Jahre</string>\r\n    <string name=\"duration_3_years\">3 Jahre</string>\r\n    <string name=\"duration_5_years\">5 Jahre</string>\r\n\r\n    <!-- PlanningViewModel - Error messages -->\r\n    <string name=\"error_loading_plan\">Fehler beim Laden des Plans: %s</string>\r\n    <string name=\"error_creating_plan\">Fehler beim Erstellen des Plans: %s</string>\r\n    <string name=\"error_deleting_plan\">Fehler beim Löschen des Plans: %s</string>\r\n    <string name=\"error_updating_expense_data\">Fehler beim Aktualisieren der Ausgabendaten: %s</string>\r\n    <string name=\"error_updating_plan_calculations\">Fehler beim Aktualisieren der Planberechnungen: %s</string>\r\n    <string name=\"error_saving_changes\">Fehler beim Speichern der Änderungen: %s</string>\r\n    <!-- ExpensesScreen - Empty state messages -->\r\n    <string name=\"no_search_results_found\">Keine Suchergebnisse gefunden</string>\r\n    <string name=\"no_expenses_yet\">Noch keine Ausgaben</string>\r\n    <string name=\"no_expenses_today\">Heute keine Ausgaben</string>\r\n    <string name=\"no_search_results_description\">Keine Ergebnisse für \\\"%1$s\\\" gefunden. Versuchen Sie einen anderen Suchbegriff.</string>\r\n    <string name=\"first_expense_hint\">Drücken Sie die + Taste, um Ihre erste Ausgabe hinzuzufügen</string>\r\n    <string name=\"add_expense_for_day_hint\">Drücken Sie die + Taste, um Ausgaben für diesen Tag hinzuzufügen</string>\r\n    <string name=\"calendar_tab\">Kalender</string>\r\n    <string name=\"expenses_tab\">Ausgaben</string>\r\n</resources>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/values-de/strings.xml b/app/src/main/res/values-de/strings.xml
--- a/app/src/main/res/values-de/strings.xml	(revision 704fb63dbd103d83a77a5d2f59944f4c74685798)
+++ b/app/src/main/res/values-de/strings.xml	(date 1759316126919)
@@ -364,4 +364,19 @@
     <string name="add_expense_for_day_hint">Drücken Sie die + Taste, um Ausgaben für diesen Tag hinzuzufügen</string>
     <string name="calendar_tab">Kalender</string>
     <string name="expenses_tab">Ausgaben</string>
+    <!-- Billing Page -->
+    <string name="no_add_text">I don\'t want to bombard you with silly ads,
+        and I want you to be able to access all features without needing the premium version.
+        But I need income to keep developing. If you like my app and want to support me,
+        feel free to tip a cup of tea (Prices aren\'t affected by inflation here) :).</string>
+    <string name="buy_water">tip a water</string>
+    <string name="buy_bagel">tip a bagel</string>
+    <string name="buy_tea">tip a tea</string>
+    <string name="buy_coffee">tip a coffee</string>
+    <string name="buy_wrap">tip a wrap</string>
+    <string name="buy_burger">tip a burger</string>
+    <string name="buy_doner">tip a doner</string>
+    <string name="max_donation">suprise me</string>
+    <string name="recurring_total">"Total: "</string>
+    <string name="recurring_remaining">"Remaining: "</string>
 </resources>
\ No newline at end of file
Index: app/src/main/res/values-fr/strings.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<resources>\r\n    <string name=\"app_name\">Suivi des Dépenses</string>\r\n    <string name=\"general_settings\">Paramètres Généraux</string>\r\n    <string name=\"categories\">Catégories</string>\r\n    <string name=\"default_currency\">Devise par Défaut</string>\r\n    <string name=\"currency_description\">Devise par défaut à utiliser pour les nouvelles dépenses</string>\r\n    <string name=\"daily_spending_limit\">Limite de Dépenses Quotidiennes</string>\r\n    <string name=\"enter_daily_limit\">Saisir la limite quotidienne</string>\r\n    <string name=\"daily_limit_description\">Votre limite de dépenses quotidiennes. Aucune limite appliquée si laissé vide</string>\r\n    <string name=\"monthly_spending_limit\">Limite de Dépenses Mensuelles</string>\r\n    <string name=\"enter_monthly_limit\">Saisir la limite mensuelle</string>\r\n    <string name=\"monthly_limit_description\">Votre limite totale de dépenses mensuelles. L\\'anneau de progression est affiché basé sur cette valeur</string>\r\n    <string name=\"theme\">Thème</string>\r\n    <string name=\"dark_theme\">Thème Sombre</string>\r\n    <string name=\"light_theme\">Thème Clair</string>\r\n    <string name=\"theme_description\">Changer l\\'apparence de l\\'application</string>\r\n    <string name=\"cancel\">Annuler</string>\r\n    <string name=\"save\">Enregistrer</string>\r\n    <!-- RecurringExpensesScreen -->\r\n    <string name=\"recurring_expenses\">Dépenses Récurrentes</string>\r\n    <string name=\"sort\">Trier</string>\r\n    <string name=\"search\">Rechercher</string>\r\n    <string name=\"back\">Retour</string>\r\n    <string name=\"amount_high_to_low\">Montant : Élevé à Faible</string>\r\n    <string name=\"amount_low_to_high\">Montant : Faible à Élevé</string>\r\n    <string name=\"description_a_to_z\">Description : A-Z</string>\r\n    <string name=\"description_z_to_a\">Description : Z-A</string>\r\n    <string name=\"category_a_to_z\">Catégorie : A-Z</string>\r\n    <string name=\"category_z_to_a\">Catégorie : Z-A</string>\r\n    <string name=\"end_date_recurring\">Fin : %s</string>\r\n    <string name=\"search_placeholder\">Rechercher par description, montant ou catégorie...</string>\r\n    <string name=\"no_search_results\">Aucun résultat de recherche trouvé</string>\r\n    <string name=\"search_no_results_description\">Aucun résultat trouvé pour \\\"%1$s\\\". Essayez un terme de recherche différent.</string>\r\n    <string name=\"no_recurring_expenses\">Aucune dépense récurrente pour le moment</string>\r\n    <string name=\"recurring_expenses_hint\">Appuyez sur le bouton + pour ajouter des dépenses récurrentes</string>\r\n    <string name=\"results_found\">%d résultats trouvés</string>\r\n    <string name=\"daily\">Quotidien</string>\r\n    <string name=\"weekdays\">Jours ouvrables</string>\r\n    <string name=\"weekly\">Hebdomadaire</string>\r\n    <string name=\"monthly\">Mensuel</string>\r\n    <string name=\"exchange_rate\">Taux de Change : %s</string>\r\n    <string name=\"delete\">Supprimer</string>\r\n    <string name=\"amount\">Montant</string>\r\n    <string name=\"description\">Description</string>\r\n    <string name=\"exchange_rate_field\">Taux de Change</string>\r\n    <string name=\"select_date\">Sélectionner la Date</string>\r\n    <string name=\"delete_recurring_expense\">Supprimer la Dépense Récurrente</string>\r\n    <string name=\"delete_recurring_confirmation\">Êtes-vous sûr de vouloir supprimer cette dépense récurrente à partir d\\'aujourd\\'hui ? Cette action ne peut pas être annulée.</string>\r\n    <string name=\"ok\">OK</string>\r\n    <!-- PlanningScreen -->\r\n    <string name=\"financial_planning\">Planification Financière</string>\r\n    <string name=\"planning_description\">Créez et suivez vos plans futurs</string>\r\n    <string name=\"no_plans_yet\">Aucun plan pour le moment</string>\r\n    <string name=\"create_first_plan\">Appuyez sur le bouton + pour créer votre premier plan financier</string>\r\n    <string name=\"add_plan\">Ajouter un Plan</string>\r\n    <string name=\"delete_plan\">Supprimer le Plan</string>\r\n    <string name=\"delete_plan_confirmation\">Êtes-vous sûr de vouloir supprimer le plan \\\"%1$s\\\" ? Cette action ne peut pas être annulée.</string>\r\n\r\n    <!-- ExpensesScreen -->\r\n    <string name=\"results_count\">%d résultats</string>\r\n    <string name=\"search_expenses_placeholder\">Rechercher par description, montant ou catégorie...</string>\r\n    <string name=\"monthly_limit_exceeded\">⚠\uFE0F Vous avez dépassé votre limite de dépenses mensuelles !</string>\r\n    <string name=\"time_newest_first\">Date : Plus Récent d\\'Abord</string>\r\n    <string name=\"time_oldest_first\">Date : Plus Ancien d\\'Abord</string>\r\n\r\n    <!-- AnalysisScreen -->\r\n    <string name=\"current_period_total\">Total des Dépenses de la Période Actuelle</string>\r\n    <string name=\"vs_previous_month\">Comparé au mois précédent</string>\r\n    <string name=\"vs_6_month_average\">Comparé à la moyenne sur 6 mois</string>\r\n    <string name=\"no_expenses_this_period\">Aucune dépense cette période pour le moment</string>\r\n    <string name=\"analysis_will_appear\">L\\'analyse apparaîtra ici lorsque vous ajouterez des dépenses</string>\r\n    <string name=\"previous_month\">Mois précédent</string>\r\n    <string name=\"next_month\">Mois suivant</string>\r\n    <string name=\"select_date_range\">Sélectionner la plage de dates</string>\r\n    <string name=\"fixed_expenses\">Dépenses Fixes</string>\r\n    <string name=\"recurring_expenses_description\">Dépenses qui continueront pendant 3+ mois</string>\r\n    <string name=\"recurring_expenses_cd\">Dépenses récurrentes</string>\r\n    <string name=\"pick_date_range\">Choisir la plage de dates</string>\r\n\r\n    <!-- AddExpenseScreen -->\r\n    <string name=\"enter_expense_details\">Saisir les détails de la dépense</string>\r\n    <string name=\"expense_amount_placeholder\">0,00</string>\r\n    <string name=\"search_placeholder_category\">rechercher...</string>\r\n    <string name=\"description_optional\">Description (Optionnel)</string>\r\n    <string name=\"add_description_placeholder\">Ajouter une description...</string>\r\n    <string name=\"recurrence_type\">Type de Récurrence</string>\r\n    <string name=\"end_date\">Date de Fin</string>\r\n    <string name=\"exchange_rate_label\">Taux de Change (1 %1$s = ? %2$s)</string>\r\n    <string name=\"exchange_rate_example\">ex : 0,035 (1 %1$s = 0,035 %2$s)</string>\r\n    <string name=\"exchange_rate_note\">Ce taux sera utilisé pour les calculs de progression</string>\r\n    <string name=\"add_expense\">Ajouter une Dépense</string>\r\n    <string name=\"update_expense\">Mettre à Jour la Dépense</string>\r\n    <string name=\"none\">Aucun</string>\r\n    <string name=\"one_time\">Une fois</string>\r\n    <string name=\"every_day\">Tous les jours</string>\r\n    <string name=\"weekdays_only\">Jours ouvrables seulement</string>\r\n    <string name=\"once_per_week\">Une fois par semaine</string>\r\n    <string name=\"once_per_month\">Une fois par mois</string>\r\n    <string name=\"edit_expense\">Modifier la Dépense</string>\r\n    <string name=\"new_expense\">Nouvelle Dépense</string>\r\n    <string name=\"selectCategory\">Sélection de catégorie</string>\r\n    <string name=\"single_time\">Une seule fois</string>\r\n    <string name=\"okay\">D\\'accord</string>\r\n\r\n    <!-- SubCategoryDetailBottomSheet -->\r\n    <string name=\"parent_category\">Catégorie Parent</string>\r\n    <string name=\"total_amount\">Montant Total</string>\r\n    <string name=\"expense_count\">Nombre de Dépenses</string>\r\n    <string name=\"average\">Moyenne</string>\r\n    <string name=\"expenses\">Dépenses</string>\r\n    <string name=\"recurring_label\">Récurrent</string>\r\n\r\n    <!-- ProgressRingComponent -->\r\n    <string name=\"monthly_label\">Mensuel</string>\r\n    <string name=\"daily_label\">Quotidien</string>\r\n\r\n    <!-- PlanDetailBottomSheet -->\r\n    <string name=\"update_expense_data\">Mettre à Jour les Données de Dépenses</string>\r\n    <string name=\"update_expense_data_description\">Recalcule les mois actuels et futurs avec des données mises à jour</string>\r\n    <string name=\"total_net_value\">Valeur Nette Totale</string>\r\n    <string name=\"month\">Mois</string>\r\n    <string name=\"income\">Revenus</string>\r\n    <string name=\"expense\">Dépense</string>\r\n    <string name=\"net\">Net</string>\r\n    <string name=\"total\">Total</string>\r\n\r\n    <!-- PlanCard -->\r\n    <string name=\"avg_monthly_income\">Revenus Mensuels Moy.</string>\r\n    <string name=\"avg_monthly_expense\">Dépenses Mensuelles Moy.</string>\r\n    <string name=\"current_net\">Net Actuel</string>\r\n    <string name=\"target_net\">Net Cible</string>\r\n\r\n    <!-- MonthlyLineChart -->\r\n    <string name=\"all\">Tous</string>\r\n    <string name=\"one_time_expense\">Dépense Ponctuelle</string>\r\n    <string name=\"period_expense_trend\">Tendance des Dépenses de la Période</string>\r\n    <string name=\"expand\">Développer</string>\r\n    <string name=\"collapse\">Réduire</string>\r\n    <string name=\"no_data_found\">Aucune donnée trouvée</string>\r\n    <string name=\"highest\">Le plus élevé</string>\r\n\r\n    <!-- MonthlyExpensesView -->\r\n    <string name=\"no_expenses_this_month\">Aucune dépense ce mois</string>\r\n    <string name=\"add_expense_for_month\">Appuyez sur le bouton + sur l\\'écran principal pour ajouter des dépenses pour ce mois</string>\r\n\r\n    <!-- MonthlyCalendarView - Day headers -->\r\n    <string name=\"monday_short\">L</string>\r\n    <string name=\"tuesday_short\">M</string>\r\n    <string name=\"wednesday_short\">M</string>\r\n    <string name=\"thursday_short\">J</string>\r\n    <string name=\"friday_short\">V</string>\r\n    <string name=\"saturday_short\">S</string>\r\n    <string name=\"sunday_short\">D</string>\r\n\r\n    <!-- MonthlyAnalysisPieChart -->\r\n    <string name=\"category_distribution\">Répartition par Catégories</string>\r\n    <string name=\"tap_chart_to_select_category\">Appuyez sur le graphique pour sélectionner une catégorie</string>\r\n\r\n    <!-- ExpenseRowView -->\r\n    <string name=\"unknown\">Inconnu</string>\r\n    <string name=\"delete_expense\">Supprimer la Dépense</string>\r\n    <string name=\"delete_expense_confirmation\">Êtes-vous sûr de vouloir supprimer cette dépense ? Cette action ne peut pas être annulée.</string>\r\n\r\n    <!-- DailyCategoryDetailBottomSheet -->\r\n    <string name=\"amount_high_to_low_arrow\">Montant (Élevé → Faible)</string>\r\n    <string name=\"amount_low_to_high_arrow\">Montant (Faible → Élevé)</string>\r\n    <string name=\"time_newest_first_arrow\">Temps (Nouveau → Ancien)</string>\r\n    <string name=\"time_oldest_first_arrow\">Temps (Ancien → Nouveau)</string>\r\n    <string name=\"description_a_to_z_arrow\">Description (A → Z)</string>\r\n    <string name=\"description_z_to_a_arrow\">Description (Z → A)</string>\r\n    <string name=\"total_spending\">Dépenses Totales</string>\r\n    <string name=\"no_expenses_in_category\">Aucune dépense trouvée dans cette catégorie</string>\r\n    <string name=\"expense_singular\">Dépense</string>\r\n\r\n    <!-- CreatePlanDialog -->\r\n    <string name=\"create_new_plan\">Créer un Nouveau Plan</string>\r\n    <string name=\"plan_name\">Nom du Plan</string>\r\n    <string name=\"plan_name_example\">ex : Plan d\\'Épargne 2024</string>\r\n    <string name=\"plan_duration\">Durée du Plan</string>\r\n    <string name=\"apply_interest_to_savings\">Appliquer des Intérêts (à l\\'Épargne)</string>\r\n    <string name=\"simple_interest\">Intérêts Simples</string>\r\n    <string name=\"compound_interest\">Intérêts Composés</string>\r\n    <string name=\"annual_interest_rate\">Taux d\\'intérêt annuel %</string>\r\n    <string name=\"interest_applied_to_positive_savings\">Les intérêts sont appliqués à l\\'épargne positive</string>\r\n    <string name=\"interest_type\">Type d\\'Intérêt</string>\r\n    <string name=\"monthly_income_currency\">Revenus Mensuels (%s)</string>\r\n    <string name=\"use_app_expense_data\">Utiliser les données de dépenses de l\\'application</string>\r\n    <string name=\"monthly_expenses_currency\">Dépenses Mensuelles (%s)</string>\r\n    <string name=\"manual_monthly_expense_amount\">Montant manuel des dépenses mensuelles</string>\r\n    <string name=\"enter_manual_expense_amount\">Saisir le montant manuel des dépenses</string>\r\n    <string name=\"apply_inflation\">Appliquer l\\'Inflation</string>\r\n    <string name=\"annual_percentage_rate\">Taux annuel %</string>\r\n    <string name=\"create\">Créer</string>\r\n\r\n    <!-- CategorySummarySection -->\r\n    <string name=\"category_details\">Détails de la Catégorie</string>\r\n    <string name=\"main_categories\">Catégories Principales</string>\r\n    <string name=\"sub_categories\">Sous-Catégories</string>\r\n    <string name=\"expense_lowercase\">dépense</string>\r\n    <string name=\"see_details\">Voir les détails</string>\r\n\r\n    <!-- CategoryPopupLines -->\r\n    <string name=\"vs_previous_month_colon\">Comparé au mois précédent :</string>\r\n    <string name=\"vs_average_colon\">Comparé à la moyenne :</string>\r\n\r\n    <!-- CategoryManagementScreen -->\r\n    <string name=\"add_new_main_category\">Ajouter une Nouvelle Catégorie Principale</string>\r\n    <string name=\"add_main_category_content_desc\">Ajouter Catégorie Principale</string>\r\n    <string name=\"category_name_hint\">Saisir le nom de la catégorie</string>\r\n    <string name=\"unique_category_name_note\">Choisissez un nom unique pour la catégorie</string>\r\n    <string name=\"icon_selection\">Sélection d\\'Icône</string>\r\n    <string name=\"color_selection\">Sélection de Couleur</string>\r\n    <string name=\"add_button\">Ajouter</string>\r\n    <string name=\"main_category\">Catégorie Principale</string>\r\n    <string name=\"select_category\">Sélectionner une catégorie</string>\r\n    <string name=\"subcategory_name\">Nom de la Sous-Catégorie</string>\r\n    <string name=\"subcategory_name_hint\">Saisir le nom de la sous-catégorie</string>\r\n    <string name=\"unique_subcategory_name_note\">Choisissez un nom unique pour la sous-catégorie</string>\r\n    <string name=\"edit_subcategory\">Modifier la Sous-Catégorie</string>\r\n    <string name=\"edit_category\">Modifier la Catégorie</string>\r\n    <string name=\"edit\">Modifier</string>\r\n    <string name=\"enter_name_hint\">Saisir le nom</string>\r\n    <string name=\"delete_confirmation\">Confirmation de Suppression</string>\r\n    <string name=\"delete_item_confirmation\">Êtes-vous sûr de vouloir supprimer \\\"%s\\\" ? Cette action ne peut pas être annulée.</string>\r\n    <string name=\"this_item\">Cet élément</string>\r\n    <string name=\"collapse_desc\">Réduire</string>\r\n    <string name=\"expand_desc\">Développer</string>\r\n    <string name=\"edit_category_desc\">Modifier la Catégorie</string>\r\n    <string name=\"delete_category_desc\">Supprimer la Catégorie</string>\r\n    <string name=\"add_subcategory\">Ajouter une Sous-Catégorie</string>\r\n    <string name=\"add_subcategory_desc\">Ajouter Sous-Catégorie</string>\r\n    <string name=\"edit_subcategory_desc\">Modifier la Sous-Catégorie</string>\r\n    <string name=\"delete_subcategory_desc\">Supprimer la Sous-Catégorie</string>\r\n    <string name=\"selected\">Sélectionné</string>\r\n\r\n    <!-- CategoryDistributionChart -->\r\n    <string name=\"no_data\">Aucune donnée</string>\r\n    <string name=\"category\">Catégorie</string>\r\n\r\n    <!-- CategoryDetailBottomSheet -->\r\n    <string name=\"sort_amount_desc\">Par Montant (Élevé → Faible)</string>\r\n    <string name=\"sort_amount_asc\">Par Montant (Faible → Élevé)</string>\r\n    <string name=\"sort_date_desc\">Par Date (Nouveau → Ancien)</string>\r\n    <string name=\"sort_date_asc\">Par Date (Ancien → Nouveau)</string>\r\n    <string name=\"sort_name_asc\">Par Description (A → Z)</string>\r\n    <string name=\"sort_name_desc\">Par Description (Z → A)</string>\r\n\r\n    <!-- SubCategory - Default subcategories -->\r\n    <!-- Food & Drink -->\r\n    <string name=\"subcategory_restaurant\">Restaurant</string>\r\n    <string name=\"subcategory_kitchen_shopping\">Courses de cuisine</string>\r\n\r\n    <!-- Housing -->\r\n    <string name=\"subcategory_rent\">Loyer</string>\r\n    <string name=\"subcategory_dues\">Charges</string>\r\n    <string name=\"subcategory_mortgage\">Paiement hypothécaire</string>\r\n    <string name=\"subcategory_electricity\">Facture d\\'électricité</string>\r\n    <string name=\"subcategory_water\">Facture d\\'eau</string>\r\n    <string name=\"subcategory_heating\">Chauffage</string>\r\n    <string name=\"subcategory_internet_phone\">Internet et téléphone</string>\r\n    <string name=\"subcategory_other_bills\">Autres Factures</string>\r\n    <string name=\"subcategory_general_shopping\">Courses générales</string>\r\n\r\n    <!-- Transportation -->\r\n    <string name=\"subcategory_fuel\">Carburant</string>\r\n    <string name=\"subcategory_public_transport\">Transport public</string>\r\n    <string name=\"subcategory_car_maintenance\">Entretien automobile</string>\r\n    <string name=\"subcategory_car_rental\">Location de voiture</string>\r\n    <string name=\"subcategory_taxi_uber\">Taxi/Uber</string>\r\n    <string name=\"subcategory_car_insurance\">Assurance automobile</string>\r\n    <string name=\"subcategory_mtv\">Taxe véhicule</string>\r\n    <string name=\"subcategory_parking_fees\">Frais de stationnement</string>\r\n\r\n    <!-- Health -->\r\n    <string name=\"subcategory_doctor_appointment\">Rendez-vous médical</string>\r\n    <string name=\"subcategory_medicines\">Médicaments</string>\r\n    <string name=\"subcategory_gym_membership\">Abonnement salle de sport</string>\r\n    <string name=\"subcategory_cosmetics\">Cosmétiques</string>\r\n\r\n    <!-- Entertainment -->\r\n    <string name=\"subcategory_cinema_theater\">Cinéma et théâtre</string>\r\n    <string name=\"subcategory_concerts_events\">Concerts et événements</string>\r\n    <string name=\"subcategory_subscriptions\">Abonnements</string>\r\n    <string name=\"subcategory_books_magazines\">Livres et magazines</string>\r\n    <string name=\"subcategory_travel_vacation\">Voyages et vacances</string>\r\n    <string name=\"subcategory_games_apps\">Jeux et applications</string>\r\n\r\n    <!-- Education -->\r\n    <string name=\"subcategory_course_fees\">Frais de cours</string>\r\n    <string name=\"subcategory_education_materials\">Matériel éducatif</string>\r\n    <string name=\"subcategory_seminars\">Séminaires</string>\r\n    <string name=\"subcategory_online_courses\">Cours en ligne</string>\r\n\r\n    <!-- Shopping -->\r\n    <string name=\"subcategory_electronics\">Électronique</string>\r\n    <string name=\"subcategory_clothing\">Vêtements</string>\r\n    <string name=\"subcategory_home_goods\">Articles de maison</string>\r\n    <string name=\"subcategory_gifts\">Cadeaux</string>\r\n    <string name=\"subcategory_perfume\">Parfum</string>\r\n\r\n    <!-- Pets -->\r\n    <string name=\"subcategory_pet_food_toys\">Nourriture et jouets</string>\r\n    <string name=\"subcategory_vet_services\">Services vétérinaires</string>\r\n    <string name=\"subcategory_pet_insurance\">Assurance animaux</string>\r\n\r\n    <!-- Work -->\r\n    <string name=\"subcategory_work_meals\">Repas de travail</string>\r\n    <string name=\"subcategory_office_supplies\">Fournitures de bureau</string>\r\n    <string name=\"subcategory_business_travel\">Voyages d\\'affaires</string>\r\n    <string name=\"subcategory_work_education\">Formation et séminaires</string>\r\n    <string name=\"subcategory_freelance_payments\">Paiements travail indépendant</string>\r\n\r\n    <!-- Tax -->\r\n    <string name=\"subcategory_tax_payments\">Paiements d\\'impôts</string>\r\n\r\n    <!-- Others -->\r\n    <string name=\"subcategory_other_expenses\">Autres Dépenses</string>\r\n\r\n    <!-- ExpensesScreen - Empty state messages -->\r\n    <string name=\"no_search_results_found\">Aucun résultat de recherche trouvé</string>\r\n    <string name=\"no_expenses_yet\">Aucune dépense pour le moment</string>\r\n    <string name=\"no_expenses_today\">Aucune dépense aujourd\\'hui</string>\r\n    <string name=\"no_search_results_description\">Aucun résultat trouvé pour \\\"%1$s\\\". Essayez un terme de recherche différent.</string>\r\n    <string name=\"first_expense_hint\">Appuyez sur le bouton + pour ajouter votre première dépense</string>\r\n    <string name=\"add_expense_for_day_hint\">Appuyez sur le bouton + pour ajouter des dépenses pour cette journée</string>\r\n    <string name=\"calendar_tab\">Calendrier</string>\r\n    <string name=\"expenses_tab\">Dépenses</string>\r\n\r\n    <!-- PlanningUtils - Plan status and validation -->\r\n    <string name=\"plan_status_not_started\">Non commencé</string>\r\n    <string name=\"plan_status_completed\">Terminé</string>\r\n    <string name=\"plan_status_active\">Actif</string>\r\n    <string name=\"validation_plan_name_empty\">Le nom du plan ne peut pas être vide</string>\r\n    <string name=\"validation_monthly_income_positive\">Les revenus mensuels doivent être supérieurs à 0</string>\r\n    <string name=\"validation_duration_positive\">La durée du plan doit être supérieure à 0</string>\r\n    <string name=\"validation_duration_max_10_years\">La durée du plan ne peut pas dépasser 10 ans</string>\r\n    <string name=\"validation_inflation_rate_range\">Le taux d\\'inflation doit être entre -50%% et 100%%</string>\r\n    <string name=\"duration_3_months\">3 Mois</string>\r\n    <string name=\"duration_6_months\">6 Mois</string>\r\n    <string name=\"duration_1_year\">1 An</string>\r\n    <string name=\"duration_1_5_years\">1,5 An</string>\r\n    <string name=\"duration_2_years\">2 Ans</string>\r\n    <string name=\"duration_3_years\">3 Ans</string>\r\n    <string name=\"duration_5_years\">5 Ans</string>\r\n\r\n    <!-- PlanningViewModel - Error messages -->\r\n    <string name=\"error_loading_plan\">Erreur lors du chargement du plan : %s</string>\r\n    <string name=\"error_creating_plan\">Erreur lors de la création du plan : %s</string>\r\n    <string name=\"error_deleting_plan\">Erreur lors de la suppression du plan : %s</string>\r\n    <string name=\"error_updating_expense_data\">Erreur lors de la mise à jour des données de dépenses : %s</string>\r\n    <string name=\"error_updating_plan_calculations\">Erreur lors de la mise à jour des calculs du plan : %s</string>\r\n    <string name=\"error_saving_changes\">Erreur lors de l\\'enregistrement des modifications : %s</string>\r\n\r\n    <!-- Category - Default categories -->\r\n    <string name=\"category_food\">Nourriture et Boisson</string>\r\n    <string name=\"category_housing\">Logement</string>\r\n    <string name=\"category_transportation\">Transport</string>\r\n    <string name=\"category_health\">Santé et Soins Personnels</string>\r\n    <string name=\"category_entertainment\">Divertissement et Loisirs</string>\r\n    <string name=\"category_education\">Éducation</string>\r\n    <string name=\"category_shopping\">Achats</string>\r\n    <string name=\"category_pets\">Animaux de Compagnie</string>\r\n    <string name=\"category_work\">Travail et Dépenses Professionnelles</string>\r\n    <string name=\"category_tax\">Impôts et Dépenses Légales</string>\r\n    <string name=\"category_donations\">Dons et Aide</string>\r\n    <string name=\"category_others\">Autres Paiements</string>\r\n</resources>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/values-fr/strings.xml b/app/src/main/res/values-fr/strings.xml
--- a/app/src/main/res/values-fr/strings.xml	(revision 704fb63dbd103d83a77a5d2f59944f4c74685798)
+++ b/app/src/main/res/values-fr/strings.xml	(date 1759316126935)
@@ -365,4 +365,19 @@
     <string name="category_tax">Impôts et Dépenses Légales</string>
     <string name="category_donations">Dons et Aide</string>
     <string name="category_others">Autres Paiements</string>
+    <!-- Billing Page -->
+    <string name="no_add_text">I don\'t want to bombard you with silly ads,
+        and I want you to be able to access all features without needing the premium version.
+        But I need income to keep developing. If you like my app and want to support me,
+        feel free to tip a cup of tea (Prices aren\'t affected by inflation here) :).</string>
+    <string name="buy_water">tip a water</string>
+    <string name="buy_bagel">tip a bagel</string>
+    <string name="buy_tea">tip a tea</string>
+    <string name="buy_coffee">tip a coffee</string>
+    <string name="buy_wrap">tip a wrap</string>
+    <string name="buy_burger">tip a burger</string>
+    <string name="buy_doner">tip a doner</string>
+    <string name="max_donation">suprise me</string>
+    <string name="recurring_total">"Total: "</string>
+    <string name="recurring_remaining">"Remaining: "</string>
 </resources>
\ No newline at end of file
Index: app/src/main/res/values-ru/strings.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<resources>\r\n    <string name=\"app_name\">Учёт Расходов</string>\r\n    <string name=\"general_settings\">Общие Настройки</string>\r\n    <string name=\"categories\">Категории</string>\r\n    <string name=\"default_currency\">Валюта по Умолчанию</string>\r\n    <string name=\"currency_description\">Валюта по умолчанию для новых расходов</string>\r\n    <string name=\"daily_spending_limit\">Дневной Лимит Расходов</string>\r\n    <string name=\"enter_daily_limit\">Введите дневной лимит</string>\r\n    <string name=\"daily_limit_description\">Ваш дневной лимит расходов. Лимит не применяется, если оставить пустым</string>\r\n    <string name=\"monthly_spending_limit\">Месячный Лимит Расходов</string>\r\n    <string name=\"enter_monthly_limit\">Введите месячный лимит</string>\r\n    <string name=\"monthly_limit_description\">Ваш общий месячный лимит расходов. Кольцо прогресса отображается на основе этого значения</string>\r\n    <string name=\"theme\">Тема</string>\r\n    <string name=\"dark_theme\">Тёмная Тема</string>\r\n    <string name=\"light_theme\">Светлая Тема</string>\r\n    <string name=\"theme_description\">Изменить внешний вид приложения</string>\r\n    <string name=\"cancel\">Отмена</string>\r\n    <string name=\"save\">Сохранить</string>\r\n    <!-- RecurringExpensesScreen -->\r\n    <string name=\"recurring_expenses\">Повторяющиеся Расходы</string>\r\n    <string name=\"sort\">Сортировать</string>\r\n    <string name=\"search\">Поиск</string>\r\n    <string name=\"back\">Назад</string>\r\n    <string name=\"amount_high_to_low\">Сумма: По Убыванию</string>\r\n    <string name=\"amount_low_to_high\">Сумма: По Возрастанию</string>\r\n    <string name=\"description_a_to_z\">Описание: А-Я</string>\r\n    <string name=\"description_z_to_a\">Описание: Я-А</string>\r\n    <string name=\"category_a_to_z\">Категория: А-Я</string>\r\n    <string name=\"category_z_to_a\">Категория: Я-А</string>\r\n    <string name=\"end_date_recurring\">Конец: %s</string>\r\n    <string name=\"search_placeholder\">Поиск по описанию, сумме или категории...</string>\r\n    <string name=\"no_search_results\">Результаты поиска не найдены</string>\r\n    <string name=\"search_no_results_description\">Не найдено результатов для \\\"%1$s\\\". Попробуйте другой поисковый запрос.</string>\r\n    <string name=\"no_recurring_expenses\">Пока нет повторяющихся расходов</string>\r\n    <string name=\"recurring_expenses_hint\">Нажмите кнопку + для добавления повторяющихся расходов</string>\r\n    <string name=\"results_found\">Найдено %d результатов</string>\r\n    <string name=\"daily\">Ежедневно</string>\r\n    <string name=\"weekdays\">Рабочие дни</string>\r\n    <string name=\"weekly\">Еженедельно</string>\r\n    <string name=\"monthly\">Ежемесячно</string>\r\n    <string name=\"exchange_rate\">Обменный Курс: %s</string>\r\n    <string name=\"delete\">Удалить</string>\r\n    <string name=\"amount\">Сумма</string>\r\n    <string name=\"description\">Описание</string>\r\n    <string name=\"exchange_rate_field\">Обменный Курс</string>\r\n    <string name=\"select_date\">Выбрать Дату</string>\r\n    <string name=\"delete_recurring_expense\">Удалить Повторяющийся Расход</string>\r\n    <string name=\"delete_recurring_confirmation\">Вы уверены, что хотите удалить этот повторяющийся расход с сегодняшнего дня? Это действие нельзя отменить.</string>\r\n    <string name=\"ok\">OK</string>\r\n    <!-- PlanningScreen -->\r\n    <string name=\"financial_planning\">Финансовое Планирование</string>\r\n    <string name=\"planning_description\">Создавайте и отслеживайте ваши будущие планы</string>\r\n    <string name=\"no_plans_yet\">Пока нет планов</string>\r\n    <string name=\"create_first_plan\">Нажмите кнопку + для создания вашего первого финансового плана</string>\r\n    <string name=\"add_plan\">Добавить План</string>\r\n    <string name=\"delete_plan\">Удалить План</string>\r\n    <string name=\"delete_plan_confirmation\">Вы уверены, что хотите удалить план \\\"%1$s\\\"? Это действие нельзя отменить.</string>\r\n\r\n    <!-- ExpensesScreen -->\r\n    <string name=\"results_count\">%d результатов</string>\r\n    <string name=\"search_expenses_placeholder\">Поиск по описанию, сумме или категории...</string>\r\n    <string name=\"monthly_limit_exceeded\">⚠\uFE0F Вы превысили ваш месячный лимит расходов!</string>\r\n    <string name=\"time_newest_first\">Дата: Сначала Новые</string>\r\n    <string name=\"time_oldest_first\">Дата: Сначала Старые</string>\r\n\r\n    <!-- AnalysisScreen -->\r\n    <string name=\"current_period_total\">Общие Расходы Текущего Периода</string>\r\n    <string name=\"vs_previous_month\">По сравнению с предыдущим месяцем</string>\r\n    <string name=\"vs_6_month_average\">По сравнению со средним за 6 месяцев</string>\r\n    <string name=\"no_expenses_this_period\">Пока нет расходов в этом периоде</string>\r\n    <string name=\"analysis_will_appear\">Анализ появится здесь, когда вы добавите расходы</string>\r\n    <string name=\"previous_month\">Предыдущий месяц</string>\r\n    <string name=\"next_month\">Следующий месяц</string>\r\n    <string name=\"select_date_range\">Выбрать диапазон дат</string>\r\n    <string name=\"fixed_expenses\">Постоянные Расходы</string>\r\n    <string name=\"recurring_expenses_description\">Расходы, которые будут продолжаться 3+ месяца</string>\r\n    <string name=\"recurring_expenses_cd\">Повторяющиеся расходы</string>\r\n    <string name=\"pick_date_range\">Выбрать диапазон дат</string>\r\n\r\n    <!-- AddExpenseScreen -->\r\n    <string name=\"enter_expense_details\">Введите детали расхода</string>\r\n    <string name=\"expense_amount_placeholder\">0,00</string>\r\n    <string name=\"search_placeholder_category\">поиск...</string>\r\n    <string name=\"description_optional\">Описание (Необязательно)</string>\r\n    <string name=\"add_description_placeholder\">Добавить описание...</string>\r\n    <string name=\"recurrence_type\">Тип Повторения</string>\r\n    <string name=\"end_date\">Дата Окончания</string>\r\n    <string name=\"exchange_rate_label\">Обменный Курс (1 %1$s = ? %2$s)</string>\r\n    <string name=\"exchange_rate_example\">напр: 0,035 (1 %1$s = 0,035 %2$s)</string>\r\n    <string name=\"exchange_rate_note\">Этот курс будет использоваться для расчёта прогресса</string>\r\n    <string name=\"add_expense\">Добавить Расход</string>\r\n    <string name=\"update_expense\">Обновить Расход</string>\r\n    <string name=\"none\">Нет</string>\r\n    <string name=\"one_time\">Один раз</string>\r\n    <string name=\"every_day\">Каждый день</string>\r\n    <string name=\"weekdays_only\">Только рабочие дни</string>\r\n    <string name=\"once_per_week\">Раз в неделю</string>\r\n    <string name=\"once_per_month\">Раз в месяц</string>\r\n    <string name=\"edit_expense\">Редактировать Расход</string>\r\n    <string name=\"new_expense\">Новый Расход</string>\r\n    <string name=\"selectCategory\">Выбор категории</string>\r\n    <string name=\"single_time\">Один раз</string>\r\n    <string name=\"okay\">Хорошо</string>\r\n\r\n    <!-- SubCategoryDetailBottomSheet -->\r\n    <string name=\"parent_category\">Родительская Категория</string>\r\n    <string name=\"total_amount\">Общая Сумма</string>\r\n    <string name=\"expense_count\">Количество Расходов</string>\r\n    <string name=\"average\">Среднее</string>\r\n    <string name=\"expenses\">Расходы</string>\r\n    <string name=\"recurring_label\">Повторяющийся</string>\r\n\r\n    <!-- ProgressRingComponent -->\r\n    <string name=\"monthly_label\">Месячный</string>\r\n    <string name=\"daily_label\">Дневной</string>\r\n\r\n    <!-- PlanDetailBottomSheet -->\r\n    <string name=\"update_expense_data\">Обновить Данные Расходов</string>\r\n    <string name=\"update_expense_data_description\">Пересчитывает текущие и будущие месяцы с обновлёнными данными</string>\r\n    <string name=\"total_net_value\">Общая Чистая Стоимость</string>\r\n    <string name=\"month\">Месяц</string>\r\n    <string name=\"income\">Доходы</string>\r\n    <string name=\"expense\">Расход</string>\r\n    <string name=\"net\">Чистый</string>\r\n    <string name=\"total\">Итого</string>\r\n\r\n    <!-- PlanCard -->\r\n    <string name=\"avg_monthly_income\">Средн. Месячный Доход</string>\r\n    <string name=\"avg_monthly_expense\">Средн. Месячные Расходы</string>\r\n    <string name=\"current_net\">Текущий Чистый</string>\r\n    <string name=\"target_net\">Целевой Чистый</string>\r\n\r\n    <!-- MonthlyLineChart -->\r\n    <string name=\"all\">Все</string>\r\n    <string name=\"one_time_expense\">Разовый Расход</string>\r\n    <string name=\"period_expense_trend\">Тренд Расходов Периода</string>\r\n    <string name=\"expand\">Развернуть</string>\r\n    <string name=\"collapse\">Свернуть</string>\r\n    <string name=\"no_data_found\">Данные не найдены</string>\r\n    <string name=\"highest\">Наивысший</string>\r\n\r\n    <!-- MonthlyExpensesView -->\r\n    <string name=\"no_expenses_this_month\">Нет расходов в этом месяце</string>\r\n    <string name=\"add_expense_for_month\">Нажмите кнопку + на главном экране для добавления расходов за этот месяц</string>\r\n\r\n    <!-- MonthlyCalendarView - Day headers -->\r\n    <string name=\"monday_short\">П</string>\r\n    <string name=\"tuesday_short\">В</string>\r\n    <string name=\"wednesday_short\">С</string>\r\n    <string name=\"thursday_short\">Ч</string>\r\n    <string name=\"friday_short\">П</string>\r\n    <string name=\"saturday_short\">С</string>\r\n    <string name=\"sunday_short\">В</string>\r\n\r\n    <!-- MonthlyAnalysisPieChart -->\r\n    <string name=\"category_distribution\">Распределение по Категориям</string>\r\n    <string name=\"tap_chart_to_select_category\">Нажмите на график для выбора категории</string>\r\n\r\n    <!-- ExpenseRowView -->\r\n    <string name=\"unknown\">Неизвестно</string>\r\n    <string name=\"delete_expense\">Удалить Расход</string>\r\n    <string name=\"delete_expense_confirmation\">Вы уверены, что хотите удалить этот расход? Это действие нельзя отменить.</string>\r\n\r\n    <!-- DailyCategoryDetailBottomSheet -->\r\n    <string name=\"amount_high_to_low_arrow\">Сумма (Высокая → Низкая)</string>\r\n    <string name=\"amount_low_to_high_arrow\">Сумма (Низкая → Высокая)</string>\r\n    <string name=\"time_newest_first_arrow\">Время (Новое → Старое)</string>\r\n    <string name=\"time_oldest_first_arrow\">Время (Старое → Новое)</string>\r\n    <string name=\"description_a_to_z_arrow\">Описание (А → Я)</string>\r\n    <string name=\"description_z_to_a_arrow\">Описание (Я → А)</string>\r\n    <string name=\"total_spending\">Общие Расходы</string>\r\n    <string name=\"no_expenses_in_category\">Расходы в этой категории не найдены</string>\r\n    <string name=\"expense_singular\">Расход</string>\r\n\r\n    <!-- CreatePlanDialog -->\r\n    <string name=\"create_new_plan\">Создать Новый План</string>\r\n    <string name=\"plan_name\">Название Плана</string>\r\n    <string name=\"plan_name_example\">напр: План Сбережений 2024</string>\r\n    <string name=\"plan_duration\">Продолжительность Плана</string>\r\n    <string name=\"apply_interest_to_savings\">Применить Проценты (к Сбережениям)</string>\r\n    <string name=\"simple_interest\">Простые Проценты</string>\r\n    <string name=\"compound_interest\">Сложные Проценты</string>\r\n    <string name=\"annual_interest_rate\">Годовая процентная ставка %</string>\r\n    <string name=\"interest_applied_to_positive_savings\">Проценты применяются к положительным сбережениям</string>\r\n    <string name=\"interest_type\">Тип Процентов</string>\r\n    <string name=\"monthly_income_currency\">Месячный Доход (%s)</string>\r\n    <string name=\"use_app_expense_data\">Использовать данные расходов приложения</string>\r\n    <string name=\"monthly_expenses_currency\">Месячные Расходы (%s)</string>\r\n    <string name=\"manual_monthly_expense_amount\">Ручная сумма месячных расходов</string>\r\n    <string name=\"enter_manual_expense_amount\">Введите ручную сумму расходов</string>\r\n    <string name=\"apply_inflation\">Применить Инфляцию</string>\r\n    <string name=\"annual_percentage_rate\">Годовая ставка %</string>\r\n    <string name=\"create\">Создать</string>\r\n\r\n    <!-- CategorySummarySection -->\r\n    <string name=\"category_details\">Детали Категории</string>\r\n    <string name=\"main_categories\">Основные Категории</string>\r\n    <string name=\"sub_categories\">Подкategории</string>\r\n    <string name=\"expense_lowercase\">расход</string>\r\n    <string name=\"see_details\">Посмотреть детали</string>\r\n\r\n    <!-- CategoryPopupLines -->\r\n    <string name=\"vs_previous_month_colon\">По сравнению с предыдущим месяцем:</string>\r\n    <string name=\"vs_average_colon\">По сравнению со средним:</string>\r\n\r\n    <!-- CategoryManagementScreen -->\r\n    <string name=\"add_new_main_category\">Добавить Новую Основную Категорию</string>\r\n    <string name=\"add_main_category_content_desc\">Добавить Основную Категорию</string>\r\n    <string name=\"category_name_hint\">Введите название категории</string>\r\n    <string name=\"unique_category_name_note\">Выберите уникальное название для категории</string>\r\n    <string name=\"icon_selection\">Выбор Иконки</string>\r\n    <string name=\"color_selection\">Выбор Цвета</string>\r\n    <string name=\"add_button\">Добавить</string>\r\n    <string name=\"main_category\">Основная Категория</string>\r\n    <string name=\"select_category\">Выбрать категорию</string>\r\n    <string name=\"subcategory_name\">Название Подкategории</string>\r\n    <string name=\"subcategory_name_hint\">Введите название подкategории</string>\r\n    <string name=\"unique_subcategory_name_note\">Выберите уникальное название для подкategории</string>\r\n    <string name=\"edit_subcategory\">Редактировать Подкategорию</string>\r\n    <string name=\"edit_category\">Редактировать Категорию</string>\r\n    <string name=\"edit\">Редактировать</string>\r\n    <string name=\"enter_name_hint\">Введите название</string>\r\n    <string name=\"delete_confirmation\">Подтверждение Удаления</string>\r\n    <string name=\"delete_item_confirmation\">Вы уверены, что хотите удалить \\\"%s\\\"? Это действие нельзя отменить.</string>\r\n    <string name=\"this_item\">Этот элемент</string>\r\n    <string name=\"collapse_desc\">Свернуть</string>\r\n    <string name=\"expand_desc\">Развернуть</string>\r\n    <string name=\"edit_category_desc\">Редактировать Категорию</string>\r\n    <string name=\"delete_category_desc\">Удалить Категорию</string>\r\n    <string name=\"add_subcategory\">Добавить Подкategорию</string>\r\n    <string name=\"add_subcategory_desc\">Добавить Подкategорию</string>\r\n    <string name=\"edit_subcategory_desc\">Редактировать Подкategорию</string>\r\n    <string name=\"delete_subcategory_desc\">Удалить Подкategорию</string>\r\n    <string name=\"selected\">Выбран</string>\r\n\r\n    <!-- CategoryDistributionChart -->\r\n    <string name=\"no_data\">Нет данных</string>\r\n    <string name=\"category\">Категория</string>\r\n\r\n    <!-- CategoryDetailBottomSheet -->\r\n    <string name=\"sort_amount_desc\">По Сумме (Высокая → Низкая)</string>\r\n    <string name=\"sort_amount_asc\">По Сумме (Низкая → Высокая)</string>\r\n    <string name=\"sort_date_desc\">По Дате (Новая → Старая)</string>\r\n    <string name=\"sort_date_asc\">По Дате (Старая → Новая)</string>\r\n    <string name=\"sort_name_asc\">По Описанию (А → Я)</string>\r\n    <string name=\"sort_name_desc\">По Описанию (Я → А)</string>\r\n\r\n    <!-- SubCategory - Default subcategories -->\r\n    <!-- Food & Drink -->\r\n    <string name=\"subcategory_restaurant\">Ресторан</string>\r\n    <string name=\"subcategory_kitchen_shopping\">Продукты для кухни</string>\r\n\r\n    <!-- Housing -->\r\n    <string name=\"subcategory_rent\">Аренда</string>\r\n    <string name=\"subcategory_dues\">Коммунальные услуги</string>\r\n    <string name=\"subcategory_mortgage\">Платёж по ипотеке</string>\r\n    <string name=\"subcategory_electricity\">Счёт за электричество</string>\r\n    <string name=\"subcategory_water\">Счёт за воду</string>\r\n    <string name=\"subcategory_heating\">Отопление</string>\r\n    <string name=\"subcategory_internet_phone\">Интернет и телефон</string>\r\n    <string name=\"subcategory_other_bills\">Другие Счета</string>\r\n    <string name=\"subcategory_general_shopping\">Общие покупки продуктов</string>\r\n\r\n    <!-- Transportation -->\r\n    <string name=\"subcategory_fuel\">Топливо</string>\r\n    <string name=\"subcategory_public_transport\">Общественный транспорт</string>\r\n    <string name=\"subcategory_car_maintenance\">Обслуживание автомобиля</string>\r\n    <string name=\"subcategory_car_rental\">Аренда автомобиля</string>\r\n    <string name=\"subcategory_taxi_uber\">Такси/Убер</string>\r\n    <string name=\"subcategory_car_insurance\">Страхование автомобиля</string>\r\n    <string name=\"subcategory_mtv\">Транспортный налог</string>\r\n    <string name=\"subcategory_parking_fees\">Плата за парковку</string>\r\n\r\n    <!-- Health -->\r\n    <string name=\"subcategory_doctor_appointment\">Визит к врачу</string>\r\n    <string name=\"subcategory_medicines\">Лекарства</string>\r\n    <string name=\"subcategory_gym_membership\">Абонемент в спортзал</string>\r\n    <string name=\"subcategory_cosmetics\">Косметика</string>\r\n\r\n    <!-- Entertainment -->\r\n    <string name=\"subcategory_cinema_theater\">Кино и театр</string>\r\n    <string name=\"subcategory_concerts_events\">Концерты и мероприятия</string>\r\n    <string name=\"subcategory_subscriptions\">Подписки</string>\r\n    <string name=\"subcategory_books_magazines\">Книги и журналы</string>\r\n    <string name=\"subcategory_travel_vacation\">Путешествия и отпуск</string>\r\n    <string name=\"subcategory_games_apps\">Игры и приложения</string>\r\n\r\n    <!-- Education -->\r\n    <string name=\"subcategory_course_fees\">Плата за курсы</string>\r\n    <string name=\"subcategory_education_materials\">Образовательные материалы</string>\r\n    <string name=\"subcategory_seminars\">Семинары</string>\r\n    <string name=\"subcategory_online_courses\">Онлайн курсы</string>\r\n\r\n    <!-- Shopping -->\r\n    <string name=\"subcategory_electronics\">Электроника</string>\r\n    <string name=\"subcategory_clothing\">Одежда</string>\r\n    <string name=\"subcategory_home_goods\">Товары для дома</string>\r\n    <string name=\"subcategory_gifts\">Подарки</string>\r\n    <string name=\"subcategory_perfume\">Парфюм</string>\r\n\r\n    <!-- Pets -->\r\n    <string name=\"subcategory_pet_food_toys\">Корм и игрушки</string>\r\n    <string name=\"subcategory_vet_services\">Ветеринарные услуги</string>\r\n    <string name=\"subcategory_pet_insurance\">Страхование питомцев</string>\r\n\r\n    <!-- Work -->\r\n    <string name=\"subcategory_work_meals\">Рабочие обеды</string>\r\n    <string name=\"subcategory_office_supplies\">Офисные принадлежности</string>\r\n    <string name=\"subcategory_business_travel\">Командировки</string>\r\n    <string name=\"subcategory_work_education\">Обучение и семинары</string>\r\n    <string name=\"subcategory_freelance_payments\">Платежи за фриланс</string>\r\n\r\n    <!-- Tax -->\r\n    <string name=\"subcategory_tax_payments\">Налоговые платежи</string>\r\n\r\n    <!-- Others -->\r\n    <string name=\"subcategory_other_expenses\">Другие Расходы</string>\r\n\r\n    <!-- ExpensesScreen - Empty state messages -->\r\n    <string name=\"no_search_results_found\">Результаты поиска не найдены</string>\r\n    <string name=\"no_expenses_yet\">Пока нет расходов</string>\r\n    <string name=\"no_expenses_today\">Сегодня нет расходов</string>\r\n    <string name=\"no_search_results_description\">Не найдено результатов для \\\"%1$s\\\". Попробуйте другой поисковый запрос.</string>\r\n    <string name=\"first_expense_hint\">Нажмите кнопку + для добавления вашего первого расхода</string>\r\n    <string name=\"add_expense_for_day_hint\">Нажмите кнопку + для добавления расходов на этот день</string>\r\n    <string name=\"calendar_tab\">Календарь</string>\r\n    <string name=\"expenses_tab\">Расходы</string>\r\n\r\n    <!-- PlanningUtils - Plan status and validation -->\r\n    <string name=\"plan_status_not_started\">Не начат</string>\r\n    <string name=\"plan_status_completed\">Завершён</string>\r\n    <string name=\"plan_status_active\">Активен</string>\r\n    <string name=\"validation_plan_name_empty\">Название плана не может быть пустым</string>\r\n    <string name=\"validation_monthly_income_positive\">Месячный доход должен быть больше 0</string>\r\n    <string name=\"validation_duration_positive\">Продолжительность плана должна быть больше 0</string>\r\n    <string name=\"validation_duration_max_10_years\">Продолжительность плана не может быть более 10 лет</string>\r\n    <string name=\"validation_inflation_rate_range\">Уровень инфляции должен быть между -50%% и 100%%</string>\r\n    <string name=\"duration_3_months\">3 Месяца</string>\r\n    <string name=\"duration_6_months\">6 Месяцев</string>\r\n    <string name=\"duration_1_year\">1 Год</string>\r\n    <string name=\"duration_1_5_years\">1,5 Года</string>\r\n    <string name=\"duration_2_years\">2 Года</string>\r\n    <string name=\"duration_3_years\">3 Года</string>\r\n    <string name=\"duration_5_years\">5 Лет</string>\r\n\r\n    <!-- PlanningViewModel - Error messages -->\r\n    <string name=\"error_loading_plan\">Ошибка загрузки плана: %s</string>\r\n    <string name=\"error_creating_plan\">Ошибка создания плана: %s</string>\r\n    <string name=\"error_deleting_plan\">Ошибка удаления плана: %s</string>\r\n    <string name=\"error_updating_expense_data\">Ошибка обновления данных расходов: %s</string>\r\n    <string name=\"error_updating_plan_calculations\">Ошибка обновления расчётов плана: %s</string>\r\n    <string name=\"error_saving_changes\">Ошибка сохранения изменений: %s</string>\r\n\r\n    <!-- Category - Default categories -->\r\n    <string name=\"category_food\">Еда и Напитки</string>\r\n    <string name=\"category_housing\">Жильё</string>\r\n    <string name=\"category_transportation\">Транспорт</string>\r\n    <string name=\"category_health\">Здоровье и Личная Гигиена</string>\r\n    <string name=\"category_entertainment\">Развлечения и Хобби</string>\r\n    <string name=\"category_education\">Образование</string>\r\n    <string name=\"category_shopping\">Покупки</string>\r\n    <string name=\"category_pets\">Домашние Животные</string>\r\n    <string name=\"category_work\">Работа и Профессиональные Расходы</string>\r\n    <string name=\"category_tax\">Налоги и Юридические Расходы</string>\r\n    <string name=\"category_donations\">Пожертвования и Помощь</string>\r\n    <string name=\"category_others\">Другие Платежи</string>\r\n</resources>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/values-ru/strings.xml b/app/src/main/res/values-ru/strings.xml
--- a/app/src/main/res/values-ru/strings.xml	(revision 704fb63dbd103d83a77a5d2f59944f4c74685798)
+++ b/app/src/main/res/values-ru/strings.xml	(date 1759316126914)
@@ -365,4 +365,19 @@
     <string name="category_tax">Налоги и Юридические Расходы</string>
     <string name="category_donations">Пожертвования и Помощь</string>
     <string name="category_others">Другие Платежи</string>
+    <!-- Billing Page -->
+    <string name="no_add_text">I don\'t want to bombard you with silly ads,
+        and I want you to be able to access all features without needing the premium version.
+        But I need income to keep developing. If you like my app and want to support me,
+        feel free to tip a cup of tea (Prices aren\'t affected by inflation here) :).</string>
+    <string name="buy_water">tip a water</string>
+    <string name="buy_bagel">tip a bagel</string>
+    <string name="buy_tea">tip a tea</string>
+    <string name="buy_coffee">tip a coffee</string>
+    <string name="buy_wrap">tip a wrap</string>
+    <string name="buy_burger">tip a burger</string>
+    <string name="buy_doner">tip a doner</string>
+    <string name="max_donation">suprise me</string>
+    <string name="recurring_total">"Total: "</string>
+    <string name="recurring_remaining">"Remaining: "</string>
 </resources>
\ No newline at end of file
Index: app/src/main/res/values-es/strings.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<resources>\r\n    <string name=\"app_name\">Rastreador de Gastos</string>\r\n    <string name=\"general_settings\">Configuración General</string>\r\n    <string name=\"categories\">Categorías</string>\r\n    <string name=\"default_currency\">Moneda Predeterminada</string>\r\n    <string name=\"currency_description\">Moneda predeterminada para nuevos gastos</string>\r\n    <string name=\"daily_spending_limit\">Límite de Gasto Diario</string>\r\n    <string name=\"enter_daily_limit\">Ingrese límite diario</string>\r\n    <string name=\"daily_limit_description\">Su límite de gasto diario. No se aplica límite si se deja en blanco</string>\r\n    <string name=\"monthly_spending_limit\">Límite de Gasto Mensual</string>\r\n    <string name=\"enter_monthly_limit\">Ingrese límite mensual</string>\r\n    <string name=\"monthly_limit_description\">Su límite total de gasto mensual. El anillo de progreso se muestra basado en este valor</string>\r\n    <string name=\"theme\">Tema</string>\r\n    <string name=\"dark_theme\">Tema Oscuro</string>\r\n    <string name=\"light_theme\">Tema Claro</string>\r\n    <string name=\"theme_description\">Cambiar la apariencia de la aplicación</string>\r\n    <string name=\"cancel\">Cancelar</string>\r\n    <string name=\"save\">Guardar</string>\r\n    <!-- RecurringExpensesScreen -->\r\n    <string name=\"recurring_expenses\">Gastos Recurrentes</string>\r\n    <string name=\"sort\">Ordenar</string>\r\n    <string name=\"search\">Buscar</string>\r\n    <string name=\"back\">Atrás</string>\r\n    <string name=\"amount_high_to_low\">Monto: Mayor a Menor</string>\r\n    <string name=\"amount_low_to_high\">Monto: Menor a Mayor</string>\r\n    <string name=\"description_a_to_z\">Descripción: A-Z</string>\r\n    <string name=\"description_z_to_a\">Descripción: Z-A</string>\r\n    <string name=\"category_a_to_z\">Categoría: A-Z</string>\r\n    <string name=\"category_z_to_a\">Categoría: Z-A</string>\r\n    <string name=\"end_date_recurring\">Fin: %s</string>\r\n    <string name=\"search_placeholder\">Buscar por descripción, monto o categoría...</string>\r\n    <string name=\"no_search_results\">No se encontraron resultados</string>\r\n    <string name=\"search_no_results_description\">No se encontraron resultados para \\\"%1$s\\\". Intente con un término de búsqueda diferente.</string>\r\n    <string name=\"no_recurring_expenses\">Aún no hay gastos recurrentes</string>\r\n    <string name=\"recurring_expenses_hint\">Presione el botón + para agregar gastos recurrentes</string>\r\n    <string name=\"results_found\">%d resultados encontrados</string>\r\n    <string name=\"daily\">Diario</string>\r\n    <string name=\"weekdays\">Días laborables</string>\r\n    <string name=\"weekly\">Semanal</string>\r\n    <string name=\"monthly\">Mensual</string>\r\n    <string name=\"exchange_rate\">Tipo de Cambio: %s</string>\r\n    <string name=\"delete\">Eliminar</string>\r\n    <string name=\"amount\">Monto</string>\r\n    <string name=\"description\">Descripción</string>\r\n    <string name=\"exchange_rate_field\">Tipo de Cambio</string>\r\n    <string name=\"select_date\">Seleccionar Fecha</string>\r\n    <string name=\"delete_recurring_expense\">Eliminar Gasto Recurrente</string>\r\n    <string name=\"delete_recurring_confirmation\">¿Está seguro de que desea eliminar este gasto recurrente desde hoy en adelante? Esta acción no se puede deshacer.</string>\r\n    <string name=\"ok\">OK</string>\r\n    <!-- PlanningScreen -->\r\n    <string name=\"financial_planning\">Planificación Financiera</string>\r\n    <string name=\"planning_description\">Cree y haga seguimiento de sus planes futuros</string>\r\n    <string name=\"no_plans_yet\">Aún no hay planes</string>\r\n    <string name=\"create_first_plan\">Presione el botón + para crear su primer plan financiero</string>\r\n    <string name=\"add_plan\">Agregar Plan</string>\r\n    <string name=\"delete_plan\">Eliminar Plan</string>\r\n    <string name=\"delete_plan_confirmation\">¿Está seguro de que desea eliminar el plan \\\"%1$s\\\"? Esta acción no se puede deshacer.</string>\r\n\r\n    <!-- ExpensesScreen -->\r\n    <string name=\"results_count\">%d resultados</string>\r\n    <string name=\"search_expenses_placeholder\">Buscar por descripción, monto o categoría...</string>\r\n    <string name=\"monthly_limit_exceeded\">⚠\uFE0F ¡Ha excedido su límite de gasto mensual!</string>\r\n    <string name=\"time_newest_first\">Fecha: Más Reciente Primero</string>\r\n    <string name=\"time_oldest_first\">Fecha: Más Antiguo Primero</string>\r\n\r\n    <!-- AnalysisScreen -->\r\n    <string name=\"current_period_total\">Gasto Total del Período Actual</string>\r\n    <string name=\"vs_previous_month\">Comparado con el mes anterior</string>\r\n    <string name=\"vs_6_month_average\">Comparado con el promedio de 6 meses</string>\r\n    <string name=\"no_expenses_this_period\">Aún no hay gastos en este período</string>\r\n    <string name=\"analysis_will_appear\">El análisis aparecerá aquí cuando agregue gastos</string>\r\n    <string name=\"previous_month\">Mes anterior</string>\r\n    <string name=\"next_month\">Mes siguiente</string>\r\n    <string name=\"select_date_range\">Seleccionar rango de fechas</string>\r\n    <string name=\"fixed_expenses\">Gastos Fijos</string>\r\n    <string name=\"recurring_expenses_description\">Gastos que continuarán por 3+ meses</string>\r\n    <string name=\"recurring_expenses_cd\">Gastos recurrentes</string>\r\n    <string name=\"pick_date_range\">Elegir rango de fechas</string>\r\n\r\n    <!-- AddExpenseScreen -->\r\n    <string name=\"enter_expense_details\">Ingrese detalles del gasto</string>\r\n    <string name=\"expense_amount_placeholder\">0,00</string>\r\n    <string name=\"search_placeholder_category\">buscar...</string>\r\n    <string name=\"description_optional\">Descripción (Opcional)</string>\r\n    <string name=\"add_description_placeholder\">Agregar descripción...</string>\r\n    <string name=\"recurrence_type\">Tipo de Recurrencia</string>\r\n    <string name=\"end_date\">Fecha de Fin</string>\r\n    <string name=\"exchange_rate_label\">Tipo de Cambio (1 %1$s = ? %2$s)</string>\r\n    <string name=\"exchange_rate_example\">ej: 0,035 (1 %1$s = 0,035 %2$s)</string>\r\n    <string name=\"exchange_rate_note\">Esta tasa se utilizará para cálculos de progreso</string>\r\n    <string name=\"add_expense\">Agregar Gasto</string>\r\n    <string name=\"update_expense\">Actualizar Gasto</string>\r\n    <string name=\"none\">Ninguno</string>\r\n    <string name=\"one_time\">Una vez</string>\r\n    <string name=\"every_day\">Todos los días</string>\r\n    <string name=\"weekdays_only\">Solo días laborables</string>\r\n    <string name=\"once_per_week\">Una vez por semana</string>\r\n    <string name=\"once_per_month\">Una vez por mes</string>\r\n    <string name=\"edit_expense\">Editar Gasto</string>\r\n    <string name=\"new_expense\">Nuevo Gasto</string>\r\n    <string name=\"selectCategory\">Selección de categoría</string>\r\n    <string name=\"single_time\">Una sola vez</string>\r\n    <string name=\"okay\">De acuerdo</string>\r\n\r\n    <!-- SubCategoryDetailBottomSheet -->\r\n    <string name=\"parent_category\">Categoría Principal</string>\r\n    <string name=\"total_amount\">Monto Total</string>\r\n    <string name=\"expense_count\">Cantidad de Gastos</string>\r\n    <string name=\"average\">Promedio</string>\r\n    <string name=\"expenses\">Gastos</string>\r\n    <string name=\"recurring_label\">Recurrente</string>\r\n\r\n    <!-- ProgressRingComponent -->\r\n    <string name=\"monthly_label\">Mensual</string>\r\n    <string name=\"daily_label\">Diario</string>\r\n\r\n    <!-- PlanDetailBottomSheet -->\r\n    <string name=\"update_expense_data\">Actualizar Datos de Gastos</string>\r\n    <string name=\"update_expense_data_description\">Recalcula los meses actuales y futuros con datos actualizados</string>\r\n    <string name=\"total_net_value\">Valor Neto Total</string>\r\n    <string name=\"month\">Mes</string>\r\n    <string name=\"income\">Ingresos</string>\r\n    <string name=\"expense\">Gasto</string>\r\n    <string name=\"net\">Neto</string>\r\n    <string name=\"total\">Total</string>\r\n\r\n    <!-- PlanCard -->\r\n    <string name=\"avg_monthly_income\">Ingresos Mensuales Prom.</string>\r\n    <string name=\"avg_monthly_expense\">Gastos Mensuales Prom.</string>\r\n    <string name=\"current_net\">Neto Actual</string>\r\n    <string name=\"target_net\">Neto Objetivo</string>\r\n\r\n    <!-- MonthlyLineChart -->\r\n    <string name=\"all\">Todos</string>\r\n    <string name=\"one_time_expense\">Gasto de Una Vez</string>\r\n    <string name=\"period_expense_trend\">Tendencia de Gastos del Período</string>\r\n    <string name=\"expand\">Expandir</string>\r\n    <string name=\"collapse\">Contraer</string>\r\n    <string name=\"no_data_found\">No se encontraron datos</string>\r\n    <string name=\"highest\">Más alto</string>\r\n\r\n    <!-- MonthlyExpensesView -->\r\n    <string name=\"no_expenses_this_month\">No hay gastos este mes</string>\r\n    <string name=\"add_expense_for_month\">Presione el botón + en la pantalla principal para agregar gastos para este mes</string>\r\n\r\n    <!-- MonthlyCalendarView - Day headers -->\r\n    <string name=\"monday_short\">L</string>\r\n    <string name=\"tuesday_short\">M</string>\r\n    <string name=\"wednesday_short\">M</string>\r\n    <string name=\"thursday_short\">J</string>\r\n    <string name=\"friday_short\">V</string>\r\n    <string name=\"saturday_short\">S</string>\r\n    <string name=\"sunday_short\">D</string>\r\n\r\n    <!-- MonthlyAnalysisPieChart -->\r\n    <string name=\"category_distribution\">Distribución por Categorías</string>\r\n    <string name=\"tap_chart_to_select_category\">Toque el gráfico para seleccionar una categoría</string>\r\n\r\n    <!-- ExpenseRowView -->\r\n    <string name=\"unknown\">Desconocido</string>\r\n    <string name=\"delete_expense\">Eliminar Gasto</string>\r\n    <string name=\"delete_expense_confirmation\">¿Está seguro de que desea eliminar este gasto? Esta acción no se puede deshacer.</string>\r\n\r\n    <!-- DailyCategoryDetailBottomSheet -->\r\n    <string name=\"amount_high_to_low_arrow\">Monto (Mayor → Menor)</string>\r\n    <string name=\"amount_low_to_high_arrow\">Monto (Menor → Mayor)</string>\r\n    <string name=\"time_newest_first_arrow\">Tiempo (Nuevo → Antiguo)</string>\r\n    <string name=\"time_oldest_first_arrow\">Tiempo (Antiguo → Nuevo)</string>\r\n    <string name=\"description_a_to_z_arrow\">Descripción (A → Z)</string>\r\n    <string name=\"description_z_to_a_arrow\">Descripción (Z → A)</string>\r\n    <string name=\"total_spending\">Gasto Total</string>\r\n    <string name=\"no_expenses_in_category\">No se encontraron gastos en esta categoría</string>\r\n    <string name=\"expense_singular\">Gasto</string>\r\n\r\n    <!-- CreatePlanDialog -->\r\n    <string name=\"create_new_plan\">Crear Nuevo Plan</string>\r\n    <string name=\"plan_name\">Nombre del Plan</string>\r\n    <string name=\"plan_name_example\">ej: Plan de Ahorros 2024</string>\r\n    <string name=\"plan_duration\">Duración del Plan</string>\r\n    <string name=\"apply_interest_to_savings\">Aplicar Intereses (a Ahorros)</string>\r\n    <string name=\"simple_interest\">Interés Simple</string>\r\n    <string name=\"compound_interest\">Interés Compuesto</string>\r\n    <string name=\"annual_interest_rate\">Tasa de interés anual %</string>\r\n    <string name=\"interest_applied_to_positive_savings\">Los intereses se aplican a ahorros positivos</string>\r\n    <string name=\"interest_type\">Tipo de Interés</string>\r\n    <string name=\"monthly_income_currency\">Ingresos Mensuales (%s)</string>\r\n    <string name=\"use_app_expense_data\">Usar datos de gastos de la aplicación</string>\r\n    <string name=\"monthly_expenses_currency\">Gastos Mensuales (%s)</string>\r\n    <string name=\"manual_monthly_expense_amount\">Monto manual de gastos mensuales</string>\r\n    <string name=\"enter_manual_expense_amount\">Ingrese monto manual de gastos</string>\r\n    <string name=\"apply_inflation\">Aplicar Inflación</string>\r\n    <string name=\"annual_percentage_rate\">Tasa anual %</string>\r\n    <string name=\"create\">Crear</string>\r\n\r\n    <!-- CategorySummarySection -->\r\n    <string name=\"category_details\">Detalles de Categoría</string>\r\n    <string name=\"main_categories\">Categorías Principales</string>\r\n    <string name=\"sub_categories\">Subcategorías</string>\r\n    <string name=\"expense_lowercase\">gasto</string>\r\n    <string name=\"see_details\">Ver detalles</string>\r\n\r\n    <!-- CategoryPopupLines -->\r\n    <string name=\"vs_previous_month_colon\">Comparado con el mes anterior:</string>\r\n    <string name=\"vs_average_colon\">Comparado con el promedio:</string>\r\n\r\n    <!-- CategoryManagementScreen -->\r\n    <string name=\"add_new_main_category\">Agregar Nueva Categoría Principal</string>\r\n    <string name=\"add_main_category_content_desc\">Agregar Categoría Principal</string>\r\n    <string name=\"category_name_hint\">Ingrese nombre de categoría</string>\r\n    <string name=\"unique_category_name_note\">Elija un nombre único para la categoría</string>\r\n    <string name=\"icon_selection\">Selección de Icono</string>\r\n    <string name=\"color_selection\">Selección de Color</string>\r\n    <string name=\"add_button\">Agregar</string>\r\n    <string name=\"main_category\">Categoría Principal</string>\r\n    <string name=\"select_category\">Seleccionar categoría</string>\r\n    <string name=\"subcategory_name\">Nombre de Subcategoría</string>\r\n    <string name=\"subcategory_name_hint\">Ingrese nombre de subcategoría</string>\r\n    <string name=\"unique_subcategory_name_note\">Elija un nombre único para la subcategoría</string>\r\n    <string name=\"edit_subcategory\">Editar Subcategoría</string>\r\n    <string name=\"edit_category\">Editar Categoría</string>\r\n    <string name=\"edit\">Editar</string>\r\n    <string name=\"enter_name_hint\">Ingrese nombre</string>\r\n    <string name=\"delete_confirmation\">Confirmación de Eliminación</string>\r\n    <string name=\"delete_item_confirmation\">¿Está seguro de que desea eliminar \\\"%s\\\"? Esta acción no se puede deshacer.</string>\r\n    <string name=\"this_item\">Este elemento</string>\r\n    <string name=\"collapse_desc\">Contraer</string>\r\n    <string name=\"expand_desc\">Expandir</string>\r\n    <string name=\"edit_category_desc\">Editar Categoría</string>\r\n    <string name=\"delete_category_desc\">Eliminar Categoría</string>\r\n    <string name=\"add_subcategory\">Agregar Subcategoría</string>\r\n    <string name=\"add_subcategory_desc\">Agregar Subcategoría</string>\r\n    <string name=\"edit_subcategory_desc\">Editar Subcategoría</string>\r\n    <string name=\"delete_subcategory_desc\">Eliminar Subcategoría</string>\r\n    <string name=\"selected\">Seleccionado</string>\r\n\r\n    <!-- CategoryDistributionChart -->\r\n    <string name=\"no_data\">Sin datos</string>\r\n    <string name=\"category\">Categoría</string>\r\n\r\n    <!-- CategoryDetailBottomSheet -->\r\n    <string name=\"sort_amount_desc\">Por Monto (Mayor → Menor)</string>\r\n    <string name=\"sort_amount_asc\">Por Monto (Menor → Mayor)</string>\r\n    <string name=\"sort_date_desc\">Por Fecha (Nuevo → Antiguo)</string>\r\n    <string name=\"sort_date_asc\">Por Fecha (Antiguo → Nuevo)</string>\r\n    <string name=\"sort_name_asc\">Por Descripción (A → Z)</string>\r\n    <string name=\"sort_name_desc\">Por Descripción (Z → A)</string>\r\n\r\n    <!-- SubCategory - Default subcategories -->\r\n    <!-- Food & Drink -->\r\n    <string name=\"subcategory_restaurant\">Restaurante</string>\r\n    <string name=\"subcategory_kitchen_shopping\">Compras de cocina</string>\r\n\r\n    <!-- Housing -->\r\n    <string name=\"subcategory_rent\">Alquiler</string>\r\n    <string name=\"subcategory_dues\">Expensas</string>\r\n    <string name=\"subcategory_mortgage\">Pago de hipoteca</string>\r\n    <string name=\"subcategory_electricity\">Factura de electricidad</string>\r\n    <string name=\"subcategory_water\">Factura de agua</string>\r\n    <string name=\"subcategory_heating\">Calefacción</string>\r\n    <string name=\"subcategory_internet_phone\">Internet y teléfono</string>\r\n    <string name=\"subcategory_other_bills\">Otras Facturas</string>\r\n    <string name=\"subcategory_general_shopping\">Compras generales de comestibles</string>\r\n\r\n    <!-- Transportation -->\r\n    <string name=\"subcategory_fuel\">Combustible</string>\r\n    <string name=\"subcategory_public_transport\">Transporte público</string>\r\n    <string name=\"subcategory_car_maintenance\">Mantenimiento del auto</string>\r\n    <string name=\"subcategory_car_rental\">Alquiler de auto</string>\r\n    <string name=\"subcategory_taxi_uber\">Taxi/Uber</string>\r\n    <string name=\"subcategory_car_insurance\">Seguro del auto</string>\r\n    <string name=\"subcategory_mtv\">Impuesto vehicular</string>\r\n    <string name=\"subcategory_parking_fees\">Tarifas de estacionamiento</string>\r\n\r\n    <!-- Health -->\r\n    <string name=\"subcategory_doctor_appointment\">Cita médica</string>\r\n    <string name=\"subcategory_medicines\">Medicamentos</string>\r\n    <string name=\"subcategory_gym_membership\">Membresía del gimnasio</string>\r\n    <string name=\"subcategory_cosmetics\">Cosméticos</string>\r\n\r\n    <!-- Entertainment -->\r\n    <string name=\"subcategory_cinema_theater\">Cine y teatro</string>\r\n    <string name=\"subcategory_concerts_events\">Conciertos y eventos</string>\r\n    <string name=\"subcategory_subscriptions\">Suscripciones</string>\r\n    <string name=\"subcategory_books_magazines\">Libros y revistas</string>\r\n    <string name=\"subcategory_travel_vacation\">Viajes y vacaciones</string>\r\n    <string name=\"subcategory_games_apps\">Juegos y aplicaciones</string>\r\n\r\n    <!-- Education -->\r\n    <string name=\"subcategory_course_fees\">Tarifas de cursos</string>\r\n    <string name=\"subcategory_education_materials\">Materiales educativos</string>\r\n    <string name=\"subcategory_seminars\">Seminarios</string>\r\n    <string name=\"subcategory_online_courses\">Cursos en línea</string>\r\n\r\n    <!-- Shopping -->\r\n    <string name=\"subcategory_electronics\">Electrónicos</string>\r\n    <string name=\"subcategory_clothing\">Ropa</string>\r\n    <string name=\"subcategory_home_goods\">Artículos para el hogar</string>\r\n    <string name=\"subcategory_gifts\">Regalos</string>\r\n    <string name=\"subcategory_perfume\">Perfume</string>\r\n\r\n    <!-- Pets -->\r\n    <string name=\"subcategory_pet_food_toys\">Comida y juguetes</string>\r\n    <string name=\"subcategory_vet_services\">Servicios veterinarios</string>\r\n    <string name=\"subcategory_pet_insurance\">Seguro de mascotas</string>\r\n\r\n    <!-- Work -->\r\n    <string name=\"subcategory_work_meals\">Comidas de trabajo</string>\r\n    <string name=\"subcategory_office_supplies\">Suministros de oficina</string>\r\n    <string name=\"subcategory_business_travel\">Viajes de negocios</string>\r\n    <string name=\"subcategory_work_education\">Capacitación y seminarios</string>\r\n    <string name=\"subcategory_freelance_payments\">Pagos de trabajo independiente</string>\r\n\r\n    <!-- Tax -->\r\n    <string name=\"subcategory_tax_payments\">Pagos de impuestos</string>\r\n\r\n    <!-- Others -->\r\n    <string name=\"subcategory_other_expenses\">Otros Gastos</string>\r\n\r\n    <!-- ExpensesScreen - Empty state messages -->\r\n    <string name=\"no_search_results_found\">No se encontraron resultados de búsqueda</string>\r\n    <string name=\"no_expenses_yet\">Aún no hay gastos</string>\r\n    <string name=\"no_expenses_today\">No hay gastos hoy</string>\r\n    <string name=\"no_search_results_description\">No se encontraron resultados para \\\"%1$s\\\". Intente con un término de búsqueda diferente.</string>\r\n    <string name=\"first_expense_hint\">Presione el botón + para agregar su primer gasto</string>\r\n    <string name=\"add_expense_for_day_hint\">Presione el botón + para agregar gastos para este día</string>\r\n    <string name=\"calendar_tab\">Calendario</string>\r\n    <string name=\"expenses_tab\">Gastos</string>\r\n\r\n    <!-- PlanningUtils - Plan status and validation -->\r\n    <string name=\"plan_status_not_started\">No iniciado</string>\r\n    <string name=\"plan_status_completed\">Completado</string>\r\n    <string name=\"plan_status_active\">Activo</string>\r\n    <string name=\"validation_plan_name_empty\">El nombre del plan no puede estar vacío</string>\r\n    <string name=\"validation_monthly_income_positive\">Los ingresos mensuales deben ser mayores a 0</string>\r\n    <string name=\"validation_duration_positive\">La duración del plan debe ser mayor a 0</string>\r\n    <string name=\"validation_duration_max_10_years\">La duración del plan no puede ser más de 10 años</string>\r\n    <string name=\"validation_inflation_rate_range\">La tasa de inflación debe estar entre -50%% y 100%%</string>\r\n    <string name=\"duration_3_months\">3 Meses</string>\r\n    <string name=\"duration_6_months\">6 Meses</string>\r\n    <string name=\"duration_1_year\">1 Año</string>\r\n    <string name=\"duration_1_5_years\">1,5 Años</string>\r\n    <string name=\"duration_2_years\">2 Años</string>\r\n    <string name=\"duration_3_years\">3 Años</string>\r\n    <string name=\"duration_5_years\">5 Años</string>\r\n\r\n    <!-- PlanningViewModel - Error messages -->\r\n    <string name=\"error_loading_plan\">Error al cargar el plan: %s</string>\r\n    <string name=\"error_creating_plan\">Error al crear el plan: %s</string>\r\n    <string name=\"error_deleting_plan\">Error al eliminar el plan: %s</string>\r\n    <string name=\"error_updating_expense_data\">Error al actualizar los datos de gastos: %s</string>\r\n    <string name=\"error_updating_plan_calculations\">Error al actualizar los cálculos del plan: %s</string>\r\n    <string name=\"error_saving_changes\">Error al guardar los cambios: %s</string>\r\n\r\n    <!-- Category - Default categories -->\r\n    <string name=\"category_food\">Comida y Bebida</string>\r\n    <string name=\"category_housing\">Vivienda</string>\r\n    <string name=\"category_transportation\">Transporte</string>\r\n    <string name=\"category_health\">Salud y Cuidado Personal</string>\r\n    <string name=\"category_entertainment\">Entretenimiento y Pasatiempos</string>\r\n    <string name=\"category_education\">Educación</string>\r\n    <string name=\"category_shopping\">Compras</string>\r\n    <string name=\"category_pets\">Mascotas</string>\r\n    <string name=\"category_work\">Trabajo y Gastos Profesionales</string>\r\n    <string name=\"category_tax\">Impuestos y Gastos Legales</string>\r\n    <string name=\"category_donations\">Donaciones y Ayuda</string>\r\n    <string name=\"category_others\">Otros Pagos</string>\r\n</resources>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/values-es/strings.xml b/app/src/main/res/values-es/strings.xml
--- a/app/src/main/res/values-es/strings.xml	(revision 704fb63dbd103d83a77a5d2f59944f4c74685798)
+++ b/app/src/main/res/values-es/strings.xml	(date 1759316126925)
@@ -365,4 +365,19 @@
     <string name="category_tax">Impuestos y Gastos Legales</string>
     <string name="category_donations">Donaciones y Ayuda</string>
     <string name="category_others">Otros Pagos</string>
+    <!-- Billing Page -->
+    <string name="no_add_text">I don\'t want to bombard you with silly ads,
+        and I want you to be able to access all features without needing the premium version.
+        But I need income to keep developing. If you like my app and want to support me,
+        feel free to tip a cup of tea (Prices aren\'t affected by inflation here) :).</string>
+    <string name="buy_water">tip a water</string>
+    <string name="buy_bagel">tip a bagel</string>
+    <string name="buy_tea">tip a tea</string>
+    <string name="buy_coffee">tip a coffee</string>
+    <string name="buy_wrap">tip a wrap</string>
+    <string name="buy_burger">tip a burger</string>
+    <string name="buy_doner">tip a doner</string>
+    <string name="max_donation">suprise me</string>
+    <string name="recurring_total">"Total: "</string>
+    <string name="recurring_remaining">"Remaining: "</string>
 </resources>
\ No newline at end of file
